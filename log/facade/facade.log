2017-12-24 19:44:03.718  INFO 5644 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.ICouponScopeRuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 19:44:03.727  INFO 5644 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.ICouponService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 19:44:03.729  INFO 5644 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.ICouponTimeRuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 19:44:03.733  INFO 5644 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IGradeChangeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 19:44:03.735  INFO 5644 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.ILevelManageService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 19:44:03.738  INFO 5644 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IMessageService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 19:44:03.741  INFO 5644 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IPointStoreService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 19:44:03.743  INFO 5644 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IPointStoreTypeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 19:44:03.747  INFO 5644 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IQrcodeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 19:44:03.749  INFO 5644 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IReportService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 19:44:03.750  INFO 5644 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IRewardService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 19:44:03.752  INFO 5644 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.ISaverTicketService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 19:44:03.757  INFO 5644 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IUserPointHistoryService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 19:44:03.759  INFO 5644 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IUserService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 19:44:03.762  INFO 5644 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.pos.service.IRuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 19:44:03.764  INFO 5644 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.pos.service.IShopService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 19:44:03.767  INFO 5644 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.auth.service.IAccountService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 19:44:03.769  INFO 5644 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.auth.service.IRoleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 19:44:03.772  INFO 5644 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.auth.service.ISuggestionService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 19:44:03.774  INFO 5644 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.log.service.ILoginLogService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 19:44:03.776  INFO 5644 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.log.service.IOperationLogService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 19:44:03.779  INFO 5644 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.log.service.ITransferLogService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 19:44:03.869  INFO 5644 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$dc36f920] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 19:44:04.370  INFO 5644 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 11007 (http)
2017-12-24 19:44:04.387  INFO 5644 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2017-12-24 19:44:04.389  INFO 5644 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.15
2017-12-24 19:44:04.612  INFO 5644 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2017-12-24 19:44:04.612  INFO 5644 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2561 ms
2017-12-24 19:44:04.859  INFO 5644 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/services/*]
2017-12-24 19:44:04.866  INFO 5644 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2017-12-24 19:44:04.867  INFO 5644 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017-12-24 19:44:04.868  INFO 5644 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017-12-24 19:44:04.868  INFO 5644 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2017-12-24 19:44:05.177  INFO 5644 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6ec63f8: startup date [Sun Dec 24 19:44:05 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7a799159
2017-12-24 19:44:05.304  INFO 5644 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-12-24 19:44:06.049  INFO 5644 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@7c90b7b7: startup date [Sun Dec 24 19:44:06 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7a799159
2017-12-24 19:44:06.100  INFO 5644 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-12-24 19:44:06.348  INFO 5644 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2282400e: startup date [Sun Dec 24 19:44:06 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7a799159
2017-12-24 19:44:06.418  INFO 5644 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-12-24 19:44:06.649  INFO 5644 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@902fdbe: startup date [Sun Dec 24 19:44:06 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7a799159
2017-12-24 19:44:06.689  INFO 5644 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-12-24 19:44:15.402  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7a799159: startup date [Sun Dec 24 19:44:02 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@409c54f
2017-12-24 19:44:15.546  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/auth/accounts],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.findAccounts(com.pcp.api.auth.domain.AccountInfo)
2017-12-24 19:44:15.548  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/auth/checkLogin],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.accountLogin(com.pcp.api.auth.domain.AccountInfo)
2017-12-24 19:44:15.548  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/auth/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.saveAccount(com.pcp.api.auth.domain.AccountInfo)
2017-12-24 19:44:15.548  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/auth/account/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.findAccountById(java.lang.String)
2017-12-24 19:44:15.549  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/saveShopAccount],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.saveShopAccount(com.pcp.api.auth.domain.AccountInfo)
2017-12-24 19:44:15.549  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.findRoles(com.pcp.api.auth.domain.RoleInfo)
2017-12-24 19:44:15.549  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.saveRole(com.pcp.api.auth.domain.RoleInfo)
2017-12-24 19:44:15.549  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete/roleId],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.deleteRole(com.pcp.api.auth.domain.RoleInfo)
2017-12-24 19:44:15.550  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/roleId/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.findRoleById(java.lang.String)
2017-12-24 19:44:15.550  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/save/RoleAccount],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.saveRoleAccount(com.pcp.api.auth.domain.AccountInfo)
2017-12-24 19:44:15.550  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/roleAccount/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.pageRoleAccount(com.pcp.api.auth.domain.RoleInfo)
2017-12-24 19:44:15.550  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/suggests/save],methods=[PUT]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.saveSuggest(com.pcp.api.auth.domain.SuggestionInfo)
2017-12-24 19:44:15.550  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/suggests/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.findSuggestById(java.lang.String)
2017-12-24 19:44:15.551  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/suggests],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.findSuggests(com.pcp.api.auth.domain.SuggestionInfo)
2017-12-24 19:44:15.551  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/auth/delete/id],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.deleteAccountById(com.pcp.api.auth.domain.AccountInfo)
2017-12-24 19:44:15.584  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findUsers(com.pcp.api.crm.domain.UserInfo)
2017-12-24 19:44:15.585  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findUserById(java.lang.String)
2017-12-24 19:44:15.585  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/delete/],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteUserById(com.pcp.api.crm.domain.UserInfo)
2017-12-24 19:44:15.586  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register || /user/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveUser(com.pcp.api.crm.domain.UserInfo)
2017-12-24 19:44:15.586  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/updateCardLevel],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.updateCardLevel(com.pcp.api.crm.domain.UserInfo)
2017-12-24 19:44:15.586  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointHistory/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findPointHistory(com.pcp.api.crm.domain.UserPointHistoryInfo)
2017-12-24 19:44:15.590  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointHistory/save],methods=[PUT]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.savePointHistory(com.pcp.api.crm.domain.UserPointHistoryInfo)
2017-12-24 19:44:15.590  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/findByMobile/{mobile}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findByMobile(java.lang.String)
2017-12-24 19:44:15.591  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointStore/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findPointStores(com.pcp.api.crm.domain.PointStoreInfo)
2017-12-24 19:44:15.591  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointStore/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deletePointStore(java.lang.String)
2017-12-24 19:44:15.591  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/advertise/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageAdvertise(com.pcp.api.crm.domain.AdvertiseInfo)
2017-12-24 19:44:15.592  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/advertise/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteAdvertise(java.lang.String)
2017-12-24 19:44:15.592  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/channel/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveChannel(com.pcp.api.crm.domain.ChannelInfo)
2017-12-24 19:44:15.592  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/channel/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findChannelById(java.lang.String)
2017-12-24 19:44:15.592  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/channel/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageChannel(com.pcp.api.crm.domain.ChannelInfo)
2017-12-24 19:44:15.593  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/channel/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteChannel(java.lang.String)
2017-12-24 19:44:15.593  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/qrcode/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveQrcode(com.pcp.api.crm.domain.QrcodeInfo)
2017-12-24 19:44:15.593  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/qrcode/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findQrcodeById(java.lang.String)
2017-12-24 19:44:15.593  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/qrcode/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageQrcode(com.pcp.api.crm.domain.QrcodeInfo)
2017-12-24 19:44:15.594  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/qrcode/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteQrcode(java.lang.String)
2017-12-24 19:44:15.594  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/levelManage/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveLevelManage(com.pcp.api.crm.domain.LevelManageInfo)
2017-12-24 19:44:15.594  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/levelManage/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageLevelManage(com.pcp.api.crm.domain.LevelManageInfo)
2017-12-24 19:44:15.594  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/reward/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveReward(com.pcp.api.crm.domain.RewardInfo)
2017-12-24 19:44:15.595  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/reward/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findRewardById(java.lang.String)
2017-12-24 19:44:15.595  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/reward/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageReward(com.pcp.api.crm.domain.RewardInfo)
2017-12-24 19:44:15.595  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/reward/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteReward(java.lang.String)
2017-12-24 19:44:15.595  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authority/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageAuthority(com.pcp.api.crm.domain.AuthorityInfo)
2017-12-24 19:44:15.596  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authorityId/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteAuthority(java.lang.String)
2017-12-24 19:44:15.596  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/message/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageMessage(com.pcp.api.crm.domain.MessageInfo)
2017-12-24 19:44:15.596  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/message/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveMessage(com.pcp.api.crm.domain.MessageInfo)
2017-12-24 19:44:15.596  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/messageId/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findMessageById(java.lang.String)
2017-12-24 19:44:15.596  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/deleteMessage/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteMessage(java.lang.String)
2017-12-24 19:44:15.597  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/saverTicket/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageSaverTicket(com.pcp.api.crm.domain.SaverTicketInfo)
2017-12-24 19:44:15.597  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/saverTicket/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveSaverTicket(com.pcp.api.crm.domain.SaverTicketInfo)
2017-12-24 19:44:15.597  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/qrcodeShop/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveQrcodeShop(com.pcp.api.crm.domain.QrcodeInfo)
2017-12-24 19:44:15.597  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findCoupons(com.pcp.api.crm.domain.CouponInfo)
2017-12-24 19:44:15.597  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pms/couponId/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findCouponById(java.lang.String)
2017-12-24 19:44:15.598  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/{code}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findCouponByCode(java.lang.String)
2017-12-24 19:44:15.598  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/typeList],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findCouponTypes(com.pcp.api.crm.domain.CouponTypeInfo)
2017-12-24 19:44:15.598  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/couponType],methods=[PUT]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveCouponType(com.pcp.api.crm.domain.CouponTypeInfo)
2017-12-24 19:44:15.598  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/generate],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.generateCoupons(java.lang.String,java.lang.Integer)
2017-12-24 19:44:15.598  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/delete],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteCoupon(com.pcp.api.crm.domain.CouponTypeInfo)
2017-12-24 19:44:15.598  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/type/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteCouponType(java.lang.String)
2017-12-24 19:44:15.599  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/send],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.sendCoupon(com.pcp.api.crm.domain.CouponInfo)
2017-12-24 19:44:15.599  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/send/history],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findCouponSents(com.pcp.api.crm.domain.CouponSentInfo)
2017-12-24 19:44:15.599  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userLogin],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.userLogin(com.pcp.api.crm.domain.UserInfo)
2017-12-24 19:44:15.599  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/exchange],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.exChangeCoupon(com.pcp.api.crm.domain.CouponInfo)
2017-12-24 19:44:15.599  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/employeeCard],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.employeeCard(com.pcp.api.crm.domain.UserInfo)
2017-12-24 19:44:15.600  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/{userCode}/{code}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.couponVerify(java.lang.String,java.lang.String)
2017-12-24 19:44:15.600  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteCouponById(java.lang.String)
2017-12-24 19:44:15.600  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/mobileCovert],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.mobileCovert(com.pcp.api.crm.domain.UserInfo)
2017-12-24 19:44:15.601  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/scan/qrcode],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.scanQrcode(com.pcp.api.crm.domain.QrcodeInfo)
2017-12-24 19:44:15.601  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/rewards/user],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findRewardUser(com.pcp.api.crm.domain.RewardUserInfo)
2017-12-24 19:44:15.601  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/couponDraw],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.drawCoupon(com.pcp.api.crm.domain.CouponInfo)
2017-12-24 19:44:15.601  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointHistory/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findPointHistoryById(java.lang.String)
2017-12-24 19:44:15.602  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointStore/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.savePointStoreInfo(com.pcp.api.crm.domain.PointStoreInfo)
2017-12-24 19:44:15.602  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointStoreId/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findPointStoreById(java.lang.String)
2017-12-24 19:44:15.602  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/advertise/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveAdvertiseInfo(com.pcp.api.crm.domain.AdvertiseInfo)
2017-12-24 19:44:15.602  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/advertise/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findAdvertiseById(java.lang.String)
2017-12-24 19:44:15.603  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/levelManage/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findLevelManageById(java.lang.String)
2017-12-24 19:44:15.603  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/levelManage/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteLevelManage(java.lang.String)
2017-12-24 19:44:15.603  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authority/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveAuthorityInfo(com.pcp.api.crm.domain.AuthorityInfo)
2017-12-24 19:44:15.603  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authorityId/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findAuthorityById(java.lang.String)
2017-12-24 19:44:15.603  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authorityLine/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveAuthorityLine(com.pcp.api.crm.domain.AuthorityLineInfo)
2017-12-24 19:44:15.604  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authorityLine/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteAuthorityLines(java.lang.String)
2017-12-24 19:44:15.604  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authorityLine/find/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findAuthorityLineById(java.lang.String)
2017-12-24 19:44:15.605  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authorityLine/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageAuthorityLine(com.pcp.api.crm.domain.AuthorityLineInfo)
2017-12-24 19:44:15.605  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointStoreType/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pagePointStoreType(com.pcp.api.crm.domain.PointStoreTypeInfo)
2017-12-24 19:44:15.605  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointStoreType/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findPointStoreTypeById(java.lang.String)
2017-12-24 19:44:15.606  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointStoreType/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.savePointStoreType(com.pcp.api.crm.domain.PointStoreTypeInfo)
2017-12-24 19:44:15.606  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/saverTicket/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findSaverTicketById(java.lang.String)
2017-12-24 19:44:15.606  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/saverTicket/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteSaverTicket(java.lang.String)
2017-12-24 19:44:15.607  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/qrcodeChannel/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveQrcodeChannel(com.pcp.api.crm.domain.QrcodeInfo)
2017-12-24 19:44:15.607  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/ChannelQrcode/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageQrcodeChannel(com.pcp.api.crm.domain.ChannelInfo)
2017-12-24 19:44:15.607  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/couponInfo/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findCouponInfoById(java.lang.String)
2017-12-24 19:44:15.608  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/couponScopeRule/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageCouponScopeRule(com.pcp.api.crm.domain.CouponScopeRuleInfo)
2017-12-24 19:44:15.609  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/couponTimeRule/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageCouponTimeRule(com.pcp.api.crm.domain.CouponTimeRuleInfo)
2017-12-24 19:44:15.609  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/export/excel],methods=[POST],produces=[application/octet-stream]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.InputStreamResource> com.pcp.facade.ExportFacade.exportExcel(javax.servlet.http.HttpServletRequest)
2017-12-24 19:44:15.612  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/log/saveOperation],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.LogFacade.saveOperationLog(java.util.Map<java.lang.String, java.lang.Object>)
2017-12-24 19:44:15.612  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/logPage/transferLog],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.LogFacade.finTransferLogs(com.pcp.api.log.api.TransferLogInfo)
2017-12-24 19:44:15.612  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/log/findLoginLogs],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.LogFacade.finLoginLogs(com.pcp.api.log.api.LoginLogInfo)
2017-12-24 19:44:15.613  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/log/findOperation],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.LogFacade.finOperationLogs(com.pcp.api.log.api.OperationLogInfo)
2017-12-24 19:44:15.613  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/logSave/transferLog],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.LogFacade.saveTransferLog(com.pcp.api.log.api.TransferLogInfo)
2017-12-24 19:44:15.613  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/log/operationLog/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.LogFacade.finOperationById(java.lang.String)
2017-12-24 19:44:15.613  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/log/saveLoginLog],methods=[POST]}" onto public com.pcp.common.JsonResponse com.pcp.facade.LogFacade.saveLoginLog(java.util.Map<java.lang.String, java.lang.Object>)
2017-12-24 19:44:15.613  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/log/transferLog/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.LogFacade.finTransferLogById(java.lang.String)
2017-12-24 19:44:15.615  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/shop/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.findShopById(java.lang.String)
2017-12-24 19:44:15.615  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/shopCode/code/{code}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.findShopByCode(java.lang.String)
2017-12-24 19:44:15.616  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/shop/list],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.findShops(com.pcp.api.pos.domain.ShopInfo)
2017-12-24 19:44:15.616  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/rule/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.saveRule(com.pcp.api.pos.domain.RuleInfo)
2017-12-24 19:44:15.616  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/ruleLine/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.saveLineRule(com.pcp.api.pos.domain.RuleLineInfo)
2017-12-24 19:44:15.616  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/ruleLine/list],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.findRuleLines(com.pcp.api.pos.domain.RuleLineInfo)
2017-12-24 19:44:15.617  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/ruleLineId/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.findRuleLineById(java.lang.String)
2017-12-24 19:44:15.617  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/ruleId/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.findRuleById(java.lang.String)
2017-12-24 19:44:15.617  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/rule/list],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.findRules(com.pcp.api.pos.domain.RuleInfo)
2017-12-24 19:44:15.621  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017-12-24 19:44:15.622  INFO 5644 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017-12-24 19:44:15.761  INFO 5644 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-12-24 19:44:15.761  INFO 5644 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-12-24 19:44:15.902  INFO 5644 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-12-24 19:44:17.027  WARN 5644 --- [main] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2017-12-24 19:44:17.027  INFO 5644 --- [main] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2017-12-24 19:44:17.035  WARN 5644 --- [main] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2017-12-24 19:44:17.036  INFO 5644 --- [main] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2017-12-24 19:44:17.430  INFO 5644 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2017-12-24 19:44:17.453  INFO 5644 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'environmentManager' has been autodetected for JMX exposure
2017-12-24 19:44:17.456  INFO 5644 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2017-12-24 19:44:17.459  INFO 5644 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'refreshScope' has been autodetected for JMX exposure
2017-12-24 19:44:17.462  INFO 5644 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2017-12-24 19:44:17.489  INFO 5644 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2017-12-24 19:44:17.552  INFO 5644 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=7a799159,type=ConfigurationPropertiesRebinder]
2017-12-24 19:44:17.858  INFO 5644 --- [main] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 0
2017-12-24 19:44:17.873  INFO 5644 --- [main] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2017-12-24 19:44:17.995  INFO 5644 --- [main] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2017-12-24 19:44:18.119  INFO 5644 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using JSON encoding codec LegacyJacksonJson
2017-12-24 19:44:18.120  INFO 5644 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using JSON decoding codec LegacyJacksonJson
2017-12-24 19:44:18.329  INFO 5644 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using XML encoding codec XStreamXml
2017-12-24 19:44:18.329  INFO 5644 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using XML decoding codec XStreamXml
2017-12-24 19:44:19.255  INFO 5644 --- [main] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2017-12-24 19:44:19.485  INFO 5644 --- [main] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2017-12-24 19:44:19.485  INFO 5644 --- [main] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2017-12-24 19:44:19.486  INFO 5644 --- [main] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2017-12-24 19:44:19.486  INFO 5644 --- [main] com.netflix.discovery.DiscoveryClient    : Application is null : false
2017-12-24 19:44:19.486  INFO 5644 --- [main] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2017-12-24 19:44:19.486  INFO 5644 --- [main] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2017-12-24 19:44:19.486  INFO 5644 --- [main] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2017-12-24 19:44:19.761  INFO 5644 --- [main] com.netflix.discovery.DiscoveryClient    : The response status is 200
2017-12-24 19:44:19.765  INFO 5644 --- [main] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2017-12-24 19:44:19.770  INFO 5644 --- [main] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 12
2017-12-24 19:44:19.776  INFO 5644 --- [main] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1514115859776 with initial instances count: 5
2017-12-24 19:44:19.820  INFO 5644 --- [main] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application facade with eureka with status UP
2017-12-24 19:44:19.820  INFO 5644 --- [main] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1514115859820, current=UP, previous=STARTING]
2017-12-24 19:44:19.823  INFO 5644 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_FACADE/Jason:facade:11007: registering service...
2017-12-24 19:44:19.891  INFO 5644 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_FACADE/Jason:facade:11007 - registration status: 204
2017-12-24 19:44:19.927  INFO 5644 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 11007 (http)
2017-12-24 19:44:19.928  INFO 5644 --- [main] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 11007
2017-12-24 19:44:19.935  INFO 5644 --- [main] com.pcp.FacadeBootstrap                  : Started FacadeBootstrap in 22.247 seconds (JVM running for 26.206)
2017-12-24 19:45:18.485  INFO 5644 --- [http-nio-11007-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-12-24 19:45:18.485  INFO 5644 --- [http-nio-11007-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2017-12-24 19:45:18.576  INFO 5644 --- [http-nio-11007-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 90 ms
2017-12-24 19:45:18.703  INFO 5644 --- [http-nio-11007-exec-1] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@464a4cd4: startup date [Sun Dec 24 19:45:18 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7a799159
2017-12-24 19:45:18.799  INFO 5644 --- [http-nio-11007-exec-1] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-12-24 19:45:19.114  INFO 5644 --- [http-nio-11007-exec-1] c.netflix.config.ChainedDynamicProperty  : Flipping property: crm.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-24 19:45:19.143  INFO 5644 --- [http-nio-11007-exec-1] c.n.u.concurrent.ShutdownEnabledTimer    : Shutdown hook installed for: NFLoadBalancer-PingTimer-crm
2017-12-24 19:45:19.178  INFO 5644 --- [http-nio-11007-exec-1] c.netflix.loadbalancer.BaseLoadBalancer  : Client: crm instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=crm,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2017-12-24 19:45:19.188  INFO 5644 --- [http-nio-11007-exec-1] c.n.l.DynamicServerListLoadBalancer      : Using serverListUpdater PollingServerListUpdater
2017-12-24 19:45:19.226  INFO 5644 --- [http-nio-11007-exec-1] c.netflix.config.ChainedDynamicProperty  : Flipping property: crm.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-24 19:45:19.229  INFO 5644 --- [http-nio-11007-exec-1] c.n.l.DynamicServerListLoadBalancer      : DynamicServerListLoadBalancer for client crm initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=crm,current list of Servers=[Jason:11009],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:Jason:11009;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@665c20f8
2017-12-24 19:45:20.195  INFO 5644 --- [PollingServerListUpdater-0] c.netflix.config.ChainedDynamicProperty  : Flipping property: crm.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-24 19:46:39.868  INFO 5644 --- [http-nio-11007-exec-4] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@58434b3c: startup date [Sun Dec 24 19:46:39 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7a799159
2017-12-24 19:46:39.929  INFO 5644 --- [http-nio-11007-exec-4] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-12-24 19:46:39.982  INFO 5644 --- [http-nio-11007-exec-4] c.netflix.config.ChainedDynamicProperty  : Flipping property: pos.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-24 19:46:39.987  INFO 5644 --- [http-nio-11007-exec-4] c.n.u.concurrent.ShutdownEnabledTimer    : Shutdown hook installed for: NFLoadBalancer-PingTimer-pos
2017-12-24 19:46:39.988  INFO 5644 --- [http-nio-11007-exec-4] c.netflix.loadbalancer.BaseLoadBalancer  : Client: pos instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=pos,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2017-12-24 19:46:39.990  INFO 5644 --- [http-nio-11007-exec-4] c.n.l.DynamicServerListLoadBalancer      : Using serverListUpdater PollingServerListUpdater
2017-12-24 19:46:39.992  INFO 5644 --- [http-nio-11007-exec-4] c.netflix.config.ChainedDynamicProperty  : Flipping property: pos.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-24 19:46:39.993  INFO 5644 --- [http-nio-11007-exec-4] c.n.l.DynamicServerListLoadBalancer      : DynamicServerListLoadBalancer for client pos initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=pos,current list of Servers=[Jason:11002],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:Jason:11002;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@a49ff13
2017-12-24 19:46:40.996  INFO 5644 --- [PollingServerListUpdater-1] c.netflix.config.ChainedDynamicProperty  : Flipping property: pos.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-24 19:49:19.494  INFO 5644 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2017-12-24 19:54:19.499  INFO 5644 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2017-12-24 19:59:19.504  INFO 5644 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2017-12-24 20:14:26.563  INFO 5644 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2017-12-24 20:14:28.319  INFO 5644 --- [DiscoveryClient-CacheRefreshExecutor-0] o.a.http.impl.client.DefaultHttpClient   : I/O exception (org.apache.http.NoHttpResponseException) caught when processing request to {}->http://127.0.0.1:11001: The target server failed to respond
2017-12-24 20:14:28.346  INFO 5644 --- [DiscoveryClient-CacheRefreshExecutor-0] o.a.http.impl.client.DefaultHttpClient   : Retrying request to {}->http://127.0.0.1:11001
2017-12-24 20:16:11.741  INFO 5644 --- [http-nio-11007-exec-3] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6fcaf8b: startup date [Sun Dec 24 20:16:11 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7a799159
2017-12-24 20:16:11.789  INFO 5644 --- [http-nio-11007-exec-3] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-12-24 20:16:11.807  INFO 5644 --- [http-nio-11007-exec-3] c.netflix.config.ChainedDynamicProperty  : Flipping property: pcpLog.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-24 20:16:11.809  INFO 5644 --- [http-nio-11007-exec-3] c.n.u.concurrent.ShutdownEnabledTimer    : Shutdown hook installed for: NFLoadBalancer-PingTimer-pcpLog
2017-12-24 20:16:11.810  INFO 5644 --- [http-nio-11007-exec-3] c.netflix.loadbalancer.BaseLoadBalancer  : Client: pcpLog instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=pcpLog,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2017-12-24 20:16:11.811  INFO 5644 --- [http-nio-11007-exec-3] c.n.l.DynamicServerListLoadBalancer      : Using serverListUpdater PollingServerListUpdater
2017-12-24 20:16:11.812  INFO 5644 --- [http-nio-11007-exec-3] c.netflix.config.ChainedDynamicProperty  : Flipping property: pcpLog.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-24 20:16:11.813  INFO 5644 --- [http-nio-11007-exec-3] c.n.l.DynamicServerListLoadBalancer      : DynamicServerListLoadBalancer for client pcpLog initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=pcpLog,current list of Servers=[Jason:11008],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:Jason:11008;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@4c451a8d
2017-12-24 20:16:12.813  INFO 5644 --- [PollingServerListUpdater-0] c.netflix.config.ChainedDynamicProperty  : Flipping property: pcpLog.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-24 20:19:26.604  INFO 5644 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2017-12-24 20:24:26.609  INFO 5644 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2017-12-24 20:29:26.613  INFO 5644 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2017-12-24 20:33:02.564  INFO 5644 --- [http-nio-11007-exec-4] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1037844f: startup date [Sun Dec 24 20:33:02 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7a799159
2017-12-24 20:33:02.632  INFO 5644 --- [http-nio-11007-exec-4] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-12-24 20:33:02.673  INFO 5644 --- [http-nio-11007-exec-4] c.netflix.config.ChainedDynamicProperty  : Flipping property: auth.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-24 20:33:02.675  INFO 5644 --- [http-nio-11007-exec-4] c.n.u.concurrent.ShutdownEnabledTimer    : Shutdown hook installed for: NFLoadBalancer-PingTimer-auth
2017-12-24 20:33:02.675  INFO 5644 --- [http-nio-11007-exec-4] c.netflix.loadbalancer.BaseLoadBalancer  : Client: auth instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=auth,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2017-12-24 20:33:02.677  INFO 5644 --- [http-nio-11007-exec-4] c.n.l.DynamicServerListLoadBalancer      : Using serverListUpdater PollingServerListUpdater
2017-12-24 20:33:02.681  INFO 5644 --- [http-nio-11007-exec-4] c.netflix.config.ChainedDynamicProperty  : Flipping property: auth.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-24 20:33:02.685  INFO 5644 --- [http-nio-11007-exec-4] c.n.l.DynamicServerListLoadBalancer      : DynamicServerListLoadBalancer for client auth initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=auth,current list of Servers=[Jason:11004],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:Jason:11004;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@2a065194
2017-12-24 20:33:03.679  INFO 5644 --- [PollingServerListUpdater-1] c.netflix.config.ChainedDynamicProperty  : Flipping property: auth.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-24 20:34:26.619  INFO 5644 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2017-12-24 20:39:20.100  INFO 10312 --- [main] c.c.c.ConfigServicePropertySourceLocator : Fetching config from server at: http://localhost:8888
2017-12-24 20:39:21.269  WARN 10312 --- [main] c.c.c.ConfigServicePropertySourceLocator : Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/facade/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2017-12-24 20:39:21.280  INFO 10312 --- [main] com.pcp.FacadeBootstrap                  : No active profile set, falling back to default profiles: default
2017-12-24 20:39:21.315  INFO 10312 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@273842a6: startup date [Sun Dec 24 20:39:21 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@573906eb
2017-12-24 20:39:22.126  INFO 10312 --- [main] o.s.b.f.xml.XmlBeanDefinitionReader      : Loading XML bean definitions from class path resource [facade-bean.xml]
2017-12-24 20:39:22.700  INFO 10312 --- [main] o.s.cloud.context.scope.GenericScope     : BeanFactory id=b351ba1f-cc86-3770-a30e-47b8ce2f7e98
2017-12-24 20:39:22.724  INFO 10312 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-12-24 20:39:22.799  INFO 10312 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 
2017-12-24 20:39:22.800  INFO 10312 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'taskExecutor' of type [org.springframework.scheduling.config.TaskExecutorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:39:22.800  INFO 10312 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'taskExecutor' of type [org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:39:22.844  INFO 10312 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'taskScheduler'
2017-12-24 20:39:22.844  INFO 10312 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'taskScheduler' of type [org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:39:22.857  INFO 10312 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IAdvertiseService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:39:22.859  INFO 10312 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IAuthorityService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:39:22.860  INFO 10312 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IChannelService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:39:22.862  INFO 10312 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.ICouponScopeRuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:39:22.863  INFO 10312 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.ICouponService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:39:22.865  INFO 10312 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.ICouponTimeRuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:39:22.867  INFO 10312 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IGradeChangeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:39:22.868  INFO 10312 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.ILevelManageService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:39:22.869  INFO 10312 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IMessageService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:39:22.871  INFO 10312 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IPointStoreService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:39:22.872  INFO 10312 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IPointStoreTypeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:39:22.874  INFO 10312 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IQrcodeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:39:22.875  INFO 10312 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IReportService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:39:22.876  INFO 10312 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IRewardService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:39:22.877  INFO 10312 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.ISaverTicketService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:39:22.881  INFO 10312 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IUserPointHistoryService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:39:22.882  INFO 10312 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IUserService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:39:22.884  INFO 10312 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.pos.service.IRuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:39:22.886  INFO 10312 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.pos.service.IShopService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:39:22.887  INFO 10312 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.auth.service.IAccountService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:39:22.889  INFO 10312 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.auth.service.IRoleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:39:22.891  INFO 10312 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.auth.service.ISuggestionService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:39:22.892  INFO 10312 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.log.service.ILoginLogService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:39:22.894  INFO 10312 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.log.service.IOperationLogService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:39:22.895  INFO 10312 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.log.service.ITransferLogService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:39:22.967  INFO 10312 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$aa3f6e40] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:39:23.359  INFO 10312 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 11007 (http)
2017-12-24 20:39:23.374  INFO 10312 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2017-12-24 20:39:23.375  INFO 10312 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.15
2017-12-24 20:39:23.535  INFO 10312 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2017-12-24 20:39:23.536  INFO 10312 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2221 ms
2017-12-24 20:39:23.768  INFO 10312 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/services/*]
2017-12-24 20:39:23.775  INFO 10312 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2017-12-24 20:39:23.776  INFO 10312 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017-12-24 20:39:23.776  INFO 10312 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017-12-24 20:39:23.776  INFO 10312 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2017-12-24 20:39:23.880  INFO 10312 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@30db5536: startup date [Sun Dec 24 20:39:23 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@273842a6
2017-12-24 20:39:23.923  INFO 10312 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-12-24 20:39:24.280  INFO 10312 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@78da899f: startup date [Sun Dec 24 20:39:24 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@273842a6
2017-12-24 20:39:24.314  INFO 10312 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-12-24 20:39:24.557  INFO 10312 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@62a54948: startup date [Sun Dec 24 20:39:24 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@273842a6
2017-12-24 20:39:24.589  INFO 10312 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-12-24 20:39:24.735  INFO 10312 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@357bc488: startup date [Sun Dec 24 20:39:24 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@273842a6
2017-12-24 20:39:24.757  INFO 10312 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-12-24 20:39:26.290  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@273842a6: startup date [Sun Dec 24 20:39:21 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@573906eb
2017-12-24 20:39:26.373  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/auth/delete/id],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.deleteAccountById(com.pcp.api.auth.domain.AccountInfo)
2017-12-24 20:39:26.375  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/auth/accounts],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.findAccounts(com.pcp.api.auth.domain.AccountInfo)
2017-12-24 20:39:26.375  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/auth/checkLogin],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.accountLogin(com.pcp.api.auth.domain.AccountInfo)
2017-12-24 20:39:26.376  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/auth/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.saveAccount(com.pcp.api.auth.domain.AccountInfo)
2017-12-24 20:39:26.376  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/auth/account/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.findAccountById(java.lang.String)
2017-12-24 20:39:26.376  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/saveShopAccount],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.saveShopAccount(com.pcp.api.auth.domain.AccountInfo)
2017-12-24 20:39:26.376  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.findRoles(com.pcp.api.auth.domain.RoleInfo)
2017-12-24 20:39:26.377  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.saveRole(com.pcp.api.auth.domain.RoleInfo)
2017-12-24 20:39:26.377  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete/roleId],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.deleteRole(com.pcp.api.auth.domain.RoleInfo)
2017-12-24 20:39:26.377  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/roleId/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.findRoleById(java.lang.String)
2017-12-24 20:39:26.377  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/save/RoleAccount],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.saveRoleAccount(com.pcp.api.auth.domain.AccountInfo)
2017-12-24 20:39:26.377  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/roleAccount/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.pageRoleAccount(com.pcp.api.auth.domain.RoleInfo)
2017-12-24 20:39:26.378  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/suggests/save],methods=[PUT]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.saveSuggest(com.pcp.api.auth.domain.SuggestionInfo)
2017-12-24 20:39:26.378  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/suggests/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.findSuggestById(java.lang.String)
2017-12-24 20:39:26.378  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/suggests],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.findSuggests(com.pcp.api.auth.domain.SuggestionInfo)
2017-12-24 20:39:26.410  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointHistory/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findPointHistoryById(java.lang.String)
2017-12-24 20:39:26.411  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointStore/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.savePointStoreInfo(com.pcp.api.crm.domain.PointStoreInfo)
2017-12-24 20:39:26.411  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointStoreId/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findPointStoreById(java.lang.String)
2017-12-24 20:39:26.411  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/advertise/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveAdvertiseInfo(com.pcp.api.crm.domain.AdvertiseInfo)
2017-12-24 20:39:26.412  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/advertise/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findAdvertiseById(java.lang.String)
2017-12-24 20:39:26.412  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/levelManage/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findLevelManageById(java.lang.String)
2017-12-24 20:39:26.412  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/levelManage/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteLevelManage(java.lang.String)
2017-12-24 20:39:26.413  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authority/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveAuthorityInfo(com.pcp.api.crm.domain.AuthorityInfo)
2017-12-24 20:39:26.413  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authorityId/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findAuthorityById(java.lang.String)
2017-12-24 20:39:26.413  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authorityLine/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveAuthorityLine(com.pcp.api.crm.domain.AuthorityLineInfo)
2017-12-24 20:39:26.413  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authorityLine/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteAuthorityLines(java.lang.String)
2017-12-24 20:39:26.414  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authorityLine/find/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findAuthorityLineById(java.lang.String)
2017-12-24 20:39:26.414  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authorityLine/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageAuthorityLine(com.pcp.api.crm.domain.AuthorityLineInfo)
2017-12-24 20:39:26.415  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointStoreType/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pagePointStoreType(com.pcp.api.crm.domain.PointStoreTypeInfo)
2017-12-24 20:39:26.415  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointStoreType/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findPointStoreTypeById(java.lang.String)
2017-12-24 20:39:26.415  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointStoreType/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.savePointStoreType(com.pcp.api.crm.domain.PointStoreTypeInfo)
2017-12-24 20:39:26.416  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/saverTicket/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findSaverTicketById(java.lang.String)
2017-12-24 20:39:26.416  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/saverTicket/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteSaverTicket(java.lang.String)
2017-12-24 20:39:26.416  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/qrcodeChannel/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveQrcodeChannel(com.pcp.api.crm.domain.QrcodeInfo)
2017-12-24 20:39:26.416  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/ChannelQrcode/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageQrcodeChannel(com.pcp.api.crm.domain.ChannelInfo)
2017-12-24 20:39:26.416  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/couponInfo/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findCouponInfoById(java.lang.String)
2017-12-24 20:39:26.417  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/couponScopeRule/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageCouponScopeRule(com.pcp.api.crm.domain.CouponScopeRuleInfo)
2017-12-24 20:39:26.417  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/couponTimeRule/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageCouponTimeRule(com.pcp.api.crm.domain.CouponTimeRuleInfo)
2017-12-24 20:39:26.417  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findUsers(com.pcp.api.crm.domain.UserInfo)
2017-12-24 20:39:26.417  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findUserById(java.lang.String)
2017-12-24 20:39:26.417  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/delete/],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteUserById(com.pcp.api.crm.domain.UserInfo)
2017-12-24 20:39:26.418  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register || /user/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveUser(com.pcp.api.crm.domain.UserInfo)
2017-12-24 20:39:26.418  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/updateCardLevel],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.updateCardLevel(com.pcp.api.crm.domain.UserInfo)
2017-12-24 20:39:26.418  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointHistory/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findPointHistory(com.pcp.api.crm.domain.UserPointHistoryInfo)
2017-12-24 20:39:26.418  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointHistory/save],methods=[PUT]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.savePointHistory(com.pcp.api.crm.domain.UserPointHistoryInfo)
2017-12-24 20:39:26.418  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/findByMobile/{mobile}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findByMobile(java.lang.String)
2017-12-24 20:39:26.419  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointStore/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findPointStores(com.pcp.api.crm.domain.PointStoreInfo)
2017-12-24 20:39:26.419  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointStore/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deletePointStore(java.lang.String)
2017-12-24 20:39:26.419  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/advertise/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageAdvertise(com.pcp.api.crm.domain.AdvertiseInfo)
2017-12-24 20:39:26.419  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/advertise/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteAdvertise(java.lang.String)
2017-12-24 20:39:26.419  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/channel/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveChannel(com.pcp.api.crm.domain.ChannelInfo)
2017-12-24 20:39:26.419  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/channel/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findChannelById(java.lang.String)
2017-12-24 20:39:26.420  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/channel/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageChannel(com.pcp.api.crm.domain.ChannelInfo)
2017-12-24 20:39:26.420  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/channel/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteChannel(java.lang.String)
2017-12-24 20:39:26.420  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/qrcode/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveQrcode(com.pcp.api.crm.domain.QrcodeInfo)
2017-12-24 20:39:26.421  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/qrcode/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findQrcodeById(java.lang.String)
2017-12-24 20:39:26.421  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/qrcode/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageQrcode(com.pcp.api.crm.domain.QrcodeInfo)
2017-12-24 20:39:26.421  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/qrcode/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteQrcode(java.lang.String)
2017-12-24 20:39:26.421  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/levelManage/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveLevelManage(com.pcp.api.crm.domain.LevelManageInfo)
2017-12-24 20:39:26.421  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/levelManage/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageLevelManage(com.pcp.api.crm.domain.LevelManageInfo)
2017-12-24 20:39:26.422  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/reward/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveReward(com.pcp.api.crm.domain.RewardInfo)
2017-12-24 20:39:26.422  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/reward/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findRewardById(java.lang.String)
2017-12-24 20:39:26.423  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/reward/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageReward(com.pcp.api.crm.domain.RewardInfo)
2017-12-24 20:39:26.423  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/reward/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteReward(java.lang.String)
2017-12-24 20:39:26.423  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authority/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageAuthority(com.pcp.api.crm.domain.AuthorityInfo)
2017-12-24 20:39:26.423  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authorityId/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteAuthority(java.lang.String)
2017-12-24 20:39:26.423  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/message/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageMessage(com.pcp.api.crm.domain.MessageInfo)
2017-12-24 20:39:26.424  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/message/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveMessage(com.pcp.api.crm.domain.MessageInfo)
2017-12-24 20:39:26.424  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/messageId/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findMessageById(java.lang.String)
2017-12-24 20:39:26.424  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/deleteMessage/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteMessage(java.lang.String)
2017-12-24 20:39:26.424  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/saverTicket/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageSaverTicket(com.pcp.api.crm.domain.SaverTicketInfo)
2017-12-24 20:39:26.425  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/saverTicket/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveSaverTicket(com.pcp.api.crm.domain.SaverTicketInfo)
2017-12-24 20:39:26.425  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/qrcodeShop/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveQrcodeShop(com.pcp.api.crm.domain.QrcodeInfo)
2017-12-24 20:39:26.425  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findCoupons(com.pcp.api.crm.domain.CouponInfo)
2017-12-24 20:39:26.425  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pms/couponId/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findCouponById(java.lang.String)
2017-12-24 20:39:26.425  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/{code}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findCouponByCode(java.lang.String)
2017-12-24 20:39:26.425  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/typeList],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findCouponTypes(com.pcp.api.crm.domain.CouponTypeInfo)
2017-12-24 20:39:26.426  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/couponType],methods=[PUT]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveCouponType(com.pcp.api.crm.domain.CouponTypeInfo)
2017-12-24 20:39:26.426  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/generate],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.generateCoupons(java.lang.String,java.lang.Integer)
2017-12-24 20:39:26.426  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/delete],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteCoupon(com.pcp.api.crm.domain.CouponTypeInfo)
2017-12-24 20:39:26.427  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/type/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteCouponType(java.lang.String)
2017-12-24 20:39:26.427  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/send],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.sendCoupon(com.pcp.api.crm.domain.CouponInfo)
2017-12-24 20:39:26.427  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/send/history],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findCouponSents(com.pcp.api.crm.domain.CouponSentInfo)
2017-12-24 20:39:26.427  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userLogin],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.userLogin(com.pcp.api.crm.domain.UserInfo)
2017-12-24 20:39:26.428  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/exchange],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.exChangeCoupon(com.pcp.api.crm.domain.CouponInfo)
2017-12-24 20:39:26.428  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/employeeCard],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.employeeCard(com.pcp.api.crm.domain.UserInfo)
2017-12-24 20:39:26.428  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/{userCode}/{code}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.couponVerify(java.lang.String,java.lang.String)
2017-12-24 20:39:26.428  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteCouponById(java.lang.String)
2017-12-24 20:39:26.428  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/mobileCovert],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.mobileCovert(com.pcp.api.crm.domain.UserInfo)
2017-12-24 20:39:26.428  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/scan/qrcode],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.scanQrcode(com.pcp.api.crm.domain.QrcodeInfo)
2017-12-24 20:39:26.429  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/rewards/user],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findRewardUser(com.pcp.api.crm.domain.RewardUserInfo)
2017-12-24 20:39:26.429  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/couponDraw],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.drawCoupon(com.pcp.api.crm.domain.CouponInfo)
2017-12-24 20:39:26.430  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/export/excel],methods=[POST],produces=[application/octet-stream]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.InputStreamResource> com.pcp.facade.ExportFacade.exportExcel(javax.servlet.http.HttpServletRequest)
2017-12-24 20:39:26.431  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/log/transferLog/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.LogFacade.finTransferLogById(java.lang.String)
2017-12-24 20:39:26.431  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/log/saveOperation],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.LogFacade.saveOperationLog(java.util.Map<java.lang.String, java.lang.Object>)
2017-12-24 20:39:26.432  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/logPage/transferLog],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.LogFacade.finTransferLogs(com.pcp.api.log.api.TransferLogInfo)
2017-12-24 20:39:26.432  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/log/findLoginLogs],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.LogFacade.finLoginLogs(com.pcp.api.log.api.LoginLogInfo)
2017-12-24 20:39:26.432  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/log/findOperation],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.LogFacade.finOperationLogs(com.pcp.api.log.api.OperationLogInfo)
2017-12-24 20:39:26.432  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/logSave/transferLog],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.LogFacade.saveTransferLog(com.pcp.api.log.api.TransferLogInfo)
2017-12-24 20:39:26.432  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/log/operationLog/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.LogFacade.finOperationById(java.lang.String)
2017-12-24 20:39:26.433  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/log/saveLoginLog],methods=[POST]}" onto public com.pcp.common.JsonResponse com.pcp.facade.LogFacade.saveLoginLog(java.util.Map<java.lang.String, java.lang.Object>)
2017-12-24 20:39:26.434  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/shop/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.findShopById(java.lang.String)
2017-12-24 20:39:26.435  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/saveShop],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.saveShop(com.pcp.api.pos.domain.ShopInfo)
2017-12-24 20:39:26.435  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/shop/list],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.findShops(com.pcp.api.pos.domain.ShopInfo)
2017-12-24 20:39:26.435  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/shopCode/code/{code}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.findShopByCode(java.lang.String)
2017-12-24 20:39:26.436  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/rule/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.saveRule(com.pcp.api.pos.domain.RuleInfo)
2017-12-24 20:39:26.436  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/ruleLine/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.saveLineRule(com.pcp.api.pos.domain.RuleLineInfo)
2017-12-24 20:39:26.436  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/ruleLine/list],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.findRuleLines(com.pcp.api.pos.domain.RuleLineInfo)
2017-12-24 20:39:26.436  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/ruleLineId/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.findRuleLineById(java.lang.String)
2017-12-24 20:39:26.436  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/ruleId/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.findRuleById(java.lang.String)
2017-12-24 20:39:26.437  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/rule/list],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.findRules(com.pcp.api.pos.domain.RuleInfo)
2017-12-24 20:39:26.439  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017-12-24 20:39:26.439  INFO 10312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017-12-24 20:39:26.524  INFO 10312 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-12-24 20:39:26.524  INFO 10312 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-12-24 20:39:26.654  INFO 10312 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-12-24 20:39:27.264  WARN 10312 --- [main] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2017-12-24 20:39:27.264  INFO 10312 --- [main] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2017-12-24 20:39:27.274  WARN 10312 --- [main] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2017-12-24 20:39:27.274  INFO 10312 --- [main] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2017-12-24 20:39:27.681  INFO 10312 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2017-12-24 20:39:27.697  INFO 10312 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'environmentManager' has been autodetected for JMX exposure
2017-12-24 20:39:27.699  INFO 10312 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2017-12-24 20:39:27.700  INFO 10312 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'refreshScope' has been autodetected for JMX exposure
2017-12-24 20:39:27.702  INFO 10312 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2017-12-24 20:39:27.722  INFO 10312 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2017-12-24 20:39:27.744  INFO 10312 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=273842a6,type=ConfigurationPropertiesRebinder]
2017-12-24 20:39:27.950  INFO 10312 --- [main] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 0
2017-12-24 20:39:27.963  INFO 10312 --- [main] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2017-12-24 20:39:28.040  INFO 10312 --- [main] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2017-12-24 20:39:28.134  INFO 10312 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using JSON encoding codec LegacyJacksonJson
2017-12-24 20:39:28.135  INFO 10312 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using JSON decoding codec LegacyJacksonJson
2017-12-24 20:39:28.345  INFO 10312 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using XML encoding codec XStreamXml
2017-12-24 20:39:28.345  INFO 10312 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using XML decoding codec XStreamXml
2017-12-24 20:39:28.794  INFO 10312 --- [main] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2017-12-24 20:39:28.921  INFO 10312 --- [main] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2017-12-24 20:39:28.921  INFO 10312 --- [main] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2017-12-24 20:39:28.921  INFO 10312 --- [main] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2017-12-24 20:39:28.921  INFO 10312 --- [main] com.netflix.discovery.DiscoveryClient    : Application is null : false
2017-12-24 20:39:28.921  INFO 10312 --- [main] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2017-12-24 20:39:28.921  INFO 10312 --- [main] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2017-12-24 20:39:28.921  INFO 10312 --- [main] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2017-12-24 20:39:29.147  INFO 10312 --- [main] com.netflix.discovery.DiscoveryClient    : The response status is 200
2017-12-24 20:39:29.152  INFO 10312 --- [main] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2017-12-24 20:39:29.158  INFO 10312 --- [main] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 12
2017-12-24 20:39:29.164  INFO 10312 --- [main] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1514119169164 with initial instances count: 5
2017-12-24 20:39:29.227  INFO 10312 --- [main] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application facade with eureka with status UP
2017-12-24 20:39:29.227  INFO 10312 --- [main] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1514119169227, current=UP, previous=STARTING]
2017-12-24 20:39:29.229  INFO 10312 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_FACADE/Jason:facade:11007: registering service...
2017-12-24 20:39:29.290  INFO 10312 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_FACADE/Jason:facade:11007 - registration status: 204
2017-12-24 20:39:29.330  INFO 10312 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 11007 (http)
2017-12-24 20:39:29.331  INFO 10312 --- [main] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 11007
2017-12-24 20:39:29.338  INFO 10312 --- [main] com.pcp.FacadeBootstrap                  : Started FacadeBootstrap in 12.931 seconds (JVM running for 14.629)
2017-12-24 20:40:36.542  INFO 10312 --- [http-nio-11007-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-12-24 20:40:36.542  INFO 10312 --- [http-nio-11007-exec-2] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2017-12-24 20:40:36.571  INFO 10312 --- [http-nio-11007-exec-2] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 28 ms
2017-12-24 20:40:36.665  INFO 10312 --- [http-nio-11007-exec-1] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@145de873: startup date [Sun Dec 24 20:40:36 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@273842a6
2017-12-24 20:40:36.740  INFO 10312 --- [http-nio-11007-exec-1] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-12-24 20:40:37.042  INFO 10312 --- [http-nio-11007-exec-1] c.netflix.config.ChainedDynamicProperty  : Flipping property: crm.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-24 20:40:37.069  INFO 10312 --- [http-nio-11007-exec-1] c.n.u.concurrent.ShutdownEnabledTimer    : Shutdown hook installed for: NFLoadBalancer-PingTimer-crm
2017-12-24 20:40:37.106  INFO 10312 --- [http-nio-11007-exec-1] c.netflix.loadbalancer.BaseLoadBalancer  : Client: crm instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=crm,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2017-12-24 20:40:37.119  INFO 10312 --- [http-nio-11007-exec-1] c.n.l.DynamicServerListLoadBalancer      : Using serverListUpdater PollingServerListUpdater
2017-12-24 20:40:37.157  INFO 10312 --- [http-nio-11007-exec-1] c.netflix.config.ChainedDynamicProperty  : Flipping property: crm.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-24 20:40:37.159  INFO 10312 --- [http-nio-11007-exec-1] c.n.l.DynamicServerListLoadBalancer      : DynamicServerListLoadBalancer for client crm initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=crm,current list of Servers=[Jason:11009],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:Jason:11009;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@22a46c2c
2017-12-24 20:40:37.255  INFO 10312 --- [http-nio-11007-exec-2] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1e26e7ff: startup date [Sun Dec 24 20:40:37 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@273842a6
2017-12-24 20:40:37.286  INFO 10312 --- [http-nio-11007-exec-2] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-12-24 20:40:37.308  INFO 10312 --- [http-nio-11007-exec-2] c.netflix.config.ChainedDynamicProperty  : Flipping property: pos.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-24 20:40:37.312  INFO 10312 --- [http-nio-11007-exec-2] c.n.u.concurrent.ShutdownEnabledTimer    : Shutdown hook installed for: NFLoadBalancer-PingTimer-pos
2017-12-24 20:40:37.313  INFO 10312 --- [http-nio-11007-exec-2] c.netflix.loadbalancer.BaseLoadBalancer  : Client: pos instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=pos,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2017-12-24 20:40:37.314  INFO 10312 --- [http-nio-11007-exec-2] c.n.l.DynamicServerListLoadBalancer      : Using serverListUpdater PollingServerListUpdater
2017-12-24 20:40:37.316  INFO 10312 --- [http-nio-11007-exec-2] c.netflix.config.ChainedDynamicProperty  : Flipping property: pos.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-24 20:40:37.318  INFO 10312 --- [http-nio-11007-exec-2] c.n.l.DynamicServerListLoadBalancer      : DynamicServerListLoadBalancer for client pos initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=pos,current list of Servers=[Jason:11002],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:Jason:11002;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@5b877e64
2017-12-24 20:40:38.125  INFO 10312 --- [PollingServerListUpdater-0] c.netflix.config.ChainedDynamicProperty  : Flipping property: crm.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-24 20:40:38.316  INFO 10312 --- [PollingServerListUpdater-1] c.netflix.config.ChainedDynamicProperty  : Flipping property: pos.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-24 20:41:13.330  INFO 10836 --- [main] c.c.c.ConfigServicePropertySourceLocator : Fetching config from server at: http://localhost:8888
2017-12-24 20:41:14.451  WARN 10836 --- [main] c.c.c.ConfigServicePropertySourceLocator : Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/facade/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2017-12-24 20:41:14.460  INFO 10836 --- [main] com.pcp.FacadeBootstrap                  : No active profile set, falling back to default profiles: default
2017-12-24 20:41:14.502  INFO 10836 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3a022576: startup date [Sun Dec 24 20:41:14 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@409c54f
2017-12-24 20:41:15.136  INFO 10836 --- [main] o.s.b.f.xml.XmlBeanDefinitionReader      : Loading XML bean definitions from class path resource [facade-bean.xml]
2017-12-24 20:41:15.641  INFO 10836 --- [main] o.s.cloud.context.scope.GenericScope     : BeanFactory id=b351ba1f-cc86-3770-a30e-47b8ce2f7e98
2017-12-24 20:41:15.670  INFO 10836 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-12-24 20:41:15.728  INFO 10836 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 
2017-12-24 20:41:15.729  INFO 10836 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'taskExecutor' of type [org.springframework.scheduling.config.TaskExecutorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:41:15.729  INFO 10836 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'taskExecutor' of type [org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:41:15.774  INFO 10836 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'taskScheduler'
2017-12-24 20:41:15.775  INFO 10836 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'taskScheduler' of type [org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:41:15.787  INFO 10836 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IAdvertiseService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:41:15.789  INFO 10836 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IAuthorityService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:41:15.791  INFO 10836 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IChannelService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:41:15.793  INFO 10836 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.ICouponScopeRuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:41:15.794  INFO 10836 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.ICouponService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:41:15.796  INFO 10836 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.ICouponTimeRuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:41:15.798  INFO 10836 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IGradeChangeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:41:15.799  INFO 10836 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.ILevelManageService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:41:15.801  INFO 10836 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IMessageService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:41:15.803  INFO 10836 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IPointStoreService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:41:15.805  INFO 10836 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IPointStoreTypeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:41:15.807  INFO 10836 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IQrcodeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:41:15.808  INFO 10836 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IReportService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:41:15.809  INFO 10836 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IRewardService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:41:15.811  INFO 10836 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.ISaverTicketService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:41:15.815  INFO 10836 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IUserPointHistoryService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:41:15.817  INFO 10836 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IUserService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:41:15.832  INFO 10836 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.pos.service.IRuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:41:15.834  INFO 10836 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.pos.service.IShopService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:41:15.835  INFO 10836 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.auth.service.IAccountService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:41:15.837  INFO 10836 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.auth.service.IRoleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:41:15.838  INFO 10836 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.auth.service.ISuggestionService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:41:15.840  INFO 10836 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.log.service.ILoginLogService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:41:15.841  INFO 10836 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.log.service.IOperationLogService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:41:15.843  INFO 10836 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.log.service.ITransferLogService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:41:15.916  INFO 10836 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$63fba0b3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:41:16.350  INFO 10836 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 11007 (http)
2017-12-24 20:41:16.369  INFO 10836 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2017-12-24 20:41:16.372  INFO 10836 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.15
2017-12-24 20:41:16.530  INFO 10836 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2017-12-24 20:41:16.530  INFO 10836 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2028 ms
2017-12-24 20:41:16.777  INFO 10836 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/services/*]
2017-12-24 20:41:16.783  INFO 10836 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2017-12-24 20:41:16.784  INFO 10836 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017-12-24 20:41:16.784  INFO 10836 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017-12-24 20:41:16.784  INFO 10836 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2017-12-24 20:41:16.888  INFO 10836 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@7af443a3: startup date [Sun Dec 24 20:41:16 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3a022576
2017-12-24 20:41:16.918  INFO 10836 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-12-24 20:41:17.254  INFO 10836 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2bb41f5c: startup date [Sun Dec 24 20:41:17 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3a022576
2017-12-24 20:41:17.281  INFO 10836 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-12-24 20:41:17.424  INFO 10836 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@69a024a0: startup date [Sun Dec 24 20:41:17 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3a022576
2017-12-24 20:41:17.463  INFO 10836 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-12-24 20:41:17.577  INFO 10836 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@79a201cf: startup date [Sun Dec 24 20:41:17 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3a022576
2017-12-24 20:41:17.600  INFO 10836 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-12-24 20:41:19.100  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3a022576: startup date [Sun Dec 24 20:41:14 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@409c54f
2017-12-24 20:41:19.222  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/auth/delete/id],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.deleteAccountById(com.pcp.api.auth.domain.AccountInfo)
2017-12-24 20:41:19.224  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/auth/accounts],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.findAccounts(com.pcp.api.auth.domain.AccountInfo)
2017-12-24 20:41:19.224  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/auth/checkLogin],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.accountLogin(com.pcp.api.auth.domain.AccountInfo)
2017-12-24 20:41:19.224  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/auth/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.saveAccount(com.pcp.api.auth.domain.AccountInfo)
2017-12-24 20:41:19.225  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/auth/account/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.findAccountById(java.lang.String)
2017-12-24 20:41:19.225  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/saveShopAccount],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.saveShopAccount(com.pcp.api.auth.domain.AccountInfo)
2017-12-24 20:41:19.225  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.findRoles(com.pcp.api.auth.domain.RoleInfo)
2017-12-24 20:41:19.226  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.saveRole(com.pcp.api.auth.domain.RoleInfo)
2017-12-24 20:41:19.226  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete/roleId],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.deleteRole(com.pcp.api.auth.domain.RoleInfo)
2017-12-24 20:41:19.226  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/roleId/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.findRoleById(java.lang.String)
2017-12-24 20:41:19.226  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/save/RoleAccount],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.saveRoleAccount(com.pcp.api.auth.domain.AccountInfo)
2017-12-24 20:41:19.226  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/roleAccount/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.pageRoleAccount(com.pcp.api.auth.domain.RoleInfo)
2017-12-24 20:41:19.226  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/suggests/save],methods=[PUT]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.saveSuggest(com.pcp.api.auth.domain.SuggestionInfo)
2017-12-24 20:41:19.227  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/suggests/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.findSuggestById(java.lang.String)
2017-12-24 20:41:19.227  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/suggests],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.findSuggests(com.pcp.api.auth.domain.SuggestionInfo)
2017-12-24 20:41:19.254  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointHistory/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findPointHistoryById(java.lang.String)
2017-12-24 20:41:19.254  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointStore/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.savePointStoreInfo(com.pcp.api.crm.domain.PointStoreInfo)
2017-12-24 20:41:19.255  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointStoreId/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findPointStoreById(java.lang.String)
2017-12-24 20:41:19.255  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/advertise/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveAdvertiseInfo(com.pcp.api.crm.domain.AdvertiseInfo)
2017-12-24 20:41:19.255  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/advertise/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findAdvertiseById(java.lang.String)
2017-12-24 20:41:19.255  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/levelManage/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findLevelManageById(java.lang.String)
2017-12-24 20:41:19.255  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/levelManage/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteLevelManage(java.lang.String)
2017-12-24 20:41:19.256  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authority/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveAuthorityInfo(com.pcp.api.crm.domain.AuthorityInfo)
2017-12-24 20:41:19.256  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authorityId/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findAuthorityById(java.lang.String)
2017-12-24 20:41:19.256  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authorityLine/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveAuthorityLine(com.pcp.api.crm.domain.AuthorityLineInfo)
2017-12-24 20:41:19.257  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authorityLine/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteAuthorityLines(java.lang.String)
2017-12-24 20:41:19.257  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authorityLine/find/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findAuthorityLineById(java.lang.String)
2017-12-24 20:41:19.257  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authorityLine/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageAuthorityLine(com.pcp.api.crm.domain.AuthorityLineInfo)
2017-12-24 20:41:19.259  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointStoreType/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pagePointStoreType(com.pcp.api.crm.domain.PointStoreTypeInfo)
2017-12-24 20:41:19.259  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointStoreType/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findPointStoreTypeById(java.lang.String)
2017-12-24 20:41:19.259  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointStoreType/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.savePointStoreType(com.pcp.api.crm.domain.PointStoreTypeInfo)
2017-12-24 20:41:19.259  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/saverTicket/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findSaverTicketById(java.lang.String)
2017-12-24 20:41:19.260  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/saverTicket/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteSaverTicket(java.lang.String)
2017-12-24 20:41:19.260  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/qrcodeChannel/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveQrcodeChannel(com.pcp.api.crm.domain.QrcodeInfo)
2017-12-24 20:41:19.260  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/ChannelQrcode/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageQrcodeChannel(com.pcp.api.crm.domain.ChannelInfo)
2017-12-24 20:41:19.261  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/couponInfo/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findCouponInfoById(java.lang.String)
2017-12-24 20:41:19.261  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/couponScopeRule/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageCouponScopeRule(com.pcp.api.crm.domain.CouponScopeRuleInfo)
2017-12-24 20:41:19.261  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/couponTimeRule/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageCouponTimeRule(com.pcp.api.crm.domain.CouponTimeRuleInfo)
2017-12-24 20:41:19.261  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findUsers(com.pcp.api.crm.domain.UserInfo)
2017-12-24 20:41:19.261  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findUserById(java.lang.String)
2017-12-24 20:41:19.261  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/delete/],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteUserById(com.pcp.api.crm.domain.UserInfo)
2017-12-24 20:41:19.262  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register || /user/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveUser(com.pcp.api.crm.domain.UserInfo)
2017-12-24 20:41:19.262  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/updateCardLevel],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.updateCardLevel(com.pcp.api.crm.domain.UserInfo)
2017-12-24 20:41:19.262  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointHistory/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findPointHistory(com.pcp.api.crm.domain.UserPointHistoryInfo)
2017-12-24 20:41:19.262  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointHistory/save],methods=[PUT]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.savePointHistory(com.pcp.api.crm.domain.UserPointHistoryInfo)
2017-12-24 20:41:19.262  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/findByMobile/{mobile}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findByMobile(java.lang.String)
2017-12-24 20:41:19.263  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointStore/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findPointStores(com.pcp.api.crm.domain.PointStoreInfo)
2017-12-24 20:41:19.263  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointStore/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deletePointStore(java.lang.String)
2017-12-24 20:41:19.263  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/advertise/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageAdvertise(com.pcp.api.crm.domain.AdvertiseInfo)
2017-12-24 20:41:19.263  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/advertise/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteAdvertise(java.lang.String)
2017-12-24 20:41:19.263  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/channel/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveChannel(com.pcp.api.crm.domain.ChannelInfo)
2017-12-24 20:41:19.264  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/channel/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findChannelById(java.lang.String)
2017-12-24 20:41:19.264  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/channel/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageChannel(com.pcp.api.crm.domain.ChannelInfo)
2017-12-24 20:41:19.264  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/channel/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteChannel(java.lang.String)
2017-12-24 20:41:19.264  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/qrcode/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveQrcode(com.pcp.api.crm.domain.QrcodeInfo)
2017-12-24 20:41:19.264  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/qrcode/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findQrcodeById(java.lang.String)
2017-12-24 20:41:19.265  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/qrcode/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageQrcode(com.pcp.api.crm.domain.QrcodeInfo)
2017-12-24 20:41:19.265  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/qrcode/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteQrcode(java.lang.String)
2017-12-24 20:41:19.265  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/levelManage/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveLevelManage(com.pcp.api.crm.domain.LevelManageInfo)
2017-12-24 20:41:19.265  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/levelManage/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageLevelManage(com.pcp.api.crm.domain.LevelManageInfo)
2017-12-24 20:41:19.265  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/reward/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveReward(com.pcp.api.crm.domain.RewardInfo)
2017-12-24 20:41:19.266  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/reward/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findRewardById(java.lang.String)
2017-12-24 20:41:19.266  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/reward/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageReward(com.pcp.api.crm.domain.RewardInfo)
2017-12-24 20:41:19.266  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/reward/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteReward(java.lang.String)
2017-12-24 20:41:19.266  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authority/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageAuthority(com.pcp.api.crm.domain.AuthorityInfo)
2017-12-24 20:41:19.266  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authorityId/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteAuthority(java.lang.String)
2017-12-24 20:41:19.267  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/message/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageMessage(com.pcp.api.crm.domain.MessageInfo)
2017-12-24 20:41:19.267  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/message/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveMessage(com.pcp.api.crm.domain.MessageInfo)
2017-12-24 20:41:19.267  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/messageId/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findMessageById(java.lang.String)
2017-12-24 20:41:19.267  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/deleteMessage/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteMessage(java.lang.String)
2017-12-24 20:41:19.267  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/saverTicket/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageSaverTicket(com.pcp.api.crm.domain.SaverTicketInfo)
2017-12-24 20:41:19.268  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/saverTicket/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveSaverTicket(com.pcp.api.crm.domain.SaverTicketInfo)
2017-12-24 20:41:19.268  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/qrcodeShop/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveQrcodeShop(com.pcp.api.crm.domain.QrcodeInfo)
2017-12-24 20:41:19.268  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findCoupons(com.pcp.api.crm.domain.CouponInfo)
2017-12-24 20:41:19.268  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pms/couponId/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findCouponById(java.lang.String)
2017-12-24 20:41:19.269  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/{code}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findCouponByCode(java.lang.String)
2017-12-24 20:41:19.269  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/typeList],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findCouponTypes(com.pcp.api.crm.domain.CouponTypeInfo)
2017-12-24 20:41:19.269  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/couponType],methods=[PUT]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveCouponType(com.pcp.api.crm.domain.CouponTypeInfo)
2017-12-24 20:41:19.269  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/generate],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.generateCoupons(java.lang.String,java.lang.Integer)
2017-12-24 20:41:19.269  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/delete],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteCoupon(com.pcp.api.crm.domain.CouponTypeInfo)
2017-12-24 20:41:19.270  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/type/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteCouponType(java.lang.String)
2017-12-24 20:41:19.270  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/send],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.sendCoupon(com.pcp.api.crm.domain.CouponInfo)
2017-12-24 20:41:19.270  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/send/history],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findCouponSents(com.pcp.api.crm.domain.CouponSentInfo)
2017-12-24 20:41:19.270  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userLogin],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.userLogin(com.pcp.api.crm.domain.UserInfo)
2017-12-24 20:41:19.270  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/exchange],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.exChangeCoupon(com.pcp.api.crm.domain.CouponInfo)
2017-12-24 20:41:19.270  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/employeeCard],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.employeeCard(com.pcp.api.crm.domain.UserInfo)
2017-12-24 20:41:19.271  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/{userCode}/{code}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.couponVerify(java.lang.String,java.lang.String)
2017-12-24 20:41:19.271  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteCouponById(java.lang.String)
2017-12-24 20:41:19.271  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/mobileCovert],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.mobileCovert(com.pcp.api.crm.domain.UserInfo)
2017-12-24 20:41:19.271  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/scan/qrcode],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.scanQrcode(com.pcp.api.crm.domain.QrcodeInfo)
2017-12-24 20:41:19.271  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/rewards/user],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findRewardUser(com.pcp.api.crm.domain.RewardUserInfo)
2017-12-24 20:41:19.272  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/couponDraw],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.drawCoupon(com.pcp.api.crm.domain.CouponInfo)
2017-12-24 20:41:19.272  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/export/excel],methods=[POST],produces=[application/octet-stream]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.InputStreamResource> com.pcp.facade.ExportFacade.exportExcel(javax.servlet.http.HttpServletRequest)
2017-12-24 20:41:19.274  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/log/saveOperation],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.LogFacade.saveOperationLog(java.util.Map<java.lang.String, java.lang.Object>)
2017-12-24 20:41:19.274  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/logPage/transferLog],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.LogFacade.finTransferLogs(com.pcp.api.log.api.TransferLogInfo)
2017-12-24 20:41:19.274  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/log/findLoginLogs],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.LogFacade.finLoginLogs(com.pcp.api.log.api.LoginLogInfo)
2017-12-24 20:41:19.274  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/log/findOperation],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.LogFacade.finOperationLogs(com.pcp.api.log.api.OperationLogInfo)
2017-12-24 20:41:19.275  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/logSave/transferLog],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.LogFacade.saveTransferLog(com.pcp.api.log.api.TransferLogInfo)
2017-12-24 20:41:19.275  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/log/operationLog/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.LogFacade.finOperationById(java.lang.String)
2017-12-24 20:41:19.275  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/log/saveLoginLog],methods=[POST]}" onto public com.pcp.common.JsonResponse com.pcp.facade.LogFacade.saveLoginLog(java.util.Map<java.lang.String, java.lang.Object>)
2017-12-24 20:41:19.275  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/log/transferLog/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.LogFacade.finTransferLogById(java.lang.String)
2017-12-24 20:41:19.278  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/shop/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.findShopById(java.lang.String)
2017-12-24 20:41:19.278  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/saveShop],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.saveShop(com.pcp.api.pos.domain.ShopInfo)
2017-12-24 20:41:19.278  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/shop/list],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.findShops(com.pcp.api.pos.domain.ShopInfo)
2017-12-24 20:41:19.279  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/shopCode/code/{code}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.findShopByCode(java.lang.String)
2017-12-24 20:41:19.279  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/rule/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.saveRule(com.pcp.api.pos.domain.RuleInfo)
2017-12-24 20:41:19.279  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/ruleLine/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.saveLineRule(com.pcp.api.pos.domain.RuleLineInfo)
2017-12-24 20:41:19.279  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/ruleLine/list],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.findRuleLines(com.pcp.api.pos.domain.RuleLineInfo)
2017-12-24 20:41:19.279  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/ruleLineId/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.findRuleLineById(java.lang.String)
2017-12-24 20:41:19.279  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/ruleId/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.findRuleById(java.lang.String)
2017-12-24 20:41:19.280  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/rule/list],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.findRules(com.pcp.api.pos.domain.RuleInfo)
2017-12-24 20:41:19.282  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017-12-24 20:41:19.283  INFO 10836 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017-12-24 20:41:19.369  INFO 10836 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-12-24 20:41:19.370  INFO 10836 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-12-24 20:41:19.450  INFO 10836 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-12-24 20:41:20.017  WARN 10836 --- [main] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2017-12-24 20:41:20.017  INFO 10836 --- [main] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2017-12-24 20:41:20.024  WARN 10836 --- [main] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2017-12-24 20:41:20.024  INFO 10836 --- [main] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2017-12-24 20:41:20.284  INFO 10836 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2017-12-24 20:41:20.302  INFO 10836 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'environmentManager' has been autodetected for JMX exposure
2017-12-24 20:41:20.305  INFO 10836 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2017-12-24 20:41:20.306  INFO 10836 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'refreshScope' has been autodetected for JMX exposure
2017-12-24 20:41:20.310  INFO 10836 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2017-12-24 20:41:20.328  INFO 10836 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2017-12-24 20:41:20.355  INFO 10836 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=3a022576,type=ConfigurationPropertiesRebinder]
2017-12-24 20:41:20.563  INFO 10836 --- [main] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 0
2017-12-24 20:41:20.576  INFO 10836 --- [main] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2017-12-24 20:41:20.637  INFO 10836 --- [main] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2017-12-24 20:41:20.730  INFO 10836 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using JSON encoding codec LegacyJacksonJson
2017-12-24 20:41:20.730  INFO 10836 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using JSON decoding codec LegacyJacksonJson
2017-12-24 20:41:20.890  INFO 10836 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using XML encoding codec XStreamXml
2017-12-24 20:41:20.890  INFO 10836 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using XML decoding codec XStreamXml
2017-12-24 20:41:21.226  INFO 10836 --- [main] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2017-12-24 20:41:21.338  INFO 10836 --- [main] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2017-12-24 20:41:21.338  INFO 10836 --- [main] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2017-12-24 20:41:21.338  INFO 10836 --- [main] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2017-12-24 20:41:21.338  INFO 10836 --- [main] com.netflix.discovery.DiscoveryClient    : Application is null : false
2017-12-24 20:41:21.338  INFO 10836 --- [main] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2017-12-24 20:41:21.338  INFO 10836 --- [main] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2017-12-24 20:41:21.338  INFO 10836 --- [main] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2017-12-24 20:41:21.601  INFO 10836 --- [main] com.netflix.discovery.DiscoveryClient    : The response status is 200
2017-12-24 20:41:21.605  INFO 10836 --- [main] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2017-12-24 20:41:21.610  INFO 10836 --- [main] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 12
2017-12-24 20:41:21.617  INFO 10836 --- [main] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1514119281617 with initial instances count: 5
2017-12-24 20:41:21.658  INFO 10836 --- [main] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application facade with eureka with status UP
2017-12-24 20:41:21.659  INFO 10836 --- [main] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1514119281659, current=UP, previous=STARTING]
2017-12-24 20:41:21.662  INFO 10836 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_FACADE/Jason:facade:11007: registering service...
2017-12-24 20:41:21.711  INFO 10836 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_FACADE/Jason:facade:11007 - registration status: 204
2017-12-24 20:41:21.742  INFO 10836 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 11007 (http)
2017-12-24 20:41:21.743  INFO 10836 --- [main] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 11007
2017-12-24 20:41:21.746  INFO 10836 --- [main] com.pcp.FacadeBootstrap                  : Started FacadeBootstrap in 11.588 seconds (JVM running for 12.954)
2017-12-24 20:46:11.397  INFO 10836 --- [http-nio-11007-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-12-24 20:46:11.398  INFO 10836 --- [http-nio-11007-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2017-12-24 20:46:11.449  INFO 10836 --- [http-nio-11007-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 51 ms
2017-12-24 20:46:11.588  INFO 10836 --- [http-nio-11007-exec-1] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@59315828: startup date [Sun Dec 24 20:46:11 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3a022576
2017-12-24 20:46:11.680  INFO 10836 --- [http-nio-11007-exec-1] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-12-24 20:46:11.995  INFO 10836 --- [http-nio-11007-exec-1] c.netflix.config.ChainedDynamicProperty  : Flipping property: pos.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-24 20:46:12.024  INFO 10836 --- [http-nio-11007-exec-1] c.n.u.concurrent.ShutdownEnabledTimer    : Shutdown hook installed for: NFLoadBalancer-PingTimer-pos
2017-12-24 20:46:12.064  INFO 10836 --- [http-nio-11007-exec-1] c.netflix.loadbalancer.BaseLoadBalancer  : Client: pos instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=pos,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2017-12-24 20:46:12.077  INFO 10836 --- [http-nio-11007-exec-1] c.n.l.DynamicServerListLoadBalancer      : Using serverListUpdater PollingServerListUpdater
2017-12-24 20:46:12.117  INFO 10836 --- [http-nio-11007-exec-1] c.netflix.config.ChainedDynamicProperty  : Flipping property: pos.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-24 20:46:12.120  INFO 10836 --- [http-nio-11007-exec-1] c.n.l.DynamicServerListLoadBalancer      : DynamicServerListLoadBalancer for client pos initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=pos,current list of Servers=[Jason:11002],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:Jason:11002;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@1d2438c4
2017-12-24 20:46:13.083  INFO 10836 --- [PollingServerListUpdater-0] c.netflix.config.ChainedDynamicProperty  : Flipping property: pos.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-24 20:46:21.346  INFO 10836 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2017-12-24 20:51:21.352  INFO 10836 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2017-12-24 20:55:51.221  INFO 3984 --- [main] c.c.c.ConfigServicePropertySourceLocator : Fetching config from server at: http://localhost:8888
2017-12-24 20:55:52.375  WARN 3984 --- [main] c.c.c.ConfigServicePropertySourceLocator : Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/facade/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2017-12-24 20:55:52.381  INFO 3984 --- [main] com.pcp.FacadeBootstrap                  : No active profile set, falling back to default profiles: default
2017-12-24 20:55:52.405  INFO 3984 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7906578e: startup date [Sun Dec 24 20:55:52 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@57576994
2017-12-24 20:55:53.188  INFO 3984 --- [main] o.s.b.f.xml.XmlBeanDefinitionReader      : Loading XML bean definitions from class path resource [facade-bean.xml]
2017-12-24 20:55:53.728  INFO 3984 --- [main] o.s.cloud.context.scope.GenericScope     : BeanFactory id=b351ba1f-cc86-3770-a30e-47b8ce2f7e98
2017-12-24 20:55:53.764  INFO 3984 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-12-24 20:55:53.841  INFO 3984 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 
2017-12-24 20:55:53.842  INFO 3984 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'taskExecutor' of type [org.springframework.scheduling.config.TaskExecutorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:55:53.842  INFO 3984 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'taskExecutor' of type [org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:55:53.889  INFO 3984 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'taskScheduler'
2017-12-24 20:55:53.889  INFO 3984 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'taskScheduler' of type [org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:55:53.900  INFO 3984 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IAdvertiseService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:55:53.902  INFO 3984 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IAuthorityService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:55:53.903  INFO 3984 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IChannelService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:55:53.905  INFO 3984 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.ICouponScopeRuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:55:53.907  INFO 3984 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.ICouponService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:55:53.908  INFO 3984 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.ICouponTimeRuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:55:53.910  INFO 3984 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IGradeChangeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:55:53.912  INFO 3984 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.ILevelManageService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:55:53.914  INFO 3984 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IMessageService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:55:53.916  INFO 3984 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IPointStoreService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:55:53.917  INFO 3984 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IPointStoreTypeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:55:53.919  INFO 3984 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IQrcodeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:55:53.920  INFO 3984 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IReportService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:55:53.922  INFO 3984 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IRewardService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:55:53.923  INFO 3984 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.ISaverTicketService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:55:53.926  INFO 3984 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IUserPointHistoryService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:55:53.929  INFO 3984 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IUserService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:55:53.930  INFO 3984 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.pos.service.IRuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:55:53.932  INFO 3984 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.pos.service.IShopService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:55:53.934  INFO 3984 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.auth.service.IAccountService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:55:53.936  INFO 3984 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.auth.service.IRoleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:55:53.938  INFO 3984 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.auth.service.ISuggestionService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:55:53.940  INFO 3984 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.log.service.ILoginLogService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:55:53.943  INFO 3984 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.log.service.IOperationLogService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:55:53.945  INFO 3984 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.log.service.ITransferLogService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:55:54.020  INFO 3984 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1b185123] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 20:55:54.521  INFO 3984 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 11007 (http)
2017-12-24 20:55:54.537  INFO 3984 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2017-12-24 20:55:54.539  INFO 3984 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.15
2017-12-24 20:55:54.730  INFO 3984 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2017-12-24 20:55:54.731  INFO 3984 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2326 ms
2017-12-24 20:55:54.999  INFO 3984 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/services/*]
2017-12-24 20:55:55.006  INFO 3984 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2017-12-24 20:55:55.007  INFO 3984 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017-12-24 20:55:55.007  INFO 3984 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017-12-24 20:55:55.008  INFO 3984 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2017-12-24 20:55:55.127  INFO 3984 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4816ee24: startup date [Sun Dec 24 20:55:55 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7906578e
2017-12-24 20:55:55.156  INFO 3984 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-12-24 20:55:55.541  INFO 3984 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2ba1209b: startup date [Sun Dec 24 20:55:55 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7906578e
2017-12-24 20:55:55.564  INFO 3984 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-12-24 20:55:55.742  INFO 3984 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4872669f: startup date [Sun Dec 24 20:55:55 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7906578e
2017-12-24 20:55:55.772  INFO 3984 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-12-24 20:55:55.918  INFO 3984 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@c8f97a7: startup date [Sun Dec 24 20:55:55 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7906578e
2017-12-24 20:55:55.953  INFO 3984 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-12-24 20:55:57.318  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7906578e: startup date [Sun Dec 24 20:55:52 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@57576994
2017-12-24 20:55:57.414  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.saveRole(com.pcp.api.auth.domain.RoleInfo)
2017-12-24 20:55:57.415  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete/roleId],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.deleteRole(com.pcp.api.auth.domain.RoleInfo)
2017-12-24 20:55:57.415  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/roleId/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.findRoleById(java.lang.String)
2017-12-24 20:55:57.415  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/save/RoleAccount],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.saveRoleAccount(com.pcp.api.auth.domain.AccountInfo)
2017-12-24 20:55:57.416  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/roleAccount/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.pageRoleAccount(com.pcp.api.auth.domain.RoleInfo)
2017-12-24 20:55:57.416  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/suggests/save],methods=[PUT]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.saveSuggest(com.pcp.api.auth.domain.SuggestionInfo)
2017-12-24 20:55:57.416  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/suggests/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.findSuggestById(java.lang.String)
2017-12-24 20:55:57.416  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/suggests],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.findSuggests(com.pcp.api.auth.domain.SuggestionInfo)
2017-12-24 20:55:57.417  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/auth/delete/id],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.deleteAccountById(com.pcp.api.auth.domain.AccountInfo)
2017-12-24 20:55:57.417  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/auth/accounts],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.findAccounts(com.pcp.api.auth.domain.AccountInfo)
2017-12-24 20:55:57.417  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/auth/checkLogin],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.accountLogin(com.pcp.api.auth.domain.AccountInfo)
2017-12-24 20:55:57.417  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/auth/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.saveAccount(com.pcp.api.auth.domain.AccountInfo)
2017-12-24 20:55:57.417  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/auth/account/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.findAccountById(java.lang.String)
2017-12-24 20:55:57.418  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/saveShopAccount],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.saveShopAccount(com.pcp.api.auth.domain.AccountInfo)
2017-12-24 20:55:57.418  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.findRoles(com.pcp.api.auth.domain.RoleInfo)
2017-12-24 20:55:57.448  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findUsers(com.pcp.api.crm.domain.UserInfo)
2017-12-24 20:55:57.448  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findUserById(java.lang.String)
2017-12-24 20:55:57.449  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/delete/],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteUserById(com.pcp.api.crm.domain.UserInfo)
2017-12-24 20:55:57.449  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register || /user/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveUser(com.pcp.api.crm.domain.UserInfo)
2017-12-24 20:55:57.449  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/updateCardLevel],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.updateCardLevel(com.pcp.api.crm.domain.UserInfo)
2017-12-24 20:55:57.449  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointHistory/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findPointHistory(com.pcp.api.crm.domain.UserPointHistoryInfo)
2017-12-24 20:55:57.449  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointHistory/save],methods=[PUT]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.savePointHistory(com.pcp.api.crm.domain.UserPointHistoryInfo)
2017-12-24 20:55:57.450  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/findByMobile/{mobile}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findByMobile(java.lang.String)
2017-12-24 20:55:57.450  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointStore/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findPointStores(com.pcp.api.crm.domain.PointStoreInfo)
2017-12-24 20:55:57.450  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointStore/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deletePointStore(java.lang.String)
2017-12-24 20:55:57.451  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/advertise/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageAdvertise(com.pcp.api.crm.domain.AdvertiseInfo)
2017-12-24 20:55:57.451  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/advertise/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteAdvertise(java.lang.String)
2017-12-24 20:55:57.451  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/channel/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveChannel(com.pcp.api.crm.domain.ChannelInfo)
2017-12-24 20:55:57.451  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/channel/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findChannelById(java.lang.String)
2017-12-24 20:55:57.451  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/channel/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageChannel(com.pcp.api.crm.domain.ChannelInfo)
2017-12-24 20:55:57.452  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/channel/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteChannel(java.lang.String)
2017-12-24 20:55:57.452  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/qrcode/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveQrcode(com.pcp.api.crm.domain.QrcodeInfo)
2017-12-24 20:55:57.452  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/qrcode/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findQrcodeById(java.lang.String)
2017-12-24 20:55:57.452  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/qrcode/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageQrcode(com.pcp.api.crm.domain.QrcodeInfo)
2017-12-24 20:55:57.452  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/qrcode/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteQrcode(java.lang.String)
2017-12-24 20:55:57.453  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/levelManage/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveLevelManage(com.pcp.api.crm.domain.LevelManageInfo)
2017-12-24 20:55:57.453  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/levelManage/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageLevelManage(com.pcp.api.crm.domain.LevelManageInfo)
2017-12-24 20:55:57.453  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/reward/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveReward(com.pcp.api.crm.domain.RewardInfo)
2017-12-24 20:55:57.453  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/reward/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findRewardById(java.lang.String)
2017-12-24 20:55:57.453  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/reward/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageReward(com.pcp.api.crm.domain.RewardInfo)
2017-12-24 20:55:57.454  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/reward/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteReward(java.lang.String)
2017-12-24 20:55:57.454  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authority/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageAuthority(com.pcp.api.crm.domain.AuthorityInfo)
2017-12-24 20:55:57.454  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authorityId/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteAuthority(java.lang.String)
2017-12-24 20:55:57.454  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/message/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageMessage(com.pcp.api.crm.domain.MessageInfo)
2017-12-24 20:55:57.455  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/message/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveMessage(com.pcp.api.crm.domain.MessageInfo)
2017-12-24 20:55:57.455  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/messageId/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findMessageById(java.lang.String)
2017-12-24 20:55:57.455  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/deleteMessage/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteMessage(java.lang.String)
2017-12-24 20:55:57.455  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/saverTicket/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageSaverTicket(com.pcp.api.crm.domain.SaverTicketInfo)
2017-12-24 20:55:57.455  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/saverTicket/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveSaverTicket(com.pcp.api.crm.domain.SaverTicketInfo)
2017-12-24 20:55:57.456  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/qrcodeShop/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveQrcodeShop(com.pcp.api.crm.domain.QrcodeInfo)
2017-12-24 20:55:57.456  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findCoupons(com.pcp.api.crm.domain.CouponInfo)
2017-12-24 20:55:57.456  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pms/couponId/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findCouponById(java.lang.String)
2017-12-24 20:55:57.456  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/{code}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findCouponByCode(java.lang.String)
2017-12-24 20:55:57.456  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/typeList],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findCouponTypes(com.pcp.api.crm.domain.CouponTypeInfo)
2017-12-24 20:55:57.457  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/couponType],methods=[PUT]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveCouponType(com.pcp.api.crm.domain.CouponTypeInfo)
2017-12-24 20:55:57.457  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/generate],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.generateCoupons(java.lang.String,java.lang.Integer)
2017-12-24 20:55:57.457  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/delete],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteCoupon(com.pcp.api.crm.domain.CouponTypeInfo)
2017-12-24 20:55:57.457  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/type/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteCouponType(java.lang.String)
2017-12-24 20:55:57.457  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/send],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.sendCoupon(com.pcp.api.crm.domain.CouponInfo)
2017-12-24 20:55:57.457  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/send/history],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findCouponSents(com.pcp.api.crm.domain.CouponSentInfo)
2017-12-24 20:55:57.458  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userLogin],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.userLogin(com.pcp.api.crm.domain.UserInfo)
2017-12-24 20:55:57.458  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/exchange],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.exChangeCoupon(com.pcp.api.crm.domain.CouponInfo)
2017-12-24 20:55:57.458  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/employeeCard],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.employeeCard(com.pcp.api.crm.domain.UserInfo)
2017-12-24 20:55:57.458  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/{userCode}/{code}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.couponVerify(java.lang.String,java.lang.String)
2017-12-24 20:55:57.459  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteCouponById(java.lang.String)
2017-12-24 20:55:57.459  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/mobileCovert],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.mobileCovert(com.pcp.api.crm.domain.UserInfo)
2017-12-24 20:55:57.459  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/scan/qrcode],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.scanQrcode(com.pcp.api.crm.domain.QrcodeInfo)
2017-12-24 20:55:57.459  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/rewards/user],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findRewardUser(com.pcp.api.crm.domain.RewardUserInfo)
2017-12-24 20:55:57.460  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/couponDraw],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.drawCoupon(com.pcp.api.crm.domain.CouponInfo)
2017-12-24 20:55:57.460  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointHistory/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findPointHistoryById(java.lang.String)
2017-12-24 20:55:57.460  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointStore/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.savePointStoreInfo(com.pcp.api.crm.domain.PointStoreInfo)
2017-12-24 20:55:57.460  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointStoreId/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findPointStoreById(java.lang.String)
2017-12-24 20:55:57.460  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/advertise/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveAdvertiseInfo(com.pcp.api.crm.domain.AdvertiseInfo)
2017-12-24 20:55:57.461  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/advertise/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findAdvertiseById(java.lang.String)
2017-12-24 20:55:57.461  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/levelManage/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findLevelManageById(java.lang.String)
2017-12-24 20:55:57.461  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/levelManage/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteLevelManage(java.lang.String)
2017-12-24 20:55:57.461  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authority/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveAuthorityInfo(com.pcp.api.crm.domain.AuthorityInfo)
2017-12-24 20:55:57.461  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authorityId/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findAuthorityById(java.lang.String)
2017-12-24 20:55:57.462  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authorityLine/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveAuthorityLine(com.pcp.api.crm.domain.AuthorityLineInfo)
2017-12-24 20:55:57.462  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authorityLine/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteAuthorityLines(java.lang.String)
2017-12-24 20:55:57.462  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authorityLine/find/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findAuthorityLineById(java.lang.String)
2017-12-24 20:55:57.462  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authorityLine/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageAuthorityLine(com.pcp.api.crm.domain.AuthorityLineInfo)
2017-12-24 20:55:57.462  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointStoreType/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pagePointStoreType(com.pcp.api.crm.domain.PointStoreTypeInfo)
2017-12-24 20:55:57.463  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointStoreType/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findPointStoreTypeById(java.lang.String)
2017-12-24 20:55:57.463  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointStoreType/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.savePointStoreType(com.pcp.api.crm.domain.PointStoreTypeInfo)
2017-12-24 20:55:57.463  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/saverTicket/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findSaverTicketById(java.lang.String)
2017-12-24 20:55:57.463  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/saverTicket/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteSaverTicket(java.lang.String)
2017-12-24 20:55:57.463  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/qrcodeChannel/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveQrcodeChannel(com.pcp.api.crm.domain.QrcodeInfo)
2017-12-24 20:55:57.463  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/ChannelQrcode/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageQrcodeChannel(com.pcp.api.crm.domain.ChannelInfo)
2017-12-24 20:55:57.464  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/couponInfo/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findCouponInfoById(java.lang.String)
2017-12-24 20:55:57.464  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/couponScopeRule/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageCouponScopeRule(com.pcp.api.crm.domain.CouponScopeRuleInfo)
2017-12-24 20:55:57.464  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/couponTimeRule/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageCouponTimeRule(com.pcp.api.crm.domain.CouponTimeRuleInfo)
2017-12-24 20:55:57.465  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/export/excel],methods=[POST],produces=[application/octet-stream]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.InputStreamResource> com.pcp.facade.ExportFacade.exportExcel(javax.servlet.http.HttpServletRequest)
2017-12-24 20:55:57.466  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/log/saveOperation],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.LogFacade.saveOperationLog(java.util.Map<java.lang.String, java.lang.Object>)
2017-12-24 20:55:57.467  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/logPage/transferLog],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.LogFacade.finTransferLogs(com.pcp.api.log.api.TransferLogInfo)
2017-12-24 20:55:57.467  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/log/findLoginLogs],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.LogFacade.finLoginLogs(com.pcp.api.log.api.LoginLogInfo)
2017-12-24 20:55:57.467  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/log/findOperation],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.LogFacade.finOperationLogs(com.pcp.api.log.api.OperationLogInfo)
2017-12-24 20:55:57.468  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/logSave/transferLog],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.LogFacade.saveTransferLog(com.pcp.api.log.api.TransferLogInfo)
2017-12-24 20:55:57.468  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/log/operationLog/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.LogFacade.finOperationById(java.lang.String)
2017-12-24 20:55:57.468  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/log/saveLoginLog],methods=[POST]}" onto public com.pcp.common.JsonResponse com.pcp.facade.LogFacade.saveLoginLog(java.util.Map<java.lang.String, java.lang.Object>)
2017-12-24 20:55:57.468  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/log/transferLog/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.LogFacade.finTransferLogById(java.lang.String)
2017-12-24 20:55:57.470  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/shop/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.findShopById(java.lang.String)
2017-12-24 20:55:57.470  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/shop/list],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.findShops(com.pcp.api.pos.domain.ShopInfo)
2017-12-24 20:55:57.471  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/shop/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.saveShop(com.pcp.api.pos.domain.ShopInfo)
2017-12-24 20:55:57.471  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/shopCode/code/{code}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.findShopByCode(java.lang.String)
2017-12-24 20:55:57.471  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/rule/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.saveRule(com.pcp.api.pos.domain.RuleInfo)
2017-12-24 20:55:57.471  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/ruleLine/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.saveLineRule(com.pcp.api.pos.domain.RuleLineInfo)
2017-12-24 20:55:57.471  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/ruleLine/list],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.findRuleLines(com.pcp.api.pos.domain.RuleLineInfo)
2017-12-24 20:55:57.471  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/ruleLineId/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.findRuleLineById(java.lang.String)
2017-12-24 20:55:57.471  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/ruleId/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.findRuleById(java.lang.String)
2017-12-24 20:55:57.472  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/rule/list],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.findRules(com.pcp.api.pos.domain.RuleInfo)
2017-12-24 20:55:57.474  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017-12-24 20:55:57.475  INFO 3984 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017-12-24 20:55:57.542  INFO 3984 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-12-24 20:55:57.542  INFO 3984 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-12-24 20:55:57.623  INFO 3984 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-12-24 20:55:58.168  WARN 3984 --- [main] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2017-12-24 20:55:58.168  INFO 3984 --- [main] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2017-12-24 20:55:58.174  WARN 3984 --- [main] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2017-12-24 20:55:58.174  INFO 3984 --- [main] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2017-12-24 20:55:58.426  INFO 3984 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2017-12-24 20:55:58.442  INFO 3984 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'environmentManager' has been autodetected for JMX exposure
2017-12-24 20:55:58.444  INFO 3984 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2017-12-24 20:55:58.446  INFO 3984 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'refreshScope' has been autodetected for JMX exposure
2017-12-24 20:55:58.449  INFO 3984 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2017-12-24 20:55:58.471  INFO 3984 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2017-12-24 20:55:58.501  INFO 3984 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=7906578e,type=ConfigurationPropertiesRebinder]
2017-12-24 20:55:58.694  INFO 3984 --- [main] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 0
2017-12-24 20:55:58.708  INFO 3984 --- [main] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2017-12-24 20:55:58.782  INFO 3984 --- [main] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2017-12-24 20:55:58.918  INFO 3984 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using JSON encoding codec LegacyJacksonJson
2017-12-24 20:55:58.918  INFO 3984 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using JSON decoding codec LegacyJacksonJson
2017-12-24 20:55:59.086  INFO 3984 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using XML encoding codec XStreamXml
2017-12-24 20:55:59.087  INFO 3984 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using XML decoding codec XStreamXml
2017-12-24 20:55:59.394  INFO 3984 --- [main] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2017-12-24 20:55:59.481  INFO 3984 --- [main] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2017-12-24 20:55:59.482  INFO 3984 --- [main] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2017-12-24 20:55:59.482  INFO 3984 --- [main] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2017-12-24 20:55:59.482  INFO 3984 --- [main] com.netflix.discovery.DiscoveryClient    : Application is null : false
2017-12-24 20:55:59.482  INFO 3984 --- [main] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2017-12-24 20:55:59.482  INFO 3984 --- [main] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2017-12-24 20:55:59.482  INFO 3984 --- [main] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2017-12-24 20:55:59.655  INFO 3984 --- [main] com.netflix.discovery.DiscoveryClient    : The response status is 200
2017-12-24 20:55:59.658  INFO 3984 --- [main] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2017-12-24 20:55:59.661  INFO 3984 --- [main] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 12
2017-12-24 20:55:59.667  INFO 3984 --- [main] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1514120159666 with initial instances count: 5
2017-12-24 20:55:59.766  INFO 3984 --- [main] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application facade with eureka with status UP
2017-12-24 20:55:59.766  INFO 3984 --- [main] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1514120159766, current=UP, previous=STARTING]
2017-12-24 20:55:59.768  INFO 3984 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_FACADE/Jason:facade:11007: registering service...
2017-12-24 20:55:59.819  INFO 3984 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_FACADE/Jason:facade:11007 - registration status: 204
2017-12-24 20:55:59.842  INFO 3984 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 11007 (http)
2017-12-24 20:55:59.843  INFO 3984 --- [main] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 11007
2017-12-24 20:55:59.847  INFO 3984 --- [main] com.pcp.FacadeBootstrap                  : Started FacadeBootstrap in 11.137 seconds (JVM running for 12.55)
2017-12-24 20:56:29.208  INFO 3984 --- [http-nio-11007-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-12-24 20:56:29.208  INFO 3984 --- [http-nio-11007-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2017-12-24 20:56:29.286  INFO 3984 --- [http-nio-11007-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 77 ms
2017-12-24 20:56:29.423  INFO 3984 --- [http-nio-11007-exec-1] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@57306140: startup date [Sun Dec 24 20:56:29 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7906578e
2017-12-24 20:56:29.498  INFO 3984 --- [http-nio-11007-exec-1] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-12-24 20:56:29.797  INFO 3984 --- [http-nio-11007-exec-1] c.netflix.config.ChainedDynamicProperty  : Flipping property: pos.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-24 20:56:29.830  INFO 3984 --- [http-nio-11007-exec-1] c.n.u.concurrent.ShutdownEnabledTimer    : Shutdown hook installed for: NFLoadBalancer-PingTimer-pos
2017-12-24 20:56:29.862  INFO 3984 --- [http-nio-11007-exec-1] c.netflix.loadbalancer.BaseLoadBalancer  : Client: pos instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=pos,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2017-12-24 20:56:29.873  INFO 3984 --- [http-nio-11007-exec-1] c.n.l.DynamicServerListLoadBalancer      : Using serverListUpdater PollingServerListUpdater
2017-12-24 20:56:29.914  INFO 3984 --- [http-nio-11007-exec-1] c.netflix.config.ChainedDynamicProperty  : Flipping property: pos.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-24 20:56:29.916  INFO 3984 --- [http-nio-11007-exec-1] c.n.l.DynamicServerListLoadBalancer      : DynamicServerListLoadBalancer for client pos initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=pos,current list of Servers=[Jason:11002],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:Jason:11002;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@4f89afe7
2017-12-24 20:56:30.878  INFO 3984 --- [PollingServerListUpdater-0] c.netflix.config.ChainedDynamicProperty  : Flipping property: pos.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-24 21:00:59.488  INFO 3984 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2017-12-24 21:01:37.253  INFO 3984 --- [http-nio-11007-exec-1] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2c943dd8: startup date [Sun Dec 24 21:01:37 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7906578e
2017-12-24 21:01:37.322  INFO 3984 --- [http-nio-11007-exec-1] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-12-24 21:01:37.368  INFO 3984 --- [http-nio-11007-exec-1] c.netflix.config.ChainedDynamicProperty  : Flipping property: crm.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-24 21:01:37.374  INFO 3984 --- [http-nio-11007-exec-1] c.n.u.concurrent.ShutdownEnabledTimer    : Shutdown hook installed for: NFLoadBalancer-PingTimer-crm
2017-12-24 21:01:37.376  INFO 3984 --- [http-nio-11007-exec-1] c.netflix.loadbalancer.BaseLoadBalancer  : Client: crm instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=crm,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2017-12-24 21:01:37.383  INFO 3984 --- [http-nio-11007-exec-1] c.n.l.DynamicServerListLoadBalancer      : Using serverListUpdater PollingServerListUpdater
2017-12-24 21:01:37.387  INFO 3984 --- [http-nio-11007-exec-1] c.netflix.config.ChainedDynamicProperty  : Flipping property: crm.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-24 21:01:37.390  INFO 3984 --- [http-nio-11007-exec-1] c.n.l.DynamicServerListLoadBalancer      : DynamicServerListLoadBalancer for client crm initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=crm,current list of Servers=[Jason:11009],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:Jason:11009;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@42cbd9f5
2017-12-24 21:01:38.385  INFO 3984 --- [PollingServerListUpdater-1] c.netflix.config.ChainedDynamicProperty  : Flipping property: crm.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-24 21:03:29.664  INFO 3984 --- [http-nio-11007-exec-4] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4234205a: startup date [Sun Dec 24 21:03:29 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7906578e
2017-12-24 21:03:29.696  INFO 3984 --- [http-nio-11007-exec-4] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-12-24 21:03:29.713  INFO 3984 --- [http-nio-11007-exec-4] c.netflix.config.ChainedDynamicProperty  : Flipping property: auth.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-24 21:03:29.714  INFO 3984 --- [http-nio-11007-exec-4] c.n.u.concurrent.ShutdownEnabledTimer    : Shutdown hook installed for: NFLoadBalancer-PingTimer-auth
2017-12-24 21:03:29.715  INFO 3984 --- [http-nio-11007-exec-4] c.netflix.loadbalancer.BaseLoadBalancer  : Client: auth instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=auth,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2017-12-24 21:03:29.717  INFO 3984 --- [http-nio-11007-exec-4] c.n.l.DynamicServerListLoadBalancer      : Using serverListUpdater PollingServerListUpdater
2017-12-24 21:03:29.718  INFO 3984 --- [http-nio-11007-exec-4] c.netflix.config.ChainedDynamicProperty  : Flipping property: auth.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-24 21:03:29.719  INFO 3984 --- [http-nio-11007-exec-4] c.n.l.DynamicServerListLoadBalancer      : DynamicServerListLoadBalancer for client auth initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=auth,current list of Servers=[Jason:11004],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:Jason:11004;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@5029054f
2017-12-24 21:03:30.718  INFO 3984 --- [PollingServerListUpdater-1] c.netflix.config.ChainedDynamicProperty  : Flipping property: auth.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-24 21:05:59.493  INFO 3984 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2017-12-24 21:10:59.499  INFO 3984 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2017-12-24 21:15:59.504  INFO 3984 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2017-12-24 21:20:59.508  INFO 3984 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2017-12-24 21:25:59.513  INFO 3984 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2017-12-24 21:30:59.518  INFO 3984 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2017-12-24 21:35:59.517  INFO 3984 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2017-12-24 21:40:59.523  INFO 3984 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2017-12-24 21:48:07.133  INFO 8864 --- [main] c.c.c.ConfigServicePropertySourceLocator : Fetching config from server at: http://localhost:8888
2017-12-24 21:48:08.294  WARN 8864 --- [main] c.c.c.ConfigServicePropertySourceLocator : Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/facade/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2017-12-24 21:48:08.302  INFO 8864 --- [main] com.pcp.FacadeBootstrap                  : No active profile set, falling back to default profiles: default
2017-12-24 21:48:08.331  INFO 8864 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3ff57625: startup date [Sun Dec 24 21:48:08 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4a00d9cf
2017-12-24 21:48:09.154  INFO 8864 --- [main] o.s.b.f.xml.XmlBeanDefinitionReader      : Loading XML bean definitions from class path resource [facade-bean.xml]
2017-12-24 21:48:09.804  INFO 8864 --- [main] o.s.cloud.context.scope.GenericScope     : BeanFactory id=b351ba1f-cc86-3770-a30e-47b8ce2f7e98
2017-12-24 21:48:09.833  INFO 8864 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-12-24 21:48:09.918  INFO 8864 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 
2017-12-24 21:48:09.919  INFO 8864 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'taskExecutor' of type [org.springframework.scheduling.config.TaskExecutorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 21:48:09.919  INFO 8864 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'taskExecutor' of type [org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 21:48:09.982  INFO 8864 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'taskScheduler'
2017-12-24 21:48:09.982  INFO 8864 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'taskScheduler' of type [org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 21:48:10.001  INFO 8864 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IAdvertiseService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 21:48:10.004  INFO 8864 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IAuthorityService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 21:48:10.008  INFO 8864 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IChannelService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 21:48:10.011  INFO 8864 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.ICouponScopeRuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 21:48:10.014  INFO 8864 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.ICouponService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 21:48:10.018  INFO 8864 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.ICouponTimeRuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 21:48:10.021  INFO 8864 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IGradeChangeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 21:48:10.024  INFO 8864 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.ILevelManageService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 21:48:10.027  INFO 8864 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IMessageService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 21:48:10.030  INFO 8864 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IPointStoreService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 21:48:10.032  INFO 8864 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IPointStoreTypeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 21:48:10.034  INFO 8864 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IQrcodeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 21:48:10.036  INFO 8864 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IReportService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 21:48:10.037  INFO 8864 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IRewardService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 21:48:10.039  INFO 8864 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.ISaverTicketService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 21:48:10.043  INFO 8864 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IUserPointHistoryService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 21:48:10.045  INFO 8864 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IUserService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 21:48:10.048  INFO 8864 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.pos.service.IRuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 21:48:10.051  INFO 8864 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.pos.service.IShopService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 21:48:10.055  INFO 8864 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.auth.service.IAccountService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 21:48:10.060  INFO 8864 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.auth.service.IRoleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 21:48:10.063  INFO 8864 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.auth.service.ISuggestionService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 21:48:10.068  INFO 8864 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.log.service.ILoginLogService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 21:48:10.073  INFO 8864 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.log.service.IOperationLogService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 21:48:10.078  INFO 8864 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.log.service.ITransferLogService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 21:48:10.158  INFO 8864 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f0dec24e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 21:48:10.733  INFO 8864 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 11007 (http)
2017-12-24 21:48:10.756  INFO 8864 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2017-12-24 21:48:10.759  INFO 8864 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.15
2017-12-24 21:48:10.981  INFO 8864 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2017-12-24 21:48:10.982  INFO 8864 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2651 ms
2017-12-24 21:48:11.278  INFO 8864 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/services/*]
2017-12-24 21:48:11.284  INFO 8864 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2017-12-24 21:48:11.285  INFO 8864 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017-12-24 21:48:11.285  INFO 8864 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017-12-24 21:48:11.285  INFO 8864 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2017-12-24 21:48:11.426  INFO 8864 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@39c85c1a: startup date [Sun Dec 24 21:48:11 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3ff57625
2017-12-24 21:48:11.464  INFO 8864 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-12-24 21:48:11.912  INFO 8864 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@31973858: startup date [Sun Dec 24 21:48:11 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3ff57625
2017-12-24 21:48:11.946  INFO 8864 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-12-24 21:48:12.113  INFO 8864 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3e33b52e: startup date [Sun Dec 24 21:48:12 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3ff57625
2017-12-24 21:48:12.151  INFO 8864 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-12-24 21:48:12.308  INFO 8864 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@5af5d76f: startup date [Sun Dec 24 21:48:12 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3ff57625
2017-12-24 21:48:12.360  INFO 8864 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-12-24 21:48:14.178  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3ff57625: startup date [Sun Dec 24 21:48:08 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4a00d9cf
2017-12-24 21:48:14.289  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/auth/accounts],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.findAccounts(com.pcp.api.auth.domain.AccountInfo)
2017-12-24 21:48:14.290  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/auth/checkLogin],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.accountLogin(com.pcp.api.auth.domain.AccountInfo)
2017-12-24 21:48:14.291  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/auth/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.saveAccount(com.pcp.api.auth.domain.AccountInfo)
2017-12-24 21:48:14.292  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/auth/account/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.findAccountById(java.lang.String)
2017-12-24 21:48:14.292  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/saveShopAccount],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.saveShopAccount(com.pcp.api.auth.domain.AccountInfo)
2017-12-24 21:48:14.292  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.findRoles(com.pcp.api.auth.domain.RoleInfo)
2017-12-24 21:48:14.292  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.saveRole(com.pcp.api.auth.domain.RoleInfo)
2017-12-24 21:48:14.293  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete/roleId],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.deleteRole(com.pcp.api.auth.domain.RoleInfo)
2017-12-24 21:48:14.293  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/roleId/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.findRoleById(java.lang.String)
2017-12-24 21:48:14.294  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/save/RoleAccount],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.saveRoleAccount(com.pcp.api.auth.domain.AccountInfo)
2017-12-24 21:48:14.294  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/roleAccount/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.pageRoleAccount(com.pcp.api.auth.domain.RoleInfo)
2017-12-24 21:48:14.294  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/suggests/save],methods=[PUT]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.saveSuggest(com.pcp.api.auth.domain.SuggestionInfo)
2017-12-24 21:48:14.295  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/suggests/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.findSuggestById(java.lang.String)
2017-12-24 21:48:14.295  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/suggests],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.findSuggests(com.pcp.api.auth.domain.SuggestionInfo)
2017-12-24 21:48:14.296  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/auth/delete/id],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.deleteAccountById(com.pcp.api.auth.domain.AccountInfo)
2017-12-24 21:48:14.344  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findUsers(com.pcp.api.crm.domain.UserInfo)
2017-12-24 21:48:14.344  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findUserById(java.lang.String)
2017-12-24 21:48:14.345  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/delete/],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteUserById(com.pcp.api.crm.domain.UserInfo)
2017-12-24 21:48:14.345  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register || /user/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveUser(com.pcp.api.crm.domain.UserInfo)
2017-12-24 21:48:14.345  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/updateCardLevel],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.updateCardLevel(com.pcp.api.crm.domain.UserInfo)
2017-12-24 21:48:14.346  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointHistory/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findPointHistory(com.pcp.api.crm.domain.UserPointHistoryInfo)
2017-12-24 21:48:14.347  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointHistory/save],methods=[PUT]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.savePointHistory(com.pcp.api.crm.domain.UserPointHistoryInfo)
2017-12-24 21:48:14.347  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/findByMobile/{mobile}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findByMobile(java.lang.String)
2017-12-24 21:48:14.348  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointStore/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findPointStores(com.pcp.api.crm.domain.PointStoreInfo)
2017-12-24 21:48:14.349  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointStore/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deletePointStore(java.lang.String)
2017-12-24 21:48:14.349  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/advertise/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageAdvertise(com.pcp.api.crm.domain.AdvertiseInfo)
2017-12-24 21:48:14.349  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/advertise/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteAdvertise(java.lang.String)
2017-12-24 21:48:14.350  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/channel/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveChannel(com.pcp.api.crm.domain.ChannelInfo)
2017-12-24 21:48:14.350  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/channel/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findChannelById(java.lang.String)
2017-12-24 21:48:14.350  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/channel/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageChannel(com.pcp.api.crm.domain.ChannelInfo)
2017-12-24 21:48:14.351  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/channel/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteChannel(java.lang.String)
2017-12-24 21:48:14.351  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/qrcode/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveQrcode(com.pcp.api.crm.domain.QrcodeInfo)
2017-12-24 21:48:14.351  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/qrcode/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findQrcodeById(java.lang.String)
2017-12-24 21:48:14.352  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/qrcode/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageQrcode(com.pcp.api.crm.domain.QrcodeInfo)
2017-12-24 21:48:14.352  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/qrcode/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteQrcode(java.lang.String)
2017-12-24 21:48:14.352  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/levelManage/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveLevelManage(com.pcp.api.crm.domain.LevelManageInfo)
2017-12-24 21:48:14.353  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/levelManage/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageLevelManage(com.pcp.api.crm.domain.LevelManageInfo)
2017-12-24 21:48:14.353  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/reward/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveReward(com.pcp.api.crm.domain.RewardInfo)
2017-12-24 21:48:14.353  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/reward/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findRewardById(java.lang.String)
2017-12-24 21:48:14.353  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/reward/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageReward(com.pcp.api.crm.domain.RewardInfo)
2017-12-24 21:48:14.354  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/reward/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteReward(java.lang.String)
2017-12-24 21:48:14.354  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authority/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageAuthority(com.pcp.api.crm.domain.AuthorityInfo)
2017-12-24 21:48:14.355  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authorityId/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteAuthority(java.lang.String)
2017-12-24 21:48:14.355  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/message/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageMessage(com.pcp.api.crm.domain.MessageInfo)
2017-12-24 21:48:14.356  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/message/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveMessage(com.pcp.api.crm.domain.MessageInfo)
2017-12-24 21:48:14.356  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/messageId/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findMessageById(java.lang.String)
2017-12-24 21:48:14.356  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/deleteMessage/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteMessage(java.lang.String)
2017-12-24 21:48:14.356  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/saverTicket/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageSaverTicket(com.pcp.api.crm.domain.SaverTicketInfo)
2017-12-24 21:48:14.356  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/saverTicket/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveSaverTicket(com.pcp.api.crm.domain.SaverTicketInfo)
2017-12-24 21:48:14.357  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/qrcodeShop/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveQrcodeShop(com.pcp.api.crm.domain.QrcodeInfo)
2017-12-24 21:48:14.357  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findCoupons(com.pcp.api.crm.domain.CouponInfo)
2017-12-24 21:48:14.357  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pms/couponId/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findCouponById(java.lang.String)
2017-12-24 21:48:14.357  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/{code}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findCouponByCode(java.lang.String)
2017-12-24 21:48:14.357  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/typeList],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findCouponTypes(com.pcp.api.crm.domain.CouponTypeInfo)
2017-12-24 21:48:14.358  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/couponType],methods=[PUT]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveCouponType(com.pcp.api.crm.domain.CouponTypeInfo)
2017-12-24 21:48:14.358  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/generate],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.generateCoupons(java.lang.String,java.lang.Integer)
2017-12-24 21:48:14.358  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/delete],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteCoupon(com.pcp.api.crm.domain.CouponTypeInfo)
2017-12-24 21:48:14.358  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/type/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteCouponType(java.lang.String)
2017-12-24 21:48:14.359  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/send],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.sendCoupon(com.pcp.api.crm.domain.CouponInfo)
2017-12-24 21:48:14.359  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/send/history],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findCouponSents(com.pcp.api.crm.domain.CouponSentInfo)
2017-12-24 21:48:14.359  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userLogin],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.userLogin(com.pcp.api.crm.domain.UserInfo)
2017-12-24 21:48:14.360  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/exchange],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.exChangeCoupon(com.pcp.api.crm.domain.CouponInfo)
2017-12-24 21:48:14.360  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/employeeCard],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.employeeCard(com.pcp.api.crm.domain.UserInfo)
2017-12-24 21:48:14.360  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/{userCode}/{code}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.couponVerify(java.lang.String,java.lang.String)
2017-12-24 21:48:14.360  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteCouponById(java.lang.String)
2017-12-24 21:48:14.361  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/mobileCovert],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.mobileCovert(com.pcp.api.crm.domain.UserInfo)
2017-12-24 21:48:14.361  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/scan/qrcode],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.scanQrcode(com.pcp.api.crm.domain.QrcodeInfo)
2017-12-24 21:48:14.361  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/rewards/user],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findRewardUser(com.pcp.api.crm.domain.RewardUserInfo)
2017-12-24 21:48:14.362  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/couponDraw],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.drawCoupon(com.pcp.api.crm.domain.CouponInfo)
2017-12-24 21:48:14.362  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointHistory/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findPointHistoryById(java.lang.String)
2017-12-24 21:48:14.362  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointStore/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.savePointStoreInfo(com.pcp.api.crm.domain.PointStoreInfo)
2017-12-24 21:48:14.363  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointStoreId/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findPointStoreById(java.lang.String)
2017-12-24 21:48:14.363  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/advertise/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveAdvertiseInfo(com.pcp.api.crm.domain.AdvertiseInfo)
2017-12-24 21:48:14.363  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/advertise/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findAdvertiseById(java.lang.String)
2017-12-24 21:48:14.363  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/levelManage/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findLevelManageById(java.lang.String)
2017-12-24 21:48:14.364  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/levelManage/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteLevelManage(java.lang.String)
2017-12-24 21:48:14.364  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authority/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveAuthorityInfo(com.pcp.api.crm.domain.AuthorityInfo)
2017-12-24 21:48:14.364  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authorityId/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findAuthorityById(java.lang.String)
2017-12-24 21:48:14.364  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authorityLine/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveAuthorityLine(com.pcp.api.crm.domain.AuthorityLineInfo)
2017-12-24 21:48:14.364  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authorityLine/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteAuthorityLines(java.lang.String)
2017-12-24 21:48:14.378  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authorityLine/find/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findAuthorityLineById(java.lang.String)
2017-12-24 21:48:14.379  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authorityLine/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageAuthorityLine(com.pcp.api.crm.domain.AuthorityLineInfo)
2017-12-24 21:48:14.379  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointStoreType/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pagePointStoreType(com.pcp.api.crm.domain.PointStoreTypeInfo)
2017-12-24 21:48:14.379  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointStoreType/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findPointStoreTypeById(java.lang.String)
2017-12-24 21:48:14.379  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointStoreType/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.savePointStoreType(com.pcp.api.crm.domain.PointStoreTypeInfo)
2017-12-24 21:48:14.379  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/saverTicket/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findSaverTicketById(java.lang.String)
2017-12-24 21:48:14.379  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/saverTicket/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteSaverTicket(java.lang.String)
2017-12-24 21:48:14.380  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/qrcodeChannel/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveQrcodeChannel(com.pcp.api.crm.domain.QrcodeInfo)
2017-12-24 21:48:14.380  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/ChannelQrcode/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageQrcodeChannel(com.pcp.api.crm.domain.ChannelInfo)
2017-12-24 21:48:14.380  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/couponInfo/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findCouponInfoById(java.lang.String)
2017-12-24 21:48:14.380  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/couponScopeRule/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageCouponScopeRule(com.pcp.api.crm.domain.CouponScopeRuleInfo)
2017-12-24 21:48:14.380  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/couponTimeRule/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageCouponTimeRule(com.pcp.api.crm.domain.CouponTimeRuleInfo)
2017-12-24 21:48:14.381  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/export/excel],methods=[POST],produces=[application/octet-stream]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.InputStreamResource> com.pcp.facade.ExportFacade.exportExcel(javax.servlet.http.HttpServletRequest)
2017-12-24 21:48:14.383  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/log/saveOperation],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.LogFacade.saveOperationLog(java.util.Map<java.lang.String, java.lang.Object>)
2017-12-24 21:48:14.384  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/logPage/transferLog],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.LogFacade.finTransferLogs(com.pcp.api.log.api.TransferLogInfo)
2017-12-24 21:48:14.384  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/log/findLoginLogs],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.LogFacade.finLoginLogs(com.pcp.api.log.api.LoginLogInfo)
2017-12-24 21:48:14.384  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/log/findOperation],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.LogFacade.finOperationLogs(com.pcp.api.log.api.OperationLogInfo)
2017-12-24 21:48:14.385  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/logSave/transferLog],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.LogFacade.saveTransferLog(com.pcp.api.log.api.TransferLogInfo)
2017-12-24 21:48:14.385  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/log/operationLog/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.LogFacade.finOperationById(java.lang.String)
2017-12-24 21:48:14.385  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/log/saveLoginLog],methods=[POST]}" onto public com.pcp.common.JsonResponse com.pcp.facade.LogFacade.saveLoginLog(java.util.Map<java.lang.String, java.lang.Object>)
2017-12-24 21:48:14.386  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/log/transferLog/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.LogFacade.finTransferLogById(java.lang.String)
2017-12-24 21:48:14.389  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/ruleLine/list],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.findRuleLines(com.pcp.api.pos.domain.RuleLineInfo)
2017-12-24 21:48:14.390  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/shop/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.findShopById(java.lang.String)
2017-12-24 21:48:14.390  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/shop/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.saveShop(com.pcp.api.pos.domain.ShopInfo)
2017-12-24 21:48:14.391  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/shop/list],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.findShops(com.pcp.api.pos.domain.ShopInfo)
2017-12-24 21:48:14.391  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/shopCode/code/{code}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.findShopByCode(java.lang.String)
2017-12-24 21:48:14.426  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/rule/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.saveRule(com.pcp.api.pos.domain.RuleInfo)
2017-12-24 21:48:14.426  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/ruleLine/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.saveLineRule(com.pcp.api.pos.domain.RuleLineInfo)
2017-12-24 21:48:14.426  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/ruleLineId/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.findRuleLineById(java.lang.String)
2017-12-24 21:48:14.427  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/ruleId/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.findRuleById(java.lang.String)
2017-12-24 21:48:14.427  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/rule/list],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.findRules(com.pcp.api.pos.domain.RuleInfo)
2017-12-24 21:48:14.432  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017-12-24 21:48:14.432  INFO 8864 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017-12-24 21:48:14.559  INFO 8864 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-12-24 21:48:14.559  INFO 8864 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-12-24 21:48:14.672  INFO 8864 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-12-24 21:48:15.523  WARN 8864 --- [main] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2017-12-24 21:48:15.523  INFO 8864 --- [main] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2017-12-24 21:48:15.530  WARN 8864 --- [main] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2017-12-24 21:48:15.530  INFO 8864 --- [main] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2017-12-24 21:48:15.822  INFO 8864 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2017-12-24 21:48:15.849  INFO 8864 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'environmentManager' has been autodetected for JMX exposure
2017-12-24 21:48:15.851  INFO 8864 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2017-12-24 21:48:15.852  INFO 8864 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'refreshScope' has been autodetected for JMX exposure
2017-12-24 21:48:15.858  INFO 8864 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2017-12-24 21:48:15.874  INFO 8864 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2017-12-24 21:48:15.906  INFO 8864 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=3ff57625,type=ConfigurationPropertiesRebinder]
2017-12-24 21:48:16.151  INFO 8864 --- [main] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 0
2017-12-24 21:48:16.163  INFO 8864 --- [main] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2017-12-24 21:48:16.251  INFO 8864 --- [main] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2017-12-24 21:48:16.381  INFO 8864 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using JSON encoding codec LegacyJacksonJson
2017-12-24 21:48:16.381  INFO 8864 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using JSON decoding codec LegacyJacksonJson
2017-12-24 21:48:16.594  INFO 8864 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using XML encoding codec XStreamXml
2017-12-24 21:48:16.595  INFO 8864 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using XML decoding codec XStreamXml
2017-12-24 21:48:17.059  INFO 8864 --- [main] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2017-12-24 21:48:17.192  INFO 8864 --- [main] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2017-12-24 21:48:17.192  INFO 8864 --- [main] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2017-12-24 21:48:17.192  INFO 8864 --- [main] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2017-12-24 21:48:17.192  INFO 8864 --- [main] com.netflix.discovery.DiscoveryClient    : Application is null : false
2017-12-24 21:48:17.192  INFO 8864 --- [main] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2017-12-24 21:48:17.192  INFO 8864 --- [main] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2017-12-24 21:48:17.192  INFO 8864 --- [main] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2017-12-24 21:48:17.456  INFO 8864 --- [main] com.netflix.discovery.DiscoveryClient    : The response status is 200
2017-12-24 21:48:17.459  INFO 8864 --- [main] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2017-12-24 21:48:17.462  INFO 8864 --- [main] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 12
2017-12-24 21:48:17.468  INFO 8864 --- [main] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1514123297467 with initial instances count: 4
2017-12-24 21:48:17.514  INFO 8864 --- [main] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application facade with eureka with status UP
2017-12-24 21:48:17.517  INFO 8864 --- [main] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1514123297516, current=UP, previous=STARTING]
2017-12-24 21:48:17.521  INFO 8864 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_FACADE/Jason:facade:11007: registering service...
2017-12-24 21:48:17.588  INFO 8864 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_FACADE/Jason:facade:11007 - registration status: 204
2017-12-24 21:48:17.632  INFO 8864 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 11007 (http)
2017-12-24 21:48:17.633  INFO 8864 --- [main] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 11007
2017-12-24 21:48:17.640  INFO 8864 --- [main] com.pcp.FacadeBootstrap                  : Started FacadeBootstrap in 14.191 seconds (JVM running for 15.861)
2017-12-24 21:48:35.679  INFO 8864 --- [http-nio-11007-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-12-24 21:48:35.681  INFO 8864 --- [http-nio-11007-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2017-12-24 21:48:35.724  INFO 8864 --- [http-nio-11007-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 43 ms
2017-12-24 21:48:35.850  INFO 8864 --- [http-nio-11007-exec-1] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@615526cb: startup date [Sun Dec 24 21:48:35 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3ff57625
2017-12-24 21:48:35.945  INFO 8864 --- [http-nio-11007-exec-1] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-12-24 21:48:36.352  INFO 8864 --- [http-nio-11007-exec-1] c.netflix.config.ChainedDynamicProperty  : Flipping property: auth.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-24 21:48:36.395  INFO 8864 --- [http-nio-11007-exec-1] c.n.u.concurrent.ShutdownEnabledTimer    : Shutdown hook installed for: NFLoadBalancer-PingTimer-auth
2017-12-24 21:48:36.444  INFO 8864 --- [http-nio-11007-exec-1] c.netflix.loadbalancer.BaseLoadBalancer  : Client: auth instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=auth,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2017-12-24 21:48:36.459  INFO 8864 --- [http-nio-11007-exec-1] c.n.l.DynamicServerListLoadBalancer      : Using serverListUpdater PollingServerListUpdater
2017-12-24 21:48:36.511  INFO 8864 --- [http-nio-11007-exec-1] c.netflix.config.ChainedDynamicProperty  : Flipping property: auth.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-24 21:48:36.515  INFO 8864 --- [http-nio-11007-exec-1] c.n.l.DynamicServerListLoadBalancer      : DynamicServerListLoadBalancer for client auth initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=auth,current list of Servers=[Jason:11004],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:Jason:11004;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@377bab63
2017-12-24 21:48:37.468  INFO 8864 --- [PollingServerListUpdater-0] c.netflix.config.ChainedDynamicProperty  : Flipping property: auth.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-24 21:48:39.541  INFO 8864 --- [http-nio-11007-exec-2] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6b54fcf4: startup date [Sun Dec 24 21:48:39 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3ff57625
2017-12-24 21:48:39.619  INFO 8864 --- [http-nio-11007-exec-2] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-12-24 21:48:39.664  INFO 8864 --- [http-nio-11007-exec-2] c.netflix.config.ChainedDynamicProperty  : Flipping property: crm.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-24 21:48:39.667  INFO 8864 --- [http-nio-11007-exec-2] c.n.u.concurrent.ShutdownEnabledTimer    : Shutdown hook installed for: NFLoadBalancer-PingTimer-crm
2017-12-24 21:48:39.668  INFO 8864 --- [http-nio-11007-exec-2] c.netflix.loadbalancer.BaseLoadBalancer  : Client: crm instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=crm,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2017-12-24 21:48:39.671  INFO 8864 --- [http-nio-11007-exec-2] c.n.l.DynamicServerListLoadBalancer      : Using serverListUpdater PollingServerListUpdater
2017-12-24 21:48:39.675  INFO 8864 --- [http-nio-11007-exec-2] c.netflix.config.ChainedDynamicProperty  : Flipping property: crm.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-24 21:48:39.678  INFO 8864 --- [http-nio-11007-exec-2] c.n.l.DynamicServerListLoadBalancer      : DynamicServerListLoadBalancer for client crm initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=crm,current list of Servers=[Jason:11009],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:Jason:11009;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@c4d0046
2017-12-24 21:48:39.782  INFO 8864 --- [http-nio-11007-exec-3] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@10da8504: startup date [Sun Dec 24 21:48:39 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3ff57625
2017-12-24 21:48:39.850  INFO 8864 --- [http-nio-11007-exec-3] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-12-24 21:48:39.906  INFO 8864 --- [http-nio-11007-exec-3] c.netflix.config.ChainedDynamicProperty  : Flipping property: pos.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-24 21:48:39.909  INFO 8864 --- [http-nio-11007-exec-3] c.n.u.concurrent.ShutdownEnabledTimer    : Shutdown hook installed for: NFLoadBalancer-PingTimer-pos
2017-12-24 21:48:39.910  INFO 8864 --- [http-nio-11007-exec-3] c.netflix.loadbalancer.BaseLoadBalancer  : Client: pos instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=pos,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2017-12-24 21:48:39.912  INFO 8864 --- [http-nio-11007-exec-3] c.n.l.DynamicServerListLoadBalancer      : Using serverListUpdater PollingServerListUpdater
2017-12-24 21:48:39.918  INFO 8864 --- [http-nio-11007-exec-3] c.netflix.config.ChainedDynamicProperty  : Flipping property: pos.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-24 21:48:39.921  INFO 8864 --- [http-nio-11007-exec-3] c.n.l.DynamicServerListLoadBalancer      : DynamicServerListLoadBalancer for client pos initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=pos,current list of Servers=[Jason:11002],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:Jason:11002;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@30d1b55d
2017-12-24 21:48:40.678  INFO 8864 --- [PollingServerListUpdater-0] c.netflix.config.ChainedDynamicProperty  : Flipping property: crm.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-24 21:48:40.916  INFO 8864 --- [PollingServerListUpdater-0] c.netflix.config.ChainedDynamicProperty  : Flipping property: pos.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-24 21:51:22.510 ERROR 8864 --- [http-nio-11007-exec-9] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is feign.RetryableException: Connection refused: connect executing POST http://crm/userService/page] with root cause

java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method) ~[na:1.8.0_31]
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85) ~[na:1.8.0_31]
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:345) ~[na:1.8.0_31]
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206) ~[na:1.8.0_31]
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188) ~[na:1.8.0_31]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[na:1.8.0_31]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[na:1.8.0_31]
	at java.net.Socket.connect(Socket.java:589) ~[na:1.8.0_31]
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175) ~[na:1.8.0_31]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432) ~[na:1.8.0_31]
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527) ~[na:1.8.0_31]
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211) ~[na:1.8.0_31]
	at sun.net.www.http.HttpClient.New(HttpClient.java:308) ~[na:1.8.0_31]
	at sun.net.www.http.HttpClient.New(HttpClient.java:326) ~[na:1.8.0_31]
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1168) ~[na:1.8.0_31]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1104) ~[na:1.8.0_31]
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:998) ~[na:1.8.0_31]
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:932) ~[na:1.8.0_31]
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1282) ~[na:1.8.0_31]
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1257) ~[na:1.8.0_31]
	at feign.Client$Default.convertAndSend(Client.java:133) ~[feign-core-9.5.0.jar:na]
	at feign.Client$Default.execute(Client.java:73) ~[feign-core-9.5.0.jar:na]
	at org.springframework.cloud.netflix.feign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:80) ~[spring-cloud-netflix-core-1.3.1.RELEASE.jar:1.3.1.RELEASE]
	at org.springframework.cloud.netflix.feign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:48) ~[spring-cloud-netflix-core-1.3.1.RELEASE.jar:1.3.1.RELEASE]
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:109) ~[ribbon-loadbalancer-2.2.2.jar:2.2.2]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303) ~[ribbon-loadbalancer-2.2.2.jar:2.2.2]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287) ~[ribbon-loadbalancer-2.2.2.jar:2.2.2]
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.Observable.unsafeSubscribe(Observable.java:10211) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144) ~[rxjava-1.1.10.jar:1.1.10]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185) ~[ribbon-loadbalancer-2.2.2.jar:2.2.2]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.2.jar:2.2.2]
	at rx.Observable.unsafeSubscribe(Observable.java:10211) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.Observable.unsafeSubscribe(Observable.java:10211) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.Observable.subscribe(Observable.java:10307) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.Observable.subscribe(Observable.java:10274) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:445) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:342) ~[rxjava-1.1.10.jar:1.1.10]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:117) ~[ribbon-loadbalancer-2.2.2.jar:2.2.2]
	at org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-netflix-core-1.3.1.RELEASE.jar:1.3.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.0.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.0.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.0.jar:na]
	at com.sun.proxy.$Proxy84.findUsers(Unknown Source) ~[na:na]
	at com.pcp.facade.CrmFacade.findUsers(CrmFacade.java:98) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_31]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_31]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_31]
	at java.lang.reflect.Method.invoke(Method.java:483) ~[na:1.8.0_31]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) ~[tomcat-embed-websocket-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_31]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_31]

2017-12-24 21:51:36.935  INFO 11940 --- [main] c.c.c.ConfigServicePropertySourceLocator : Fetching config from server at: http://localhost:8888
2017-12-24 21:51:38.117  WARN 11940 --- [main] c.c.c.ConfigServicePropertySourceLocator : Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/facade/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2017-12-24 21:51:38.121  INFO 11940 --- [main] com.pcp.FacadeBootstrap                  : No active profile set, falling back to default profiles: default
2017-12-24 21:51:38.158  INFO 11940 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4cd1c1dc: startup date [Sun Dec 24 21:51:38 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@409c54f
2017-12-24 21:51:39.052  INFO 11940 --- [main] o.s.b.f.xml.XmlBeanDefinitionReader      : Loading XML bean definitions from class path resource [facade-bean.xml]
2017-12-24 21:51:39.813  INFO 11940 --- [main] o.s.cloud.context.scope.GenericScope     : BeanFactory id=b351ba1f-cc86-3770-a30e-47b8ce2f7e98
2017-12-24 21:51:39.844  INFO 11940 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-12-24 21:51:39.925  INFO 11940 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 
2017-12-24 21:51:39.926  INFO 11940 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'taskExecutor' of type [org.springframework.scheduling.config.TaskExecutorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 21:51:39.926  INFO 11940 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'taskExecutor' of type [org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 21:51:39.983  INFO 11940 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'taskScheduler'
2017-12-24 21:51:39.983  INFO 11940 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'taskScheduler' of type [org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 21:51:40.000  INFO 11940 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IAdvertiseService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 21:51:40.002  INFO 11940 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IAuthorityService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 21:51:40.005  INFO 11940 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IChannelService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 21:51:40.006  INFO 11940 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.ICouponScopeRuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 21:51:40.008  INFO 11940 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.ICouponService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 21:51:40.010  INFO 11940 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.ICouponTimeRuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 21:51:40.011  INFO 11940 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IGradeChangeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 21:51:40.013  INFO 11940 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.ILevelManageService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 21:51:40.014  INFO 11940 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IMessageService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 21:51:40.016  INFO 11940 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IPointStoreService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 21:51:40.018  INFO 11940 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IPointStoreTypeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 21:51:40.020  INFO 11940 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IQrcodeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 21:51:40.021  INFO 11940 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IReportService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 21:51:40.023  INFO 11940 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IRewardService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 21:51:40.024  INFO 11940 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.ISaverTicketService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 21:51:40.027  INFO 11940 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IUserPointHistoryService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 21:51:40.029  INFO 11940 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IUserService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 21:51:40.032  INFO 11940 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.pos.service.IRuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 21:51:40.034  INFO 11940 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.pos.service.IShopService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 21:51:40.035  INFO 11940 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.auth.service.IAccountService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 21:51:40.037  INFO 11940 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.auth.service.IRoleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 21:51:40.039  INFO 11940 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.auth.service.ISuggestionService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 21:51:40.044  INFO 11940 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.log.service.ILoginLogService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 21:51:40.046  INFO 11940 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.log.service.IOperationLogService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 21:51:40.050  INFO 11940 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.log.service.ITransferLogService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 21:51:40.126  INFO 11940 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$94e46354] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-24 21:51:40.677  INFO 11940 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 11007 (http)
2017-12-24 21:51:40.694  INFO 11940 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2017-12-24 21:51:40.696  INFO 11940 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.15
2017-12-24 21:51:40.923  INFO 11940 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2017-12-24 21:51:40.924  INFO 11940 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2766 ms
2017-12-24 21:51:41.243  INFO 11940 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/services/*]
2017-12-24 21:51:41.251  INFO 11940 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2017-12-24 21:51:41.252  INFO 11940 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017-12-24 21:51:41.252  INFO 11940 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017-12-24 21:51:41.253  INFO 11940 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2017-12-24 21:51:41.392  INFO 11940 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@52226e57: startup date [Sun Dec 24 21:51:41 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4cd1c1dc
2017-12-24 21:51:41.429  INFO 11940 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-12-24 21:51:41.878  INFO 11940 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@5403799b: startup date [Sun Dec 24 21:51:41 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4cd1c1dc
2017-12-24 21:51:41.913  INFO 11940 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-12-24 21:51:42.075  INFO 11940 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@61cda923: startup date [Sun Dec 24 21:51:42 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4cd1c1dc
2017-12-24 21:51:42.121  INFO 11940 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-12-24 21:51:42.261  INFO 11940 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@f5a7226: startup date [Sun Dec 24 21:51:42 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4cd1c1dc
2017-12-24 21:51:42.296  INFO 11940 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-12-24 21:51:44.048  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4cd1c1dc: startup date [Sun Dec 24 21:51:38 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@409c54f
2017-12-24 21:51:44.153  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/auth/delete/id],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.deleteAccountById(com.pcp.api.auth.domain.AccountInfo)
2017-12-24 21:51:44.155  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/auth/accounts],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.findAccounts(com.pcp.api.auth.domain.AccountInfo)
2017-12-24 21:51:44.155  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/auth/checkLogin],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.accountLogin(com.pcp.api.auth.domain.AccountInfo)
2017-12-24 21:51:44.156  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/auth/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.saveAccount(com.pcp.api.auth.domain.AccountInfo)
2017-12-24 21:51:44.157  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/auth/account/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.findAccountById(java.lang.String)
2017-12-24 21:51:44.157  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/saveShopAccount],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.saveShopAccount(com.pcp.api.auth.domain.AccountInfo)
2017-12-24 21:51:44.157  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.findRoles(com.pcp.api.auth.domain.RoleInfo)
2017-12-24 21:51:44.158  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.saveRole(com.pcp.api.auth.domain.RoleInfo)
2017-12-24 21:51:44.159  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete/roleId],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.deleteRole(com.pcp.api.auth.domain.RoleInfo)
2017-12-24 21:51:44.159  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/roleId/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.findRoleById(java.lang.String)
2017-12-24 21:51:44.160  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/save/RoleAccount],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.saveRoleAccount(com.pcp.api.auth.domain.AccountInfo)
2017-12-24 21:51:44.160  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/roleAccount/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.pageRoleAccount(com.pcp.api.auth.domain.RoleInfo)
2017-12-24 21:51:44.161  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/suggests/save],methods=[PUT]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.saveSuggest(com.pcp.api.auth.domain.SuggestionInfo)
2017-12-24 21:51:44.163  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/suggests/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.findSuggestById(java.lang.String)
2017-12-24 21:51:44.164  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/suggests],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.findSuggests(com.pcp.api.auth.domain.SuggestionInfo)
2017-12-24 21:51:44.201  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointHistory/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findPointHistoryById(java.lang.String)
2017-12-24 21:51:44.203  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointStore/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.savePointStoreInfo(com.pcp.api.crm.domain.PointStoreInfo)
2017-12-24 21:51:44.204  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointStoreId/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findPointStoreById(java.lang.String)
2017-12-24 21:51:44.204  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/advertise/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveAdvertiseInfo(com.pcp.api.crm.domain.AdvertiseInfo)
2017-12-24 21:51:44.204  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/advertise/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findAdvertiseById(java.lang.String)
2017-12-24 21:51:44.205  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/levelManage/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findLevelManageById(java.lang.String)
2017-12-24 21:51:44.205  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/levelManage/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteLevelManage(java.lang.String)
2017-12-24 21:51:44.206  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authority/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveAuthorityInfo(com.pcp.api.crm.domain.AuthorityInfo)
2017-12-24 21:51:44.206  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authorityId/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findAuthorityById(java.lang.String)
2017-12-24 21:51:44.207  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authorityLine/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveAuthorityLine(com.pcp.api.crm.domain.AuthorityLineInfo)
2017-12-24 21:51:44.207  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authorityLine/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteAuthorityLines(java.lang.String)
2017-12-24 21:51:44.208  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authorityLine/find/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findAuthorityLineById(java.lang.String)
2017-12-24 21:51:44.209  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authorityLine/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageAuthorityLine(com.pcp.api.crm.domain.AuthorityLineInfo)
2017-12-24 21:51:44.209  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointStoreType/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pagePointStoreType(com.pcp.api.crm.domain.PointStoreTypeInfo)
2017-12-24 21:51:44.210  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointStoreType/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findPointStoreTypeById(java.lang.String)
2017-12-24 21:51:44.210  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointStoreType/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.savePointStoreType(com.pcp.api.crm.domain.PointStoreTypeInfo)
2017-12-24 21:51:44.211  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/saverTicket/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findSaverTicketById(java.lang.String)
2017-12-24 21:51:44.212  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/saverTicket/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteSaverTicket(java.lang.String)
2017-12-24 21:51:44.212  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/qrcodeChannel/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveQrcodeChannel(com.pcp.api.crm.domain.QrcodeInfo)
2017-12-24 21:51:44.213  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/ChannelQrcode/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageQrcodeChannel(com.pcp.api.crm.domain.ChannelInfo)
2017-12-24 21:51:44.213  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/couponInfo/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findCouponInfoById(java.lang.String)
2017-12-24 21:51:44.213  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/couponScopeRule/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageCouponScopeRule(com.pcp.api.crm.domain.CouponScopeRuleInfo)
2017-12-24 21:51:44.214  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/couponTimeRule/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageCouponTimeRule(com.pcp.api.crm.domain.CouponTimeRuleInfo)
2017-12-24 21:51:44.215  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findUsers(com.pcp.api.crm.domain.UserInfo)
2017-12-24 21:51:44.216  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findUserById(java.lang.String)
2017-12-24 21:51:44.216  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/delete/],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteUserById(com.pcp.api.crm.domain.UserInfo)
2017-12-24 21:51:44.217  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register || /user/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveUser(com.pcp.api.crm.domain.UserInfo)
2017-12-24 21:51:44.217  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/updateCardLevel],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.updateCardLevel(com.pcp.api.crm.domain.UserInfo)
2017-12-24 21:51:44.217  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointHistory/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findPointHistory(com.pcp.api.crm.domain.UserPointHistoryInfo)
2017-12-24 21:51:44.217  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointHistory/save],methods=[PUT]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.savePointHistory(com.pcp.api.crm.domain.UserPointHistoryInfo)
2017-12-24 21:51:44.218  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/findByMobile/{mobile}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findByMobile(java.lang.String)
2017-12-24 21:51:44.218  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointStore/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findPointStores(com.pcp.api.crm.domain.PointStoreInfo)
2017-12-24 21:51:44.218  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointStore/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deletePointStore(java.lang.String)
2017-12-24 21:51:44.218  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/advertise/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageAdvertise(com.pcp.api.crm.domain.AdvertiseInfo)
2017-12-24 21:51:44.219  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/advertise/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteAdvertise(java.lang.String)
2017-12-24 21:51:44.219  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/channel/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveChannel(com.pcp.api.crm.domain.ChannelInfo)
2017-12-24 21:51:44.219  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/channel/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findChannelById(java.lang.String)
2017-12-24 21:51:44.222  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/channel/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageChannel(com.pcp.api.crm.domain.ChannelInfo)
2017-12-24 21:51:44.222  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/channel/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteChannel(java.lang.String)
2017-12-24 21:51:44.222  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/qrcode/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveQrcode(com.pcp.api.crm.domain.QrcodeInfo)
2017-12-24 21:51:44.222  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/qrcode/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findQrcodeById(java.lang.String)
2017-12-24 21:51:44.223  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/qrcode/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageQrcode(com.pcp.api.crm.domain.QrcodeInfo)
2017-12-24 21:51:44.223  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/qrcode/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteQrcode(java.lang.String)
2017-12-24 21:51:44.223  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/levelManage/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveLevelManage(com.pcp.api.crm.domain.LevelManageInfo)
2017-12-24 21:51:44.223  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/levelManage/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageLevelManage(com.pcp.api.crm.domain.LevelManageInfo)
2017-12-24 21:51:44.223  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/reward/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveReward(com.pcp.api.crm.domain.RewardInfo)
2017-12-24 21:51:44.223  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/reward/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findRewardById(java.lang.String)
2017-12-24 21:51:44.224  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/reward/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageReward(com.pcp.api.crm.domain.RewardInfo)
2017-12-24 21:51:44.224  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/reward/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteReward(java.lang.String)
2017-12-24 21:51:44.224  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authority/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageAuthority(com.pcp.api.crm.domain.AuthorityInfo)
2017-12-24 21:51:44.227  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authorityId/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteAuthority(java.lang.String)
2017-12-24 21:51:44.227  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/message/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageMessage(com.pcp.api.crm.domain.MessageInfo)
2017-12-24 21:51:44.227  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/message/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveMessage(com.pcp.api.crm.domain.MessageInfo)
2017-12-24 21:51:44.227  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/messageId/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findMessageById(java.lang.String)
2017-12-24 21:51:44.228  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/deleteMessage/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteMessage(java.lang.String)
2017-12-24 21:51:44.228  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/saverTicket/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageSaverTicket(com.pcp.api.crm.domain.SaverTicketInfo)
2017-12-24 21:51:44.228  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/saverTicket/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveSaverTicket(com.pcp.api.crm.domain.SaverTicketInfo)
2017-12-24 21:51:44.229  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/qrcodeShop/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveQrcodeShop(com.pcp.api.crm.domain.QrcodeInfo)
2017-12-24 21:51:44.229  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findCoupons(com.pcp.api.crm.domain.CouponInfo)
2017-12-24 21:51:44.229  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pms/couponId/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findCouponById(java.lang.String)
2017-12-24 21:51:44.229  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/{code}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findCouponByCode(java.lang.String)
2017-12-24 21:51:44.230  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/typeList],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findCouponTypes(com.pcp.api.crm.domain.CouponTypeInfo)
2017-12-24 21:51:44.230  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/couponType],methods=[PUT]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveCouponType(com.pcp.api.crm.domain.CouponTypeInfo)
2017-12-24 21:51:44.230  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/generate],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.generateCoupons(java.lang.String,java.lang.Integer)
2017-12-24 21:51:44.230  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/delete],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteCoupon(com.pcp.api.crm.domain.CouponTypeInfo)
2017-12-24 21:51:44.231  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/type/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteCouponType(java.lang.String)
2017-12-24 21:51:44.231  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/send],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.sendCoupon(com.pcp.api.crm.domain.CouponInfo)
2017-12-24 21:51:44.231  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/send/history],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findCouponSents(com.pcp.api.crm.domain.CouponSentInfo)
2017-12-24 21:51:44.231  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userLogin],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.userLogin(com.pcp.api.crm.domain.UserInfo)
2017-12-24 21:51:44.231  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/exchange],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.exChangeCoupon(com.pcp.api.crm.domain.CouponInfo)
2017-12-24 21:51:44.232  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/employeeCard],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.employeeCard(com.pcp.api.crm.domain.UserInfo)
2017-12-24 21:51:44.232  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/{userCode}/{code}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.couponVerify(java.lang.String,java.lang.String)
2017-12-24 21:51:44.232  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteCouponById(java.lang.String)
2017-12-24 21:51:44.232  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/mobileCovert],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.mobileCovert(com.pcp.api.crm.domain.UserInfo)
2017-12-24 21:51:44.233  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/scan/qrcode],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.scanQrcode(com.pcp.api.crm.domain.QrcodeInfo)
2017-12-24 21:51:44.233  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/rewards/user],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findRewardUser(com.pcp.api.crm.domain.RewardUserInfo)
2017-12-24 21:51:44.233  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/couponDraw],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.drawCoupon(com.pcp.api.crm.domain.CouponInfo)
2017-12-24 21:51:44.234  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/export/excel],methods=[POST],produces=[application/octet-stream]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.InputStreamResource> com.pcp.facade.ExportFacade.exportExcel(javax.servlet.http.HttpServletRequest)
2017-12-24 21:51:44.235  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/log/saveOperation],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.LogFacade.saveOperationLog(java.util.Map<java.lang.String, java.lang.Object>)
2017-12-24 21:51:44.235  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/log/transferLog/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.LogFacade.finTransferLogById(java.lang.String)
2017-12-24 21:51:44.236  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/logPage/transferLog],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.LogFacade.finTransferLogs(com.pcp.api.log.api.TransferLogInfo)
2017-12-24 21:51:44.236  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/log/findLoginLogs],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.LogFacade.finLoginLogs(com.pcp.api.log.api.LoginLogInfo)
2017-12-24 21:51:44.237  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/log/findOperation],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.LogFacade.finOperationLogs(com.pcp.api.log.api.OperationLogInfo)
2017-12-24 21:51:44.237  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/logSave/transferLog],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.LogFacade.saveTransferLog(com.pcp.api.log.api.TransferLogInfo)
2017-12-24 21:51:44.237  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/log/operationLog/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.LogFacade.finOperationById(java.lang.String)
2017-12-24 21:51:44.238  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/log/saveLoginLog],methods=[POST]}" onto public com.pcp.common.JsonResponse com.pcp.facade.LogFacade.saveLoginLog(java.util.Map<java.lang.String, java.lang.Object>)
2017-12-24 21:51:44.240  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/shop/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.findShopById(java.lang.String)
2017-12-24 21:51:44.241  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/shop/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.saveShop(com.pcp.api.pos.domain.ShopInfo)
2017-12-24 21:51:44.241  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/shop/list],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.findShops(com.pcp.api.pos.domain.ShopInfo)
2017-12-24 21:51:44.241  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/shopCode/code/{code}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.findShopByCode(java.lang.String)
2017-12-24 21:51:44.241  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/rule/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.saveRule(com.pcp.api.pos.domain.RuleInfo)
2017-12-24 21:51:44.241  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/ruleLine/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.saveLineRule(com.pcp.api.pos.domain.RuleLineInfo)
2017-12-24 21:51:44.241  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/ruleLine/list],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.findRuleLines(com.pcp.api.pos.domain.RuleLineInfo)
2017-12-24 21:51:44.242  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/ruleLineId/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.findRuleLineById(java.lang.String)
2017-12-24 21:51:44.242  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/ruleId/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.findRuleById(java.lang.String)
2017-12-24 21:51:44.242  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/rule/list],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.findRules(com.pcp.api.pos.domain.RuleInfo)
2017-12-24 21:51:44.246  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017-12-24 21:51:44.247  INFO 11940 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017-12-24 21:51:44.369  INFO 11940 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-12-24 21:51:44.369  INFO 11940 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-12-24 21:51:44.461  INFO 11940 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-12-24 21:51:45.150  WARN 11940 --- [main] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2017-12-24 21:51:45.151  INFO 11940 --- [main] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2017-12-24 21:51:45.156  WARN 11940 --- [main] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2017-12-24 21:51:45.156  INFO 11940 --- [main] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2017-12-24 21:51:45.509  INFO 11940 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2017-12-24 21:51:45.531  INFO 11940 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'environmentManager' has been autodetected for JMX exposure
2017-12-24 21:51:45.533  INFO 11940 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2017-12-24 21:51:45.534  INFO 11940 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'refreshScope' has been autodetected for JMX exposure
2017-12-24 21:51:45.537  INFO 11940 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2017-12-24 21:51:45.555  INFO 11940 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2017-12-24 21:51:45.588  INFO 11940 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=4cd1c1dc,type=ConfigurationPropertiesRebinder]
2017-12-24 21:51:45.803  INFO 11940 --- [main] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 0
2017-12-24 21:51:45.821  INFO 11940 --- [main] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2017-12-24 21:51:45.951  INFO 11940 --- [main] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2017-12-24 21:51:46.057  INFO 11940 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using JSON encoding codec LegacyJacksonJson
2017-12-24 21:51:46.057  INFO 11940 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using JSON decoding codec LegacyJacksonJson
2017-12-24 21:51:46.256  INFO 11940 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using XML encoding codec XStreamXml
2017-12-24 21:51:46.256  INFO 11940 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using XML decoding codec XStreamXml
2017-12-24 21:51:46.653  INFO 11940 --- [main] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2017-12-24 21:51:46.771  INFO 11940 --- [main] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2017-12-24 21:51:46.771  INFO 11940 --- [main] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2017-12-24 21:51:46.771  INFO 11940 --- [main] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2017-12-24 21:51:46.771  INFO 11940 --- [main] com.netflix.discovery.DiscoveryClient    : Application is null : false
2017-12-24 21:51:46.772  INFO 11940 --- [main] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2017-12-24 21:51:46.772  INFO 11940 --- [main] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2017-12-24 21:51:46.772  INFO 11940 --- [main] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2017-12-24 21:51:47.014  INFO 11940 --- [main] com.netflix.discovery.DiscoveryClient    : The response status is 200
2017-12-24 21:51:47.017  INFO 11940 --- [main] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2017-12-24 21:51:47.020  INFO 11940 --- [main] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 12
2017-12-24 21:51:47.025  INFO 11940 --- [main] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1514123507025 with initial instances count: 5
2017-12-24 21:51:47.067  INFO 11940 --- [main] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application facade with eureka with status UP
2017-12-24 21:51:47.068  INFO 11940 --- [main] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1514123507068, current=UP, previous=STARTING]
2017-12-24 21:51:47.070  INFO 11940 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_FACADE/Jason:facade:11007: registering service...
2017-12-24 21:51:47.139  INFO 11940 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_FACADE/Jason:facade:11007 - registration status: 204
2017-12-24 21:51:47.179  INFO 11940 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 11007 (http)
2017-12-24 21:51:47.180  INFO 11940 --- [main] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 11007
2017-12-24 21:51:47.184  INFO 11940 --- [main] com.pcp.FacadeBootstrap                  : Started FacadeBootstrap in 15.76 seconds (JVM running for 18.831)
2017-12-24 21:52:03.124  INFO 11940 --- [http-nio-11007-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-12-24 21:52:03.124  INFO 11940 --- [http-nio-11007-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2017-12-24 21:52:03.192  INFO 11940 --- [http-nio-11007-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 68 ms
2017-12-24 21:52:03.412  INFO 11940 --- [http-nio-11007-exec-1] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@7e34d4a9: startup date [Sun Dec 24 21:52:03 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4cd1c1dc
2017-12-24 21:52:03.517  INFO 11940 --- [http-nio-11007-exec-1] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-12-24 21:52:03.932  INFO 11940 --- [http-nio-11007-exec-1] c.netflix.config.ChainedDynamicProperty  : Flipping property: crm.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-24 21:52:03.969  INFO 11940 --- [http-nio-11007-exec-1] c.n.u.concurrent.ShutdownEnabledTimer    : Shutdown hook installed for: NFLoadBalancer-PingTimer-crm
2017-12-24 21:52:04.019  INFO 11940 --- [http-nio-11007-exec-1] c.netflix.loadbalancer.BaseLoadBalancer  : Client: crm instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=crm,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2017-12-24 21:52:04.041  INFO 11940 --- [http-nio-11007-exec-1] c.n.l.DynamicServerListLoadBalancer      : Using serverListUpdater PollingServerListUpdater
2017-12-24 21:52:04.084  INFO 11940 --- [http-nio-11007-exec-1] c.netflix.config.ChainedDynamicProperty  : Flipping property: crm.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-24 21:52:04.090  INFO 11940 --- [http-nio-11007-exec-1] c.n.l.DynamicServerListLoadBalancer      : DynamicServerListLoadBalancer for client crm initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=crm,current list of Servers=[Jason:11009],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:Jason:11009;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@52301772
2017-12-24 21:52:05.049  INFO 11940 --- [PollingServerListUpdater-0] c.netflix.config.ChainedDynamicProperty  : Flipping property: crm.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-24 21:52:06.883  INFO 11940 --- [http-nio-11007-exec-3] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2462cde9: startup date [Sun Dec 24 21:52:06 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4cd1c1dc
2017-12-24 21:52:06.939  INFO 11940 --- [http-nio-11007-exec-3] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-12-24 21:52:06.964  INFO 11940 --- [http-nio-11007-exec-3] c.netflix.config.ChainedDynamicProperty  : Flipping property: pos.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-24 21:52:06.969  INFO 11940 --- [http-nio-11007-exec-3] c.n.u.concurrent.ShutdownEnabledTimer    : Shutdown hook installed for: NFLoadBalancer-PingTimer-pos
2017-12-24 21:52:06.970  INFO 11940 --- [http-nio-11007-exec-3] c.netflix.loadbalancer.BaseLoadBalancer  : Client: pos instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=pos,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2017-12-24 21:52:06.972  INFO 11940 --- [http-nio-11007-exec-3] c.n.l.DynamicServerListLoadBalancer      : Using serverListUpdater PollingServerListUpdater
2017-12-24 21:52:06.975  INFO 11940 --- [http-nio-11007-exec-3] c.netflix.config.ChainedDynamicProperty  : Flipping property: pos.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-24 21:52:06.977  INFO 11940 --- [http-nio-11007-exec-3] c.n.l.DynamicServerListLoadBalancer      : DynamicServerListLoadBalancer for client pos initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=pos,current list of Servers=[Jason:11002],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:Jason:11002;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@3d5c287a
2017-12-24 21:52:07.975  INFO 11940 --- [PollingServerListUpdater-0] c.netflix.config.ChainedDynamicProperty  : Flipping property: pos.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-24 21:55:13.195  INFO 11940 --- [http-nio-11007-exec-5] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@49a5ac46: startup date [Sun Dec 24 21:55:13 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4cd1c1dc
2017-12-24 21:55:13.226  INFO 11940 --- [http-nio-11007-exec-5] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-12-24 21:55:13.264  INFO 11940 --- [http-nio-11007-exec-5] c.netflix.config.ChainedDynamicProperty  : Flipping property: auth.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-24 21:55:13.266  INFO 11940 --- [http-nio-11007-exec-5] c.n.u.concurrent.ShutdownEnabledTimer    : Shutdown hook installed for: NFLoadBalancer-PingTimer-auth
2017-12-24 21:55:13.266  INFO 11940 --- [http-nio-11007-exec-5] c.netflix.loadbalancer.BaseLoadBalancer  : Client: auth instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=auth,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2017-12-24 21:55:13.290  INFO 11940 --- [http-nio-11007-exec-5] c.n.l.DynamicServerListLoadBalancer      : Using serverListUpdater PollingServerListUpdater
2017-12-24 21:55:13.293  INFO 11940 --- [http-nio-11007-exec-5] c.netflix.config.ChainedDynamicProperty  : Flipping property: auth.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-24 21:55:13.295  INFO 11940 --- [http-nio-11007-exec-5] c.n.l.DynamicServerListLoadBalancer      : DynamicServerListLoadBalancer for client auth initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=auth,current list of Servers=[Jason:11004],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:Jason:11004;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@2de3b1de
2017-12-24 21:55:14.293  INFO 11940 --- [PollingServerListUpdater-0] c.netflix.config.ChainedDynamicProperty  : Flipping property: auth.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-24 21:56:46.778  INFO 11940 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2017-12-24 21:57:50.186  INFO 11940 --- [http-nio-11007-exec-1] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2eef78db: startup date [Sun Dec 24 21:57:50 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4cd1c1dc
2017-12-24 21:57:50.216  INFO 11940 --- [http-nio-11007-exec-1] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-12-24 21:57:50.242  INFO 11940 --- [http-nio-11007-exec-1] c.netflix.config.ChainedDynamicProperty  : Flipping property: pcpLog.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-24 21:57:50.246  INFO 11940 --- [http-nio-11007-exec-1] c.n.u.concurrent.ShutdownEnabledTimer    : Shutdown hook installed for: NFLoadBalancer-PingTimer-pcpLog
2017-12-24 21:57:50.247  INFO 11940 --- [http-nio-11007-exec-1] c.netflix.loadbalancer.BaseLoadBalancer  : Client: pcpLog instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=pcpLog,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2017-12-24 21:57:50.250  INFO 11940 --- [http-nio-11007-exec-1] c.n.l.DynamicServerListLoadBalancer      : Using serverListUpdater PollingServerListUpdater
2017-12-24 21:57:50.251  INFO 11940 --- [http-nio-11007-exec-1] c.netflix.config.ChainedDynamicProperty  : Flipping property: pcpLog.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-24 21:57:50.252  INFO 11940 --- [http-nio-11007-exec-1] c.n.l.DynamicServerListLoadBalancer      : DynamicServerListLoadBalancer for client pcpLog initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=pcpLog,current list of Servers=[Jason:11008],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:Jason:11008;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@2b2f42a0
2017-12-24 21:57:51.251  INFO 11940 --- [PollingServerListUpdater-0] c.netflix.config.ChainedDynamicProperty  : Flipping property: pcpLog.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-24 22:01:46.783  INFO 11940 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2017-12-24 22:06:46.789  INFO 11940 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2017-12-24 22:11:46.802  INFO 11940 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2017-12-24 22:16:46.807  INFO 11940 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2017-12-24 22:21:46.813  INFO 11940 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2017-12-24 22:26:46.818  INFO 11940 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2017-12-24 22:31:46.822  INFO 11940 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2017-12-24 22:36:46.826  INFO 11940 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2017-12-24 22:41:46.830  INFO 11940 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2017-12-24 22:46:46.834  INFO 11940 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2017-12-24 22:51:46.839  INFO 11940 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2017-12-24 22:56:46.845  INFO 11940 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2017-12-25 23:48:30.966  INFO 10396 --- [main] c.c.c.ConfigServicePropertySourceLocator : Fetching config from server at: http://localhost:8888
2017-12-25 23:48:32.451  WARN 10396 --- [main] c.c.c.ConfigServicePropertySourceLocator : Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/facade/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2017-12-25 23:48:32.456  INFO 10396 --- [main] com.pcp.FacadeBootstrap                  : No active profile set, falling back to default profiles: default
2017-12-25 23:48:32.497  INFO 10396 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5e840abf: startup date [Mon Dec 25 23:48:32 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1205bd62
2017-12-25 23:48:34.749  INFO 10396 --- [main] o.s.b.f.xml.XmlBeanDefinitionReader      : Loading XML bean definitions from class path resource [facade-bean.xml]
2017-12-25 23:48:35.965  INFO 10396 --- [main] o.s.cloud.context.scope.GenericScope     : BeanFactory id=b351ba1f-cc86-3770-a30e-47b8ce2f7e98
2017-12-25 23:48:36.044  INFO 10396 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-12-25 23:48:36.296  INFO 10396 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 
2017-12-25 23:48:36.296  INFO 10396 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'taskExecutor' of type [org.springframework.scheduling.config.TaskExecutorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-25 23:48:36.297  INFO 10396 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'taskExecutor' of type [org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-25 23:48:36.793  INFO 10396 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'taskScheduler'
2017-12-25 23:48:36.794  INFO 10396 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'taskScheduler' of type [org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-25 23:48:36.819  INFO 10396 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IAdvertiseService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-25 23:48:36.823  INFO 10396 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IAuthorityService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-25 23:48:36.825  INFO 10396 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IChannelService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-25 23:48:36.828  INFO 10396 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.ICouponScopeRuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-25 23:48:36.830  INFO 10396 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.ICouponService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-25 23:48:36.835  INFO 10396 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.ICouponTimeRuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-25 23:48:36.837  INFO 10396 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IGradeChangeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-25 23:48:36.840  INFO 10396 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.ILevelManageService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-25 23:48:36.845  INFO 10396 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IMessageService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-25 23:48:36.848  INFO 10396 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IPointStoreService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-25 23:48:36.851  INFO 10396 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IPointStoreTypeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-25 23:48:36.855  INFO 10396 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IQrcodeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-25 23:48:36.858  INFO 10396 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IReportService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-25 23:48:36.861  INFO 10396 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IRewardService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-25 23:48:36.864  INFO 10396 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.ISaverTicketService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-25 23:48:36.870  INFO 10396 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IUserPointHistoryService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-25 23:48:36.873  INFO 10396 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IUserService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-25 23:48:36.876  INFO 10396 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.pos.service.IRuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-25 23:48:36.878  INFO 10396 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.pos.service.IShopService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-25 23:48:36.882  INFO 10396 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.auth.service.IAccountService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-25 23:48:36.888  INFO 10396 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.auth.service.IRoleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-25 23:48:36.892  INFO 10396 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.auth.service.ISuggestionService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-25 23:48:36.897  INFO 10396 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.log.service.ILoginLogService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-25 23:48:36.900  INFO 10396 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.log.service.IOperationLogService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-25 23:48:36.905  INFO 10396 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.log.service.ITransferLogService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-25 23:48:37.043  INFO 10396 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a9e6a8b6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-25 23:48:38.319  INFO 10396 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 11007 (http)
2017-12-25 23:48:38.341  INFO 10396 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2017-12-25 23:48:38.343  INFO 10396 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.15
2017-12-25 23:48:38.678  INFO 10396 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2017-12-25 23:48:38.679  INFO 10396 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 6183 ms
2017-12-25 23:48:39.564  INFO 10396 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/services/*]
2017-12-25 23:48:39.576  INFO 10396 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2017-12-25 23:48:39.577  INFO 10396 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017-12-25 23:48:39.577  INFO 10396 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017-12-25 23:48:39.578  INFO 10396 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2017-12-25 23:48:39.911  INFO 10396 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1ff15a50: startup date [Mon Dec 25 23:48:39 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5e840abf
2017-12-25 23:48:40.153  INFO 10396 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-12-25 23:48:41.307  INFO 10396 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@5ad6cc21: startup date [Mon Dec 25 23:48:41 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5e840abf
2017-12-25 23:48:41.469  INFO 10396 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-12-25 23:48:42.532  INFO 10396 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4e22368c: startup date [Mon Dec 25 23:48:42 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5e840abf
2017-12-25 23:48:42.576  INFO 10396 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-12-25 23:48:42.850  INFO 10396 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@202d9236: startup date [Mon Dec 25 23:48:42 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5e840abf
2017-12-25 23:48:42.919  INFO 10396 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-12-25 23:48:58.263  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5e840abf: startup date [Mon Dec 25 23:48:32 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1205bd62
2017-12-25 23:48:58.461  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/auth/delete/id],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.deleteAccountById(com.pcp.api.auth.domain.AccountInfo)
2017-12-25 23:48:58.464  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/auth/accounts],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.findAccounts(com.pcp.api.auth.domain.AccountInfo)
2017-12-25 23:48:58.464  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/auth/checkLogin],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.accountLogin(com.pcp.api.auth.domain.AccountInfo)
2017-12-25 23:48:58.465  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/auth/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.saveAccount(com.pcp.api.auth.domain.AccountInfo)
2017-12-25 23:48:58.466  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/auth/account/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.findAccountById(java.lang.String)
2017-12-25 23:48:58.467  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/saveShopAccount],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.saveShopAccount(com.pcp.api.auth.domain.AccountInfo)
2017-12-25 23:48:58.468  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.findRoles(com.pcp.api.auth.domain.RoleInfo)
2017-12-25 23:48:58.469  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.saveRole(com.pcp.api.auth.domain.RoleInfo)
2017-12-25 23:48:58.469  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete/roleId],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.deleteRole(com.pcp.api.auth.domain.RoleInfo)
2017-12-25 23:48:58.470  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/roleId/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.findRoleById(java.lang.String)
2017-12-25 23:48:58.470  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/save/RoleAccount],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.saveRoleAccount(com.pcp.api.auth.domain.AccountInfo)
2017-12-25 23:48:58.471  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/roleAccount/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.pageRoleAccount(com.pcp.api.auth.domain.RoleInfo)
2017-12-25 23:48:58.472  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/suggests/save],methods=[PUT]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.saveSuggest(com.pcp.api.auth.domain.SuggestionInfo)
2017-12-25 23:48:58.473  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/suggests/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.findSuggestById(java.lang.String)
2017-12-25 23:48:58.474  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/suggests],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.findSuggests(com.pcp.api.auth.domain.SuggestionInfo)
2017-12-25 23:48:58.545  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointHistory/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findPointHistoryById(java.lang.String)
2017-12-25 23:48:58.546  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointStore/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.savePointStoreInfo(com.pcp.api.crm.domain.PointStoreInfo)
2017-12-25 23:48:58.546  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointStoreId/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findPointStoreById(java.lang.String)
2017-12-25 23:48:58.547  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/advertise/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveAdvertiseInfo(com.pcp.api.crm.domain.AdvertiseInfo)
2017-12-25 23:48:58.548  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/advertise/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findAdvertiseById(java.lang.String)
2017-12-25 23:48:58.549  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/levelManage/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findLevelManageById(java.lang.String)
2017-12-25 23:48:58.550  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/levelManage/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteLevelManage(java.lang.String)
2017-12-25 23:48:58.550  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authority/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveAuthorityInfo(com.pcp.api.crm.domain.AuthorityInfo)
2017-12-25 23:48:58.551  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authorityId/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findAuthorityById(java.lang.String)
2017-12-25 23:48:58.553  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authorityLine/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveAuthorityLine(com.pcp.api.crm.domain.AuthorityLineInfo)
2017-12-25 23:48:58.554  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authorityLine/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteAuthorityLines(java.lang.String)
2017-12-25 23:48:58.555  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authorityLine/find/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findAuthorityLineById(java.lang.String)
2017-12-25 23:48:58.556  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authorityLine/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageAuthorityLine(com.pcp.api.crm.domain.AuthorityLineInfo)
2017-12-25 23:48:58.556  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointStoreType/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pagePointStoreType(com.pcp.api.crm.domain.PointStoreTypeInfo)
2017-12-25 23:48:58.558  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointStoreType/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findPointStoreTypeById(java.lang.String)
2017-12-25 23:48:58.558  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointStoreType/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.savePointStoreType(com.pcp.api.crm.domain.PointStoreTypeInfo)
2017-12-25 23:48:58.560  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/saverTicket/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findSaverTicketById(java.lang.String)
2017-12-25 23:48:58.560  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/saverTicket/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteSaverTicket(java.lang.String)
2017-12-25 23:48:58.561  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/qrcodeChannel/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveQrcodeChannel(com.pcp.api.crm.domain.QrcodeInfo)
2017-12-25 23:48:58.562  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/ChannelQrcode/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageQrcodeChannel(com.pcp.api.crm.domain.ChannelInfo)
2017-12-25 23:48:58.562  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/couponInfo/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findCouponInfoById(java.lang.String)
2017-12-25 23:48:58.563  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/couponScopeRule/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageCouponScopeRule(com.pcp.api.crm.domain.CouponScopeRuleInfo)
2017-12-25 23:48:58.564  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/couponTimeRule/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageCouponTimeRule(com.pcp.api.crm.domain.CouponTimeRuleInfo)
2017-12-25 23:48:58.564  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findUsers(com.pcp.api.crm.domain.UserInfo)
2017-12-25 23:48:58.565  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findUserById(java.lang.String)
2017-12-25 23:48:58.565  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/delete/],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteUserById(com.pcp.api.crm.domain.UserInfo)
2017-12-25 23:48:58.566  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register || /user/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveUser(com.pcp.api.crm.domain.UserInfo)
2017-12-25 23:48:58.566  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/updateCardLevel],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.updateCardLevel(com.pcp.api.crm.domain.UserInfo)
2017-12-25 23:48:58.567  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointHistory/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findPointHistory(com.pcp.api.crm.domain.UserPointHistoryInfo)
2017-12-25 23:48:58.568  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointHistory/save],methods=[PUT]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.savePointHistory(com.pcp.api.crm.domain.UserPointHistoryInfo)
2017-12-25 23:48:58.568  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/findByMobile/{mobile}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findByMobile(java.lang.String)
2017-12-25 23:48:58.568  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointStore/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findPointStores(com.pcp.api.crm.domain.PointStoreInfo)
2017-12-25 23:48:58.569  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointStore/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deletePointStore(java.lang.String)
2017-12-25 23:48:58.570  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/advertise/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageAdvertise(com.pcp.api.crm.domain.AdvertiseInfo)
2017-12-25 23:48:58.571  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/advertise/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteAdvertise(java.lang.String)
2017-12-25 23:48:58.571  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/channel/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveChannel(com.pcp.api.crm.domain.ChannelInfo)
2017-12-25 23:48:58.572  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/channel/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findChannelById(java.lang.String)
2017-12-25 23:48:58.573  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/channel/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageChannel(com.pcp.api.crm.domain.ChannelInfo)
2017-12-25 23:48:58.574  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/channel/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteChannel(java.lang.String)
2017-12-25 23:48:58.574  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/qrcode/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveQrcode(com.pcp.api.crm.domain.QrcodeInfo)
2017-12-25 23:48:58.574  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/qrcode/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findQrcodeById(java.lang.String)
2017-12-25 23:48:58.575  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/qrcode/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageQrcode(com.pcp.api.crm.domain.QrcodeInfo)
2017-12-25 23:48:58.576  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/qrcode/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteQrcode(java.lang.String)
2017-12-25 23:48:58.580  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/levelManage/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveLevelManage(com.pcp.api.crm.domain.LevelManageInfo)
2017-12-25 23:48:58.582  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/levelManage/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageLevelManage(com.pcp.api.crm.domain.LevelManageInfo)
2017-12-25 23:48:58.583  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/reward/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveReward(com.pcp.api.crm.domain.RewardInfo)
2017-12-25 23:48:58.584  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/reward/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findRewardById(java.lang.String)
2017-12-25 23:48:58.585  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/reward/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageReward(com.pcp.api.crm.domain.RewardInfo)
2017-12-25 23:48:58.586  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/reward/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteReward(java.lang.String)
2017-12-25 23:48:58.587  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authority/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageAuthority(com.pcp.api.crm.domain.AuthorityInfo)
2017-12-25 23:48:58.588  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authorityId/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteAuthority(java.lang.String)
2017-12-25 23:48:58.588  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/message/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageMessage(com.pcp.api.crm.domain.MessageInfo)
2017-12-25 23:48:58.590  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/message/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveMessage(com.pcp.api.crm.domain.MessageInfo)
2017-12-25 23:48:58.590  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/messageId/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findMessageById(java.lang.String)
2017-12-25 23:48:58.590  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/deleteMessage/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteMessage(java.lang.String)
2017-12-25 23:48:58.591  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/saverTicket/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageSaverTicket(com.pcp.api.crm.domain.SaverTicketInfo)
2017-12-25 23:48:58.592  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/saverTicket/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveSaverTicket(com.pcp.api.crm.domain.SaverTicketInfo)
2017-12-25 23:48:58.593  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/qrcodeShop/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveQrcodeShop(com.pcp.api.crm.domain.QrcodeInfo)
2017-12-25 23:48:58.594  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findCoupons(com.pcp.api.crm.domain.CouponInfo)
2017-12-25 23:48:58.595  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pms/couponId/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findCouponById(java.lang.String)
2017-12-25 23:48:58.595  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/{code}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findCouponByCode(java.lang.String)
2017-12-25 23:48:58.596  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/typeList],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findCouponTypes(com.pcp.api.crm.domain.CouponTypeInfo)
2017-12-25 23:48:58.596  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/couponType],methods=[PUT]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveCouponType(com.pcp.api.crm.domain.CouponTypeInfo)
2017-12-25 23:48:58.596  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/generate],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.generateCoupons(java.lang.String,java.lang.Integer)
2017-12-25 23:48:58.597  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/delete],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteCoupon(com.pcp.api.crm.domain.CouponTypeInfo)
2017-12-25 23:48:58.598  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/type/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteCouponType(java.lang.String)
2017-12-25 23:48:58.599  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/send],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.sendCoupon(com.pcp.api.crm.domain.CouponInfo)
2017-12-25 23:48:58.600  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/send/history],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findCouponSents(com.pcp.api.crm.domain.CouponSentInfo)
2017-12-25 23:48:58.601  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userLogin],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.userLogin(com.pcp.api.crm.domain.UserInfo)
2017-12-25 23:48:58.601  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/exchange],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.exChangeCoupon(com.pcp.api.crm.domain.CouponInfo)
2017-12-25 23:48:58.602  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/employeeCard],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.employeeCard(com.pcp.api.crm.domain.UserInfo)
2017-12-25 23:48:58.603  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/{userCode}/{code}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.couponVerify(java.lang.String,java.lang.String)
2017-12-25 23:48:58.605  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteCouponById(java.lang.String)
2017-12-25 23:48:58.606  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/mobileCovert],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.mobileCovert(com.pcp.api.crm.domain.UserInfo)
2017-12-25 23:48:58.606  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/scan/qrcode],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.scanQrcode(com.pcp.api.crm.domain.QrcodeInfo)
2017-12-25 23:48:58.611  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/rewards/user],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findRewardUser(com.pcp.api.crm.domain.RewardUserInfo)
2017-12-25 23:48:58.612  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/couponDraw],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.drawCoupon(com.pcp.api.crm.domain.CouponInfo)
2017-12-25 23:48:58.617  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/export/excel],methods=[POST],produces=[application/octet-stream]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.InputStreamResource> com.pcp.facade.ExportFacade.exportExcel(javax.servlet.http.HttpServletRequest)
2017-12-25 23:48:58.622  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/log/transferLog/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.LogFacade.finTransferLogById(java.lang.String)
2017-12-25 23:48:58.623  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/log/saveOperation],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.LogFacade.saveOperationLog(java.util.Map<java.lang.String, java.lang.Object>)
2017-12-25 23:48:58.624  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/logPage/transferLog],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.LogFacade.finTransferLogs(com.pcp.api.log.api.TransferLogInfo)
2017-12-25 23:48:58.626  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/log/findLoginLogs],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.LogFacade.finLoginLogs(com.pcp.api.log.api.LoginLogInfo)
2017-12-25 23:48:58.627  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/log/findOperation],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.LogFacade.finOperationLogs(com.pcp.api.log.api.OperationLogInfo)
2017-12-25 23:48:58.627  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/logSave/transferLog],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.LogFacade.saveTransferLog(com.pcp.api.log.api.TransferLogInfo)
2017-12-25 23:48:58.646  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/log/operationLog/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.LogFacade.finOperationById(java.lang.String)
2017-12-25 23:48:58.647  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/log/saveLoginLog],methods=[POST]}" onto public com.pcp.common.JsonResponse com.pcp.facade.LogFacade.saveLoginLog(java.util.Map<java.lang.String, java.lang.Object>)
2017-12-25 23:48:58.722  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/shop/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.findShopById(java.lang.String)
2017-12-25 23:48:58.722  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/shop/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.saveShop(com.pcp.api.pos.domain.ShopInfo)
2017-12-25 23:48:58.722  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/shop/list],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.findShops(com.pcp.api.pos.domain.ShopInfo)
2017-12-25 23:48:58.743  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/shopCode/code/{code}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.findShopByCode(java.lang.String)
2017-12-25 23:48:58.744  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/rule/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.saveRule(com.pcp.api.pos.domain.RuleInfo)
2017-12-25 23:48:58.746  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/ruleLine/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.saveLineRule(com.pcp.api.pos.domain.RuleLineInfo)
2017-12-25 23:48:58.757  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/ruleLine/list],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.findRuleLines(com.pcp.api.pos.domain.RuleLineInfo)
2017-12-25 23:48:58.758  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/ruleLineId/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.findRuleLineById(java.lang.String)
2017-12-25 23:48:58.773  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/ruleId/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.findRuleById(java.lang.String)
2017-12-25 23:48:58.774  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/rule/list],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.findRules(com.pcp.api.pos.domain.RuleInfo)
2017-12-25 23:48:58.821  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017-12-25 23:48:58.837  INFO 10396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017-12-25 23:48:59.366  INFO 10396 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-12-25 23:48:59.367  INFO 10396 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-12-25 23:48:59.519  INFO 10396 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-12-25 23:49:01.704  WARN 10396 --- [main] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2017-12-25 23:49:01.704  INFO 10396 --- [main] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2017-12-25 23:49:01.771  WARN 10396 --- [main] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2017-12-25 23:49:01.772  INFO 10396 --- [main] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2017-12-25 23:49:02.297  INFO 10396 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2017-12-25 23:49:02.831  INFO 10396 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'environmentManager' has been autodetected for JMX exposure
2017-12-25 23:49:02.835  INFO 10396 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2017-12-25 23:49:02.837  INFO 10396 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'refreshScope' has been autodetected for JMX exposure
2017-12-25 23:49:02.880  INFO 10396 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2017-12-25 23:49:02.979  INFO 10396 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2017-12-25 23:49:03.009  INFO 10396 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=5e840abf,type=ConfigurationPropertiesRebinder]
2017-12-25 23:49:03.248  INFO 10396 --- [main] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 0
2017-12-25 23:49:03.273  INFO 10396 --- [main] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2017-12-25 23:49:03.423  INFO 10396 --- [main] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2017-12-25 23:49:03.932  INFO 10396 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using JSON encoding codec LegacyJacksonJson
2017-12-25 23:49:03.933  INFO 10396 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using JSON decoding codec LegacyJacksonJson
2017-12-25 23:49:04.427  INFO 10396 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using XML encoding codec XStreamXml
2017-12-25 23:49:04.427  INFO 10396 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using XML decoding codec XStreamXml
2017-12-25 23:49:05.268  INFO 10396 --- [main] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2017-12-25 23:49:05.536  INFO 10396 --- [main] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2017-12-25 23:49:05.536  INFO 10396 --- [main] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2017-12-25 23:49:05.536  INFO 10396 --- [main] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2017-12-25 23:49:05.537  INFO 10396 --- [main] com.netflix.discovery.DiscoveryClient    : Application is null : false
2017-12-25 23:49:05.537  INFO 10396 --- [main] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2017-12-25 23:49:05.538  INFO 10396 --- [main] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2017-12-25 23:49:05.538  INFO 10396 --- [main] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2017-12-25 23:49:06.506  INFO 10396 --- [main] com.netflix.discovery.DiscoveryClient    : The response status is 200
2017-12-25 23:49:06.509  INFO 10396 --- [main] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2017-12-25 23:49:06.516  INFO 10396 --- [main] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 12
2017-12-25 23:49:06.527  INFO 10396 --- [main] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1514216946525 with initial instances count: 2
2017-12-25 23:49:06.604  INFO 10396 --- [main] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application facade with eureka with status UP
2017-12-25 23:49:06.607  INFO 10396 --- [main] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1514216946607, current=UP, previous=STARTING]
2017-12-25 23:49:06.612  INFO 10396 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_FACADE/Jason:facade:11007: registering service...
2017-12-25 23:49:06.702  INFO 10396 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_FACADE/Jason:facade:11007 - registration status: 204
2017-12-25 23:49:06.837  INFO 10396 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 11007 (http)
2017-12-25 23:49:06.838  INFO 10396 --- [main] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 11007
2017-12-25 23:49:06.852  INFO 10396 --- [main] com.pcp.FacadeBootstrap                  : Started FacadeBootstrap in 46.177 seconds (JVM running for 52.717)
2017-12-25 23:54:05.593  INFO 10396 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2017-12-25 23:59:05.602  INFO 10396 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2017-12-26 00:04:05.610  INFO 10396 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2017-12-26 00:09:05.618  INFO 10396 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2017-12-26 00:14:04.336  INFO 10396 --- [http-nio-11007-exec-4] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-12-26 00:14:04.337  INFO 10396 --- [http-nio-11007-exec-4] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2017-12-26 00:14:04.441  INFO 10396 --- [http-nio-11007-exec-4] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 104 ms
2017-12-26 00:14:05.358  INFO 10396 --- [http-nio-11007-exec-4] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@75f9e7f3: startup date [Tue Dec 26 00:14:05 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5e840abf
2017-12-26 00:14:05.628  INFO 10396 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2017-12-26 00:14:05.669  INFO 10396 --- [http-nio-11007-exec-4] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-12-26 00:14:06.424  INFO 10396 --- [http-nio-11007-exec-4] c.netflix.config.ChainedDynamicProperty  : Flipping property: auth.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-26 00:14:06.489  INFO 10396 --- [http-nio-11007-exec-4] c.n.u.concurrent.ShutdownEnabledTimer    : Shutdown hook installed for: NFLoadBalancer-PingTimer-auth
2017-12-26 00:14:06.546  INFO 10396 --- [http-nio-11007-exec-4] c.netflix.loadbalancer.BaseLoadBalancer  : Client: auth instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=auth,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2017-12-26 00:14:06.560  INFO 10396 --- [http-nio-11007-exec-4] c.n.l.DynamicServerListLoadBalancer      : Using serverListUpdater PollingServerListUpdater
2017-12-26 00:14:06.615  INFO 10396 --- [http-nio-11007-exec-4] c.netflix.config.ChainedDynamicProperty  : Flipping property: auth.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-26 00:14:06.618  INFO 10396 --- [http-nio-11007-exec-4] c.n.l.DynamicServerListLoadBalancer      : DynamicServerListLoadBalancer for client auth initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=auth,current list of Servers=[Jason:11004],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:Jason:11004;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@31d4ee45
2017-12-26 00:14:07.566  INFO 10396 --- [PollingServerListUpdater-0] c.netflix.config.ChainedDynamicProperty  : Flipping property: auth.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-26 00:14:12.816  INFO 10396 --- [http-nio-11007-exec-8] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@41dddbe1: startup date [Tue Dec 26 00:14:12 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5e840abf
2017-12-26 00:14:12.955  INFO 10396 --- [http-nio-11007-exec-8] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-12-26 00:14:12.998  INFO 10396 --- [http-nio-11007-exec-8] c.netflix.config.ChainedDynamicProperty  : Flipping property: pcpLog.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-26 00:14:13.008  INFO 10396 --- [http-nio-11007-exec-8] c.n.u.concurrent.ShutdownEnabledTimer    : Shutdown hook installed for: NFLoadBalancer-PingTimer-pcpLog
2017-12-26 00:14:13.013  INFO 10396 --- [http-nio-11007-exec-8] c.netflix.loadbalancer.BaseLoadBalancer  : Client: pcpLog instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=pcpLog,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2017-12-26 00:14:13.016  INFO 10396 --- [http-nio-11007-exec-8] c.n.l.DynamicServerListLoadBalancer      : Using serverListUpdater PollingServerListUpdater
2017-12-26 00:14:13.018  INFO 10396 --- [http-nio-11007-exec-8] c.netflix.config.ChainedDynamicProperty  : Flipping property: pcpLog.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-26 00:14:13.025  INFO 10396 --- [http-nio-11007-exec-8] c.n.l.DynamicServerListLoadBalancer      : DynamicServerListLoadBalancer for client pcpLog initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=pcpLog,current list of Servers=[Jason:11008],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:Jason:11008;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@35891fb3
2017-12-26 00:14:14.018  INFO 10396 --- [PollingServerListUpdater-0] c.netflix.config.ChainedDynamicProperty  : Flipping property: pcpLog.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-26 00:19:05.637  INFO 10396 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2017-12-26 00:24:05.645  INFO 10396 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2017-12-26 00:29:05.653  INFO 10396 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2017-12-26 00:33:01.477  INFO 10396 --- [http-nio-11007-exec-5] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4833eee0: startup date [Tue Dec 26 00:33:01 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5e840abf
2017-12-26 00:33:01.633  INFO 10396 --- [http-nio-11007-exec-5] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-12-26 00:33:01.681  INFO 10396 --- [http-nio-11007-exec-5] c.netflix.config.ChainedDynamicProperty  : Flipping property: pos.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-26 00:33:01.683  INFO 10396 --- [http-nio-11007-exec-5] c.n.u.concurrent.ShutdownEnabledTimer    : Shutdown hook installed for: NFLoadBalancer-PingTimer-pos
2017-12-26 00:33:01.686  INFO 10396 --- [http-nio-11007-exec-5] c.netflix.loadbalancer.BaseLoadBalancer  : Client: pos instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=pos,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2017-12-26 00:33:01.692  INFO 10396 --- [http-nio-11007-exec-5] c.n.l.DynamicServerListLoadBalancer      : Using serverListUpdater PollingServerListUpdater
2017-12-26 00:33:01.698  INFO 10396 --- [http-nio-11007-exec-5] c.netflix.config.ChainedDynamicProperty  : Flipping property: pos.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-26 00:33:01.701  INFO 10396 --- [http-nio-11007-exec-5] c.n.l.DynamicServerListLoadBalancer      : DynamicServerListLoadBalancer for client pos initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=pos,current list of Servers=[Jason:11002],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:Jason:11002;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@5e03da32
2017-12-26 00:33:02.702  INFO 10396 --- [PollingServerListUpdater-1] c.netflix.config.ChainedDynamicProperty  : Flipping property: pos.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-26 00:34:02.910  INFO 10396 --- [http-nio-11007-exec-4] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@466a1a20: startup date [Tue Dec 26 00:34:02 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5e840abf
2017-12-26 00:34:03.033  INFO 10396 --- [http-nio-11007-exec-4] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-12-26 00:34:03.082  INFO 10396 --- [http-nio-11007-exec-4] c.netflix.config.ChainedDynamicProperty  : Flipping property: crm.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-26 00:34:03.090  INFO 10396 --- [http-nio-11007-exec-4] c.n.u.concurrent.ShutdownEnabledTimer    : Shutdown hook installed for: NFLoadBalancer-PingTimer-crm
2017-12-26 00:34:03.091  INFO 10396 --- [http-nio-11007-exec-4] c.netflix.loadbalancer.BaseLoadBalancer  : Client: crm instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=crm,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2017-12-26 00:34:03.095  INFO 10396 --- [http-nio-11007-exec-4] c.n.l.DynamicServerListLoadBalancer      : Using serverListUpdater PollingServerListUpdater
2017-12-26 00:34:03.098  INFO 10396 --- [http-nio-11007-exec-4] c.netflix.config.ChainedDynamicProperty  : Flipping property: crm.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-26 00:34:03.102  INFO 10396 --- [http-nio-11007-exec-4] c.n.l.DynamicServerListLoadBalancer      : DynamicServerListLoadBalancer for client crm initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=crm,current list of Servers=[Jason:11009],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:Jason:11009;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@b22a2ab
2017-12-26 00:34:04.097  INFO 10396 --- [PollingServerListUpdater-1] c.netflix.config.ChainedDynamicProperty  : Flipping property: crm.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-26 00:34:05.661  INFO 10396 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2017-12-26 00:39:05.683  INFO 10396 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2017-12-26 22:59:40.088  INFO 6564 --- [main] c.c.c.ConfigServicePropertySourceLocator : Fetching config from server at: http://localhost:8888
2017-12-26 22:59:41.189  WARN 6564 --- [main] c.c.c.ConfigServicePropertySourceLocator : Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/facade/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2017-12-26 22:59:41.201  INFO 6564 --- [main] com.pcp.FacadeBootstrap                  : No active profile set, falling back to default profiles: default
2017-12-26 22:59:41.245  INFO 6564 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@40ab8a8: startup date [Tue Dec 26 22:59:41 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7d286fb6
2017-12-26 22:59:41.931  INFO 6564 --- [main] o.s.b.f.xml.XmlBeanDefinitionReader      : Loading XML bean definitions from class path resource [facade-bean.xml]
2017-12-26 22:59:42.410  INFO 6564 --- [main] o.s.cloud.context.scope.GenericScope     : BeanFactory id=b351ba1f-cc86-3770-a30e-47b8ce2f7e98
2017-12-26 22:59:42.436  INFO 6564 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-12-26 22:59:42.493  INFO 6564 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 
2017-12-26 22:59:42.493  INFO 6564 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'taskExecutor' of type [org.springframework.scheduling.config.TaskExecutorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-26 22:59:42.493  INFO 6564 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'taskExecutor' of type [org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-26 22:59:42.537  INFO 6564 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'taskScheduler'
2017-12-26 22:59:42.537  INFO 6564 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'taskScheduler' of type [org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-26 22:59:42.548  INFO 6564 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IAdvertiseService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-26 22:59:42.550  INFO 6564 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IAuthorityService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-26 22:59:42.551  INFO 6564 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IChannelService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-26 22:59:42.553  INFO 6564 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.ICouponScopeRuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-26 22:59:42.555  INFO 6564 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.ICouponService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-26 22:59:42.556  INFO 6564 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.ICouponTimeRuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-26 22:59:42.558  INFO 6564 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IGradeChangeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-26 22:59:42.559  INFO 6564 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.ILevelManageService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-26 22:59:42.560  INFO 6564 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IMessageService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-26 22:59:42.562  INFO 6564 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IPointStoreService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-26 22:59:42.563  INFO 6564 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IPointStoreTypeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-26 22:59:42.564  INFO 6564 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IQrcodeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-26 22:59:42.566  INFO 6564 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IReportService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-26 22:59:42.567  INFO 6564 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IRewardService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-26 22:59:42.568  INFO 6564 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.ISaverTicketService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-26 22:59:42.571  INFO 6564 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IUserPointHistoryService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-26 22:59:42.573  INFO 6564 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IUserService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-26 22:59:42.575  INFO 6564 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.pos.service.IRuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-26 22:59:42.577  INFO 6564 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.pos.service.IShopService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-26 22:59:42.579  INFO 6564 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.auth.service.IAccountService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-26 22:59:42.582  INFO 6564 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.auth.service.IRoleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-26 22:59:42.584  INFO 6564 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.auth.service.ISuggestionService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-26 22:59:42.586  INFO 6564 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.log.service.ILoginLogService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-26 22:59:42.588  INFO 6564 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.log.service.IOperationLogService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-26 22:59:42.589  INFO 6564 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.log.service.ITransferLogService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-26 22:59:42.658  INFO 6564 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c1a7e2fb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-12-26 22:59:43.065  INFO 6564 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 11007 (http)
2017-12-26 22:59:43.077  INFO 6564 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2017-12-26 22:59:43.078  INFO 6564 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.15
2017-12-26 22:59:43.239  INFO 6564 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2017-12-26 22:59:43.239  INFO 6564 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1994 ms
2017-12-26 22:59:43.479  INFO 6564 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/services/*]
2017-12-26 22:59:43.487  INFO 6564 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2017-12-26 22:59:43.487  INFO 6564 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017-12-26 22:59:43.487  INFO 6564 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017-12-26 22:59:43.488  INFO 6564 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2017-12-26 22:59:43.597  INFO 6564 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2bc7db89: startup date [Tue Dec 26 22:59:43 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@40ab8a8
2017-12-26 22:59:43.639  INFO 6564 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-12-26 22:59:43.984  INFO 6564 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3ba1308d: startup date [Tue Dec 26 22:59:43 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@40ab8a8
2017-12-26 22:59:44.010  INFO 6564 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-12-26 22:59:44.135  INFO 6564 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@35dece42: startup date [Tue Dec 26 22:59:44 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@40ab8a8
2017-12-26 22:59:44.156  INFO 6564 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-12-26 22:59:44.269  INFO 6564 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@5c059a68: startup date [Tue Dec 26 22:59:44 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@40ab8a8
2017-12-26 22:59:44.291  INFO 6564 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-12-26 22:59:45.824  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@40ab8a8: startup date [Tue Dec 26 22:59:41 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7d286fb6
2017-12-26 22:59:45.903  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/auth/accounts],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.findAccounts(com.pcp.api.auth.domain.AccountInfo)
2017-12-26 22:59:45.904  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/auth/checkLogin],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.accountLogin(com.pcp.api.auth.domain.AccountInfo)
2017-12-26 22:59:45.904  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/auth/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.saveAccount(com.pcp.api.auth.domain.AccountInfo)
2017-12-26 22:59:45.905  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/auth/account/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.findAccountById(java.lang.String)
2017-12-26 22:59:45.905  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/saveShopAccount],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.saveShopAccount(com.pcp.api.auth.domain.AccountInfo)
2017-12-26 22:59:45.905  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.findRoles(com.pcp.api.auth.domain.RoleInfo)
2017-12-26 22:59:45.905  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.saveRole(com.pcp.api.auth.domain.RoleInfo)
2017-12-26 22:59:45.906  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete/roleId],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.deleteRole(com.pcp.api.auth.domain.RoleInfo)
2017-12-26 22:59:45.906  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/roleId/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.findRoleById(java.lang.String)
2017-12-26 22:59:45.906  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/save/RoleAccount],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.saveRoleAccount(com.pcp.api.auth.domain.AccountInfo)
2017-12-26 22:59:45.906  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/roleAccount/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.pageRoleAccount(com.pcp.api.auth.domain.RoleInfo)
2017-12-26 22:59:45.906  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/suggests/save],methods=[PUT]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.saveSuggest(com.pcp.api.auth.domain.SuggestionInfo)
2017-12-26 22:59:45.907  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/suggests/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.findSuggestById(java.lang.String)
2017-12-26 22:59:45.907  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/suggests],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.findSuggests(com.pcp.api.auth.domain.SuggestionInfo)
2017-12-26 22:59:45.907  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/auth/delete/id],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.deleteAccountById(com.pcp.api.auth.domain.AccountInfo)
2017-12-26 22:59:45.933  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findUsers(com.pcp.api.crm.domain.UserInfo)
2017-12-26 22:59:45.934  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findUserById(java.lang.String)
2017-12-26 22:59:45.934  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/delete/],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteUserById(com.pcp.api.crm.domain.UserInfo)
2017-12-26 22:59:45.934  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register || /user/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveUser(com.pcp.api.crm.domain.UserInfo)
2017-12-26 22:59:45.934  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/updateCardLevel],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.updateCardLevel(com.pcp.api.crm.domain.UserInfo)
2017-12-26 22:59:45.935  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointHistory/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findPointHistory(com.pcp.api.crm.domain.UserPointHistoryInfo)
2017-12-26 22:59:45.935  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointHistory/save],methods=[PUT]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.savePointHistory(com.pcp.api.crm.domain.UserPointHistoryInfo)
2017-12-26 22:59:45.935  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/findByMobile/{mobile}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findByMobile(java.lang.String)
2017-12-26 22:59:45.935  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointStore/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findPointStores(com.pcp.api.crm.domain.PointStoreInfo)
2017-12-26 22:59:45.936  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointStore/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deletePointStore(java.lang.String)
2017-12-26 22:59:45.936  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/advertise/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageAdvertise(com.pcp.api.crm.domain.AdvertiseInfo)
2017-12-26 22:59:45.936  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/advertise/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteAdvertise(java.lang.String)
2017-12-26 22:59:45.936  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/channel/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveChannel(com.pcp.api.crm.domain.ChannelInfo)
2017-12-26 22:59:45.937  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/channel/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findChannelById(java.lang.String)
2017-12-26 22:59:45.937  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/channel/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageChannel(com.pcp.api.crm.domain.ChannelInfo)
2017-12-26 22:59:45.937  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/channel/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteChannel(java.lang.String)
2017-12-26 22:59:45.937  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/qrcode/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveQrcode(com.pcp.api.crm.domain.QrcodeInfo)
2017-12-26 22:59:45.937  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/qrcode/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findQrcodeById(java.lang.String)
2017-12-26 22:59:45.938  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/qrcode/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageQrcode(com.pcp.api.crm.domain.QrcodeInfo)
2017-12-26 22:59:45.938  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/qrcode/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteQrcode(java.lang.String)
2017-12-26 22:59:45.938  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/levelManage/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveLevelManage(com.pcp.api.crm.domain.LevelManageInfo)
2017-12-26 22:59:45.938  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/levelManage/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageLevelManage(com.pcp.api.crm.domain.LevelManageInfo)
2017-12-26 22:59:45.939  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/reward/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveReward(com.pcp.api.crm.domain.RewardInfo)
2017-12-26 22:59:45.939  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/reward/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findRewardById(java.lang.String)
2017-12-26 22:59:45.939  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/reward/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageReward(com.pcp.api.crm.domain.RewardInfo)
2017-12-26 22:59:45.939  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/reward/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteReward(java.lang.String)
2017-12-26 22:59:45.939  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authority/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageAuthority(com.pcp.api.crm.domain.AuthorityInfo)
2017-12-26 22:59:45.940  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authorityId/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteAuthority(java.lang.String)
2017-12-26 22:59:45.940  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/message/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageMessage(com.pcp.api.crm.domain.MessageInfo)
2017-12-26 22:59:45.940  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/message/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveMessage(com.pcp.api.crm.domain.MessageInfo)
2017-12-26 22:59:45.940  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/messageId/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findMessageById(java.lang.String)
2017-12-26 22:59:45.940  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/deleteMessage/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteMessage(java.lang.String)
2017-12-26 22:59:45.941  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/saverTicket/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageSaverTicket(com.pcp.api.crm.domain.SaverTicketInfo)
2017-12-26 22:59:45.941  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/saverTicket/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveSaverTicket(com.pcp.api.crm.domain.SaverTicketInfo)
2017-12-26 22:59:45.941  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/qrcodeShop/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveQrcodeShop(com.pcp.api.crm.domain.QrcodeInfo)
2017-12-26 22:59:45.941  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findCoupons(com.pcp.api.crm.domain.CouponInfo)
2017-12-26 22:59:45.941  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pms/couponId/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findCouponById(java.lang.String)
2017-12-26 22:59:45.942  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/{code}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findCouponByCode(java.lang.String)
2017-12-26 22:59:45.942  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/typeList],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findCouponTypes(com.pcp.api.crm.domain.CouponTypeInfo)
2017-12-26 22:59:45.942  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/couponType],methods=[PUT]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveCouponType(com.pcp.api.crm.domain.CouponTypeInfo)
2017-12-26 22:59:45.942  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/generate],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.generateCoupons(java.lang.String,java.lang.Integer)
2017-12-26 22:59:45.942  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/delete],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteCoupon(com.pcp.api.crm.domain.CouponTypeInfo)
2017-12-26 22:59:45.942  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/type/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteCouponType(java.lang.String)
2017-12-26 22:59:45.943  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/send],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.sendCoupon(com.pcp.api.crm.domain.CouponInfo)
2017-12-26 22:59:45.943  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/send/history],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findCouponSents(com.pcp.api.crm.domain.CouponSentInfo)
2017-12-26 22:59:45.943  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userLogin],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.userLogin(com.pcp.api.crm.domain.UserInfo)
2017-12-26 22:59:45.943  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/exchange],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.exChangeCoupon(com.pcp.api.crm.domain.CouponInfo)
2017-12-26 22:59:45.944  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/employeeCard],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.employeeCard(com.pcp.api.crm.domain.UserInfo)
2017-12-26 22:59:45.944  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/{userCode}/{code}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.couponVerify(java.lang.String,java.lang.String)
2017-12-26 22:59:45.944  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteCouponById(java.lang.String)
2017-12-26 22:59:45.944  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/mobileCovert],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.mobileCovert(com.pcp.api.crm.domain.UserInfo)
2017-12-26 22:59:45.945  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/scan/qrcode],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.scanQrcode(com.pcp.api.crm.domain.QrcodeInfo)
2017-12-26 22:59:45.945  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/rewards/user],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findRewardUser(com.pcp.api.crm.domain.RewardUserInfo)
2017-12-26 22:59:45.945  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/couponDraw],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.drawCoupon(com.pcp.api.crm.domain.CouponInfo)
2017-12-26 22:59:45.945  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointHistory/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findPointHistoryById(java.lang.String)
2017-12-26 22:59:45.945  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointStore/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.savePointStoreInfo(com.pcp.api.crm.domain.PointStoreInfo)
2017-12-26 22:59:45.946  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointStoreId/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findPointStoreById(java.lang.String)
2017-12-26 22:59:45.946  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/advertise/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveAdvertiseInfo(com.pcp.api.crm.domain.AdvertiseInfo)
2017-12-26 22:59:45.946  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/advertise/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findAdvertiseById(java.lang.String)
2017-12-26 22:59:45.946  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/levelManage/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findLevelManageById(java.lang.String)
2017-12-26 22:59:45.946  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/levelManage/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteLevelManage(java.lang.String)
2017-12-26 22:59:45.947  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authority/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveAuthorityInfo(com.pcp.api.crm.domain.AuthorityInfo)
2017-12-26 22:59:45.947  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authorityId/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findAuthorityById(java.lang.String)
2017-12-26 22:59:45.947  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authorityLine/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveAuthorityLine(com.pcp.api.crm.domain.AuthorityLineInfo)
2017-12-26 22:59:45.947  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authorityLine/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteAuthorityLines(java.lang.String)
2017-12-26 22:59:45.947  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authorityLine/find/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findAuthorityLineById(java.lang.String)
2017-12-26 22:59:45.948  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authorityLine/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageAuthorityLine(com.pcp.api.crm.domain.AuthorityLineInfo)
2017-12-26 22:59:45.948  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointStoreType/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pagePointStoreType(com.pcp.api.crm.domain.PointStoreTypeInfo)
2017-12-26 22:59:45.948  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointStoreType/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findPointStoreTypeById(java.lang.String)
2017-12-26 22:59:45.948  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointStoreType/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.savePointStoreType(com.pcp.api.crm.domain.PointStoreTypeInfo)
2017-12-26 22:59:45.948  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/saverTicket/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findSaverTicketById(java.lang.String)
2017-12-26 22:59:45.949  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/saverTicket/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteSaverTicket(java.lang.String)
2017-12-26 22:59:45.949  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/qrcodeChannel/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveQrcodeChannel(com.pcp.api.crm.domain.QrcodeInfo)
2017-12-26 22:59:45.949  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/ChannelQrcode/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageQrcodeChannel(com.pcp.api.crm.domain.ChannelInfo)
2017-12-26 22:59:45.949  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/couponInfo/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findCouponInfoById(java.lang.String)
2017-12-26 22:59:45.949  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/couponScopeRule/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageCouponScopeRule(com.pcp.api.crm.domain.CouponScopeRuleInfo)
2017-12-26 22:59:45.950  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/couponTimeRule/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageCouponTimeRule(com.pcp.api.crm.domain.CouponTimeRuleInfo)
2017-12-26 22:59:45.950  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/export/excel],methods=[POST],produces=[application/octet-stream]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.InputStreamResource> com.pcp.facade.ExportFacade.exportExcel(javax.servlet.http.HttpServletRequest)
2017-12-26 22:59:45.952  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/log/saveOperation],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.LogFacade.saveOperationLog(java.util.Map<java.lang.String, java.lang.Object>)
2017-12-26 22:59:45.952  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/logPage/transferLog],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.LogFacade.finTransferLogs(com.pcp.api.log.api.TransferLogInfo)
2017-12-26 22:59:45.952  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/log/findLoginLogs],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.LogFacade.finLoginLogs(com.pcp.api.log.api.LoginLogInfo)
2017-12-26 22:59:45.952  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/log/findOperation],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.LogFacade.finOperationLogs(com.pcp.api.log.api.OperationLogInfo)
2017-12-26 22:59:45.952  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/logSave/transferLog],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.LogFacade.saveTransferLog(com.pcp.api.log.api.TransferLogInfo)
2017-12-26 22:59:45.953  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/log/operationLog/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.LogFacade.finOperationById(java.lang.String)
2017-12-26 22:59:45.953  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/log/saveLoginLog],methods=[POST]}" onto public com.pcp.common.JsonResponse com.pcp.facade.LogFacade.saveLoginLog(java.util.Map<java.lang.String, java.lang.Object>)
2017-12-26 22:59:45.953  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/log/transferLog/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.LogFacade.finTransferLogById(java.lang.String)
2017-12-26 22:59:45.955  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/shop/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.findShopById(java.lang.String)
2017-12-26 22:59:45.955  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/shop/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.saveShop(com.pcp.api.pos.domain.ShopInfo)
2017-12-26 22:59:45.955  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/shop/list],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.findShops(com.pcp.api.pos.domain.ShopInfo)
2017-12-26 22:59:45.955  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/shopCode/code/{code}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.findShopByCode(java.lang.String)
2017-12-26 22:59:45.956  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/rule/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.saveRule(com.pcp.api.pos.domain.RuleInfo)
2017-12-26 22:59:45.957  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/ruleLine/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.saveLineRule(com.pcp.api.pos.domain.RuleLineInfo)
2017-12-26 22:59:45.957  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/ruleLine/list],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.findRuleLines(com.pcp.api.pos.domain.RuleLineInfo)
2017-12-26 22:59:45.957  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/ruleLineId/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.findRuleLineById(java.lang.String)
2017-12-26 22:59:45.957  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/ruleId/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.findRuleById(java.lang.String)
2017-12-26 22:59:45.958  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/rule/list],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.findRules(com.pcp.api.pos.domain.RuleInfo)
2017-12-26 22:59:45.960  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017-12-26 22:59:45.960  INFO 6564 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017-12-26 22:59:46.020  INFO 6564 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-12-26 22:59:46.020  INFO 6564 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-12-26 22:59:46.137  INFO 6564 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-12-26 22:59:46.634  WARN 6564 --- [main] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2017-12-26 22:59:46.634  INFO 6564 --- [main] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2017-12-26 22:59:46.639  WARN 6564 --- [main] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2017-12-26 22:59:46.639  INFO 6564 --- [main] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2017-12-26 22:59:46.849  INFO 6564 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2017-12-26 22:59:46.864  INFO 6564 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'environmentManager' has been autodetected for JMX exposure
2017-12-26 22:59:46.867  INFO 6564 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2017-12-26 22:59:46.869  INFO 6564 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'refreshScope' has been autodetected for JMX exposure
2017-12-26 22:59:46.872  INFO 6564 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2017-12-26 22:59:46.888  INFO 6564 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2017-12-26 22:59:46.906  INFO 6564 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=40ab8a8,type=ConfigurationPropertiesRebinder]
2017-12-26 22:59:47.074  INFO 6564 --- [main] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 0
2017-12-26 22:59:47.088  INFO 6564 --- [main] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2017-12-26 22:59:47.157  INFO 6564 --- [main] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2017-12-26 22:59:47.233  INFO 6564 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using JSON encoding codec LegacyJacksonJson
2017-12-26 22:59:47.233  INFO 6564 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using JSON decoding codec LegacyJacksonJson
2017-12-26 22:59:47.388  INFO 6564 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using XML encoding codec XStreamXml
2017-12-26 22:59:47.388  INFO 6564 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using XML decoding codec XStreamXml
2017-12-26 22:59:47.696  INFO 6564 --- [main] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2017-12-26 22:59:47.792  INFO 6564 --- [main] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2017-12-26 22:59:47.792  INFO 6564 --- [main] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2017-12-26 22:59:47.792  INFO 6564 --- [main] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2017-12-26 22:59:47.792  INFO 6564 --- [main] com.netflix.discovery.DiscoveryClient    : Application is null : false
2017-12-26 22:59:47.792  INFO 6564 --- [main] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2017-12-26 22:59:47.792  INFO 6564 --- [main] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2017-12-26 22:59:47.792  INFO 6564 --- [main] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2017-12-26 22:59:47.972  INFO 6564 --- [main] com.netflix.discovery.DiscoveryClient    : The response status is 200
2017-12-26 22:59:47.974  INFO 6564 --- [main] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2017-12-26 22:59:47.978  INFO 6564 --- [main] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 12
2017-12-26 22:59:47.985  INFO 6564 --- [main] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1514300387984 with initial instances count: 4
2017-12-26 22:59:48.024  INFO 6564 --- [main] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application facade with eureka with status UP
2017-12-26 22:59:48.025  INFO 6564 --- [main] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1514300388025, current=UP, previous=STARTING]
2017-12-26 22:59:48.027  INFO 6564 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_FACADE/Jason:facade:11007: registering service...
2017-12-26 22:59:48.078  INFO 6564 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_FACADE/Jason:facade:11007 - registration status: 204
2017-12-26 22:59:48.113  INFO 6564 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 11007 (http)
2017-12-26 22:59:48.114  INFO 6564 --- [main] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 11007
2017-12-26 22:59:48.118  INFO 6564 --- [main] com.pcp.FacadeBootstrap                  : Started FacadeBootstrap in 10.464 seconds (JVM running for 12.282)
2017-12-26 23:00:54.059  INFO 6564 --- [http-nio-11007-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-12-26 23:00:54.060  INFO 6564 --- [http-nio-11007-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2017-12-26 23:00:54.109  INFO 6564 --- [http-nio-11007-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 49 ms
2017-12-26 23:00:54.257  INFO 6564 --- [http-nio-11007-exec-1] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@340c31ba: startup date [Tue Dec 26 23:00:54 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@40ab8a8
2017-12-26 23:00:54.326  INFO 6564 --- [http-nio-11007-exec-1] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-12-26 23:00:54.582  INFO 6564 --- [http-nio-11007-exec-1] c.netflix.config.ChainedDynamicProperty  : Flipping property: crm.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-26 23:00:54.616  INFO 6564 --- [http-nio-11007-exec-1] c.n.u.concurrent.ShutdownEnabledTimer    : Shutdown hook installed for: NFLoadBalancer-PingTimer-crm
2017-12-26 23:00:54.653  INFO 6564 --- [http-nio-11007-exec-1] c.netflix.loadbalancer.BaseLoadBalancer  : Client: crm instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=crm,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2017-12-26 23:00:54.677  INFO 6564 --- [http-nio-11007-exec-1] c.n.l.DynamicServerListLoadBalancer      : Using serverListUpdater PollingServerListUpdater
2017-12-26 23:00:54.723  INFO 6564 --- [http-nio-11007-exec-1] c.netflix.config.ChainedDynamicProperty  : Flipping property: crm.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-26 23:00:54.727  INFO 6564 --- [http-nio-11007-exec-1] c.n.l.DynamicServerListLoadBalancer      : DynamicServerListLoadBalancer for client crm initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=crm,current list of Servers=[Jason:11009],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:Jason:11009;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@577bdb1
2017-12-26 23:00:55.687  INFO 6564 --- [PollingServerListUpdater-0] c.netflix.config.ChainedDynamicProperty  : Flipping property: crm.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-26 23:03:12.652  INFO 6564 --- [http-nio-11007-exec-3] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@70b5067: startup date [Tue Dec 26 23:03:12 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@40ab8a8
2017-12-26 23:03:12.680  INFO 6564 --- [http-nio-11007-exec-3] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-12-26 23:03:12.696  INFO 6564 --- [http-nio-11007-exec-3] c.netflix.config.ChainedDynamicProperty  : Flipping property: auth.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-26 23:03:12.698  INFO 6564 --- [http-nio-11007-exec-3] c.n.u.concurrent.ShutdownEnabledTimer    : Shutdown hook installed for: NFLoadBalancer-PingTimer-auth
2017-12-26 23:03:12.699  INFO 6564 --- [http-nio-11007-exec-3] c.netflix.loadbalancer.BaseLoadBalancer  : Client: auth instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=auth,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2017-12-26 23:03:12.700  INFO 6564 --- [http-nio-11007-exec-3] c.n.l.DynamicServerListLoadBalancer      : Using serverListUpdater PollingServerListUpdater
2017-12-26 23:03:12.702  INFO 6564 --- [http-nio-11007-exec-3] c.netflix.config.ChainedDynamicProperty  : Flipping property: auth.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-26 23:03:12.704  INFO 6564 --- [http-nio-11007-exec-3] c.n.l.DynamicServerListLoadBalancer      : DynamicServerListLoadBalancer for client auth initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=auth,current list of Servers=[Jason:11004],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:Jason:11004;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@4320a859
2017-12-26 23:03:13.701  INFO 6564 --- [PollingServerListUpdater-1] c.netflix.config.ChainedDynamicProperty  : Flipping property: auth.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-26 23:03:19.105  INFO 6564 --- [http-nio-11007-exec-7] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@66956bc: startup date [Tue Dec 26 23:03:19 CST 2017]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@40ab8a8
2017-12-26 23:03:19.131  INFO 6564 --- [http-nio-11007-exec-7] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2017-12-26 23:03:19.144  INFO 6564 --- [http-nio-11007-exec-7] c.netflix.config.ChainedDynamicProperty  : Flipping property: pos.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-26 23:03:19.146  INFO 6564 --- [http-nio-11007-exec-7] c.n.u.concurrent.ShutdownEnabledTimer    : Shutdown hook installed for: NFLoadBalancer-PingTimer-pos
2017-12-26 23:03:19.147  INFO 6564 --- [http-nio-11007-exec-7] c.netflix.loadbalancer.BaseLoadBalancer  : Client: pos instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=pos,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2017-12-26 23:03:19.148  INFO 6564 --- [http-nio-11007-exec-7] c.n.l.DynamicServerListLoadBalancer      : Using serverListUpdater PollingServerListUpdater
2017-12-26 23:03:19.149  INFO 6564 --- [http-nio-11007-exec-7] c.netflix.config.ChainedDynamicProperty  : Flipping property: pos.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-26 23:03:19.150  INFO 6564 --- [http-nio-11007-exec-7] c.n.l.DynamicServerListLoadBalancer      : DynamicServerListLoadBalancer for client pos initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=pos,current list of Servers=[Jason:11002],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:Jason:11002;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@38d04d8c
2017-12-26 23:03:20.149  INFO 6564 --- [PollingServerListUpdater-0] c.netflix.config.ChainedDynamicProperty  : Flipping property: pos.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2017-12-26 23:04:47.802  INFO 6564 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2017-12-26 23:09:47.809  INFO 6564 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2017-12-26 23:14:47.816  INFO 6564 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2017-12-26 23:19:47.837  INFO 6564 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2017-12-26 23:24:47.851  INFO 6564 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2017-12-26 23:29:47.870  INFO 6564 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2017-12-26 23:34:47.876  INFO 6564 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2017-12-26 23:39:47.883  INFO 6564 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2018-03-14 17:21:59.126  INFO 37816 --- [main] c.c.c.ConfigServicePropertySourceLocator : Fetching config from server at: http://localhost:8888
2018-03-14 17:22:00.280  WARN 37816 --- [main] c.c.c.ConfigServicePropertySourceLocator : Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/facade/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2018-03-14 17:22:00.284  INFO 37816 --- [main] com.pcp.FacadeBootstrap                  : No active profile set, falling back to default profiles: default
2018-03-14 17:22:00.315  INFO 37816 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4e38d975: startup date [Wed Mar 14 17:22:00 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3eb81efb
2018-03-14 17:22:01.255  INFO 37816 --- [main] o.s.b.f.xml.XmlBeanDefinitionReader      : Loading XML bean definitions from class path resource [facade-bean.xml]
2018-03-14 17:22:01.883  INFO 37816 --- [main] o.s.cloud.context.scope.GenericScope     : BeanFactory id=b351ba1f-cc86-3770-a30e-47b8ce2f7e98
2018-03-14 17:22:01.918  INFO 37816 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-03-14 17:22:01.992  INFO 37816 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 
2018-03-14 17:22:01.992  INFO 37816 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'taskExecutor' of type [org.springframework.scheduling.config.TaskExecutorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-03-14 17:22:01.992  INFO 37816 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'taskExecutor' of type [org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-03-14 17:22:02.130  INFO 37816 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'taskScheduler'
2018-03-14 17:22:02.131  INFO 37816 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'taskScheduler' of type [org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-03-14 17:22:02.145  INFO 37816 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IAdvertiseService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-03-14 17:22:02.146  INFO 37816 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IAuthorityService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-03-14 17:22:02.148  INFO 37816 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IChannelService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-03-14 17:22:02.150  INFO 37816 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.ICouponScopeRuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-03-14 17:22:02.152  INFO 37816 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.ICouponService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-03-14 17:22:02.154  INFO 37816 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.ICouponTimeRuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-03-14 17:22:02.156  INFO 37816 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IGradeChangeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-03-14 17:22:02.158  INFO 37816 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.ILevelManageService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-03-14 17:22:02.159  INFO 37816 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IMessageService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-03-14 17:22:02.161  INFO 37816 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IPointStoreService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-03-14 17:22:02.162  INFO 37816 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IPointStoreTypeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-03-14 17:22:02.164  INFO 37816 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IQrcodeService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-03-14 17:22:02.166  INFO 37816 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IReportService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-03-14 17:22:02.170  INFO 37816 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IRewardService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-03-14 17:22:02.172  INFO 37816 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.ISaverTicketService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-03-14 17:22:02.177  INFO 37816 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IUserPointHistoryService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-03-14 17:22:02.179  INFO 37816 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.crm.service.IUserService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-03-14 17:22:02.182  INFO 37816 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.pos.service.IRuleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-03-14 17:22:02.186  INFO 37816 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.pos.service.IShopService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-03-14 17:22:02.189  INFO 37816 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.auth.service.IAccountService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-03-14 17:22:02.193  INFO 37816 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.auth.service.IRoleService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-03-14 17:22:02.195  INFO 37816 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.auth.service.ISuggestionService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-03-14 17:22:02.197  INFO 37816 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.log.service.ILoginLogService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-03-14 17:22:02.199  INFO 37816 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.log.service.IOperationLogService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-03-14 17:22:02.201  INFO 37816 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'com.pcp.api.log.service.ITransferLogService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-03-14 17:22:02.280  INFO 37816 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f3747dc1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-03-14 17:22:02.777  INFO 37816 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 11007 (http)
2018-03-14 17:22:02.792  INFO 37816 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2018-03-14 17:22:02.793  INFO 37816 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.15
2018-03-14 17:22:02.997  INFO 37816 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2018-03-14 17:22:02.997  INFO 37816 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2682 ms
2018-03-14 17:22:03.354  INFO 37816 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/services/*]
2018-03-14 17:22:03.363  INFO 37816 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2018-03-14 17:22:03.364  INFO 37816 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-03-14 17:22:03.364  INFO 37816 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-03-14 17:22:03.365  INFO 37816 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2018-03-14 17:22:03.510  INFO 37816 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2ceca2ef: startup date [Wed Mar 14 17:22:03 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4e38d975
2018-03-14 17:22:03.552  INFO 37816 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-03-14 17:22:04.026  INFO 37816 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4f59a516: startup date [Wed Mar 14 17:22:04 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4e38d975
2018-03-14 17:22:04.055  INFO 37816 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-03-14 17:22:04.242  INFO 37816 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@202d9236: startup date [Wed Mar 14 17:22:04 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4e38d975
2018-03-14 17:22:04.276  INFO 37816 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-03-14 17:22:04.430  INFO 37816 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@7f3ca64a: startup date [Wed Mar 14 17:22:04 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4e38d975
2018-03-14 17:22:04.462  INFO 37816 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-03-14 17:22:07.740  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4e38d975: startup date [Wed Mar 14 17:22:00 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3eb81efb
2018-03-14 17:22:07.838  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/suggests],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.findSuggests(com.pcp.api.auth.domain.SuggestionInfo)
2018-03-14 17:22:07.839  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/auth/delete/id],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.deleteAccountById(com.pcp.api.auth.domain.AccountInfo)
2018-03-14 17:22:07.840  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/auth/accounts],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.findAccounts(com.pcp.api.auth.domain.AccountInfo)
2018-03-14 17:22:07.840  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/auth/checkLogin],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.accountLogin(com.pcp.api.auth.domain.AccountInfo)
2018-03-14 17:22:07.840  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/auth/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.saveAccount(com.pcp.api.auth.domain.AccountInfo)
2018-03-14 17:22:07.840  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/auth/account/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.findAccountById(java.lang.String)
2018-03-14 17:22:07.840  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/saveShopAccount],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.saveShopAccount(com.pcp.api.auth.domain.AccountInfo)
2018-03-14 17:22:07.841  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.findRoles(com.pcp.api.auth.domain.RoleInfo)
2018-03-14 17:22:07.841  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.saveRole(com.pcp.api.auth.domain.RoleInfo)
2018-03-14 17:22:07.841  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/delete/roleId],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.deleteRole(com.pcp.api.auth.domain.RoleInfo)
2018-03-14 17:22:07.841  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/roleId/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.findRoleById(java.lang.String)
2018-03-14 17:22:07.842  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/save/RoleAccount],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.saveRoleAccount(com.pcp.api.auth.domain.AccountInfo)
2018-03-14 17:22:07.842  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/roleAccount/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.pageRoleAccount(com.pcp.api.auth.domain.RoleInfo)
2018-03-14 17:22:07.842  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/suggests/save],methods=[PUT]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.saveSuggest(com.pcp.api.auth.domain.SuggestionInfo)
2018-03-14 17:22:07.843  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/suggests/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.AuthFacade.findSuggestById(java.lang.String)
2018-03-14 17:22:07.880  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointHistory/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findPointHistoryById(java.lang.String)
2018-03-14 17:22:07.881  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointStore/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.savePointStoreInfo(com.pcp.api.crm.domain.PointStoreInfo)
2018-03-14 17:22:07.881  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointStoreId/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findPointStoreById(java.lang.String)
2018-03-14 17:22:07.881  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/advertise/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveAdvertiseInfo(com.pcp.api.crm.domain.AdvertiseInfo)
2018-03-14 17:22:07.882  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/advertise/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findAdvertiseById(java.lang.String)
2018-03-14 17:22:07.882  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/levelManage/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findLevelManageById(java.lang.String)
2018-03-14 17:22:07.882  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/levelManage/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteLevelManage(java.lang.String)
2018-03-14 17:22:07.883  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authority/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveAuthorityInfo(com.pcp.api.crm.domain.AuthorityInfo)
2018-03-14 17:22:07.883  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authorityId/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findAuthorityById(java.lang.String)
2018-03-14 17:22:07.883  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authorityLine/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveAuthorityLine(com.pcp.api.crm.domain.AuthorityLineInfo)
2018-03-14 17:22:07.884  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authorityLine/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteAuthorityLines(java.lang.String)
2018-03-14 17:22:07.884  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authorityLine/find/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findAuthorityLineById(java.lang.String)
2018-03-14 17:22:07.884  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authorityLine/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageAuthorityLine(com.pcp.api.crm.domain.AuthorityLineInfo)
2018-03-14 17:22:07.885  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointStoreType/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pagePointStoreType(com.pcp.api.crm.domain.PointStoreTypeInfo)
2018-03-14 17:22:07.885  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointStoreType/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findPointStoreTypeById(java.lang.String)
2018-03-14 17:22:07.885  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointStoreType/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.savePointStoreType(com.pcp.api.crm.domain.PointStoreTypeInfo)
2018-03-14 17:22:07.885  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/saverTicket/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findSaverTicketById(java.lang.String)
2018-03-14 17:22:07.886  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/saverTicket/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteSaverTicket(java.lang.String)
2018-03-14 17:22:07.886  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/qrcodeChannel/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveQrcodeChannel(com.pcp.api.crm.domain.QrcodeInfo)
2018-03-14 17:22:07.886  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/ChannelQrcode/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageQrcodeChannel(com.pcp.api.crm.domain.ChannelInfo)
2018-03-14 17:22:07.886  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/couponInfo/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findCouponInfoById(java.lang.String)
2018-03-14 17:22:07.887  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/couponScopeRule/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageCouponScopeRule(com.pcp.api.crm.domain.CouponScopeRuleInfo)
2018-03-14 17:22:07.887  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/couponTimeRule/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageCouponTimeRule(com.pcp.api.crm.domain.CouponTimeRuleInfo)
2018-03-14 17:22:07.887  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findUsers(com.pcp.api.crm.domain.UserInfo)
2018-03-14 17:22:07.888  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findUserById(java.lang.String)
2018-03-14 17:22:07.888  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/delete/],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteUserById(com.pcp.api.crm.domain.UserInfo)
2018-03-14 17:22:07.888  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/register || /user/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveUser(com.pcp.api.crm.domain.UserInfo)
2018-03-14 17:22:07.888  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/updateCardLevel],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.updateCardLevel(com.pcp.api.crm.domain.UserInfo)
2018-03-14 17:22:07.889  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointHistory/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findPointHistory(com.pcp.api.crm.domain.UserPointHistoryInfo)
2018-03-14 17:22:07.889  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointHistory/save],methods=[PUT]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.savePointHistory(com.pcp.api.crm.domain.UserPointHistoryInfo)
2018-03-14 17:22:07.889  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/findByMobile/{mobile}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findByMobile(java.lang.String)
2018-03-14 17:22:07.889  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointStore/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findPointStores(com.pcp.api.crm.domain.PointStoreInfo)
2018-03-14 17:22:07.889  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pointStore/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deletePointStore(java.lang.String)
2018-03-14 17:22:07.890  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/advertise/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageAdvertise(com.pcp.api.crm.domain.AdvertiseInfo)
2018-03-14 17:22:07.890  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/advertise/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteAdvertise(java.lang.String)
2018-03-14 17:22:07.890  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/channel/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveChannel(com.pcp.api.crm.domain.ChannelInfo)
2018-03-14 17:22:07.890  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/channel/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findChannelById(java.lang.String)
2018-03-14 17:22:07.891  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/channel/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageChannel(com.pcp.api.crm.domain.ChannelInfo)
2018-03-14 17:22:07.891  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/channel/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteChannel(java.lang.String)
2018-03-14 17:22:07.891  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/qrcode/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveQrcode(com.pcp.api.crm.domain.QrcodeInfo)
2018-03-14 17:22:07.891  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/qrcode/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findQrcodeById(java.lang.String)
2018-03-14 17:22:07.891  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/qrcode/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageQrcode(com.pcp.api.crm.domain.QrcodeInfo)
2018-03-14 17:22:07.892  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/qrcode/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteQrcode(java.lang.String)
2018-03-14 17:22:07.892  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/levelManage/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveLevelManage(com.pcp.api.crm.domain.LevelManageInfo)
2018-03-14 17:22:07.892  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/levelManage/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageLevelManage(com.pcp.api.crm.domain.LevelManageInfo)
2018-03-14 17:22:07.892  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/reward/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveReward(com.pcp.api.crm.domain.RewardInfo)
2018-03-14 17:22:07.893  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/reward/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findRewardById(java.lang.String)
2018-03-14 17:22:07.893  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/reward/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageReward(com.pcp.api.crm.domain.RewardInfo)
2018-03-14 17:22:07.893  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/reward/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteReward(java.lang.String)
2018-03-14 17:22:07.894  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authority/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageAuthority(com.pcp.api.crm.domain.AuthorityInfo)
2018-03-14 17:22:07.894  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/authorityId/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteAuthority(java.lang.String)
2018-03-14 17:22:07.895  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/message/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageMessage(com.pcp.api.crm.domain.MessageInfo)
2018-03-14 17:22:07.895  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/message/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveMessage(com.pcp.api.crm.domain.MessageInfo)
2018-03-14 17:22:07.895  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/messageId/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findMessageById(java.lang.String)
2018-03-14 17:22:07.895  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/deleteMessage/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteMessage(java.lang.String)
2018-03-14 17:22:07.896  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/saverTicket/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.pageSaverTicket(com.pcp.api.crm.domain.SaverTicketInfo)
2018-03-14 17:22:07.896  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/saverTicket/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveSaverTicket(com.pcp.api.crm.domain.SaverTicketInfo)
2018-03-14 17:22:07.896  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/qrcodeShop/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveQrcodeShop(com.pcp.api.crm.domain.QrcodeInfo)
2018-03-14 17:22:07.896  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/page],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findCoupons(com.pcp.api.crm.domain.CouponInfo)
2018-03-14 17:22:07.897  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pms/couponId/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findCouponById(java.lang.String)
2018-03-14 17:22:07.897  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/{code}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findCouponByCode(java.lang.String)
2018-03-14 17:22:07.897  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/typeList],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findCouponTypes(com.pcp.api.crm.domain.CouponTypeInfo)
2018-03-14 17:22:07.897  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/couponType],methods=[PUT]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.saveCouponType(com.pcp.api.crm.domain.CouponTypeInfo)
2018-03-14 17:22:07.898  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/generate],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.generateCoupons(java.lang.String,java.lang.Integer)
2018-03-14 17:22:07.898  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/delete],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteCoupon(com.pcp.api.crm.domain.CouponTypeInfo)
2018-03-14 17:22:07.898  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/type/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteCouponType(java.lang.String)
2018-03-14 17:22:07.898  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/send],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.sendCoupon(com.pcp.api.crm.domain.CouponInfo)
2018-03-14 17:22:07.898  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/send/history],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findCouponSents(com.pcp.api.crm.domain.CouponSentInfo)
2018-03-14 17:22:07.899  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/userLogin],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.userLogin(com.pcp.api.crm.domain.UserInfo)
2018-03-14 17:22:07.899  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/exchange],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.exChangeCoupon(com.pcp.api.crm.domain.CouponInfo)
2018-03-14 17:22:07.899  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/employeeCard],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.employeeCard(com.pcp.api.crm.domain.UserInfo)
2018-03-14 17:22:07.899  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/{userCode}/{code}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.couponVerify(java.lang.String,java.lang.String)
2018-03-14 17:22:07.899  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/coupon/delete/{id}],methods=[DELETE]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.deleteCouponById(java.lang.String)
2018-03-14 17:22:07.900  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/mobileCovert],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.mobileCovert(com.pcp.api.crm.domain.UserInfo)
2018-03-14 17:22:07.900  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/scan/qrcode],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.scanQrcode(com.pcp.api.crm.domain.QrcodeInfo)
2018-03-14 17:22:07.900  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/rewards/user],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.findRewardUser(com.pcp.api.crm.domain.RewardUserInfo)
2018-03-14 17:22:07.900  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/couponDraw],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.CrmFacade.drawCoupon(com.pcp.api.crm.domain.CouponInfo)
2018-03-14 17:22:07.901  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/export/excel],methods=[POST],produces=[application/octet-stream]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.InputStreamResource> com.pcp.facade.ExportFacade.exportExcel(javax.servlet.http.HttpServletRequest)
2018-03-14 17:22:07.902  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/log/transferLog/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.LogFacade.finTransferLogById(java.lang.String)
2018-03-14 17:22:07.903  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/log/saveOperation],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.LogFacade.saveOperationLog(java.util.Map<java.lang.String, java.lang.Object>)
2018-03-14 17:22:07.903  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/logPage/transferLog],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.LogFacade.finTransferLogs(com.pcp.api.log.api.TransferLogInfo)
2018-03-14 17:22:07.903  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/log/findLoginLogs],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.LogFacade.finLoginLogs(com.pcp.api.log.api.LoginLogInfo)
2018-03-14 17:22:07.903  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/log/findOperation],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.LogFacade.finOperationLogs(com.pcp.api.log.api.OperationLogInfo)
2018-03-14 17:22:07.904  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/logSave/transferLog],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.LogFacade.saveTransferLog(com.pcp.api.log.api.TransferLogInfo)
2018-03-14 17:22:07.904  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/log/operationLog/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.LogFacade.finOperationById(java.lang.String)
2018-03-14 17:22:07.904  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/log/saveLoginLog],methods=[POST]}" onto public com.pcp.common.JsonResponse com.pcp.facade.LogFacade.saveLoginLog(java.util.Map<java.lang.String, java.lang.Object>)
2018-03-14 17:22:07.906  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/shop/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.findShopById(java.lang.String)
2018-03-14 17:22:07.906  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/shop/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.saveShop(com.pcp.api.pos.domain.ShopInfo)
2018-03-14 17:22:07.906  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/shop/list],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.findShops(com.pcp.api.pos.domain.ShopInfo)
2018-03-14 17:22:07.906  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/shopCode/code/{code}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.findShopByCode(java.lang.String)
2018-03-14 17:22:07.906  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/rule/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.saveRule(com.pcp.api.pos.domain.RuleInfo)
2018-03-14 17:22:07.908  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/ruleLine/save],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.saveLineRule(com.pcp.api.pos.domain.RuleLineInfo)
2018-03-14 17:22:07.908  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/ruleLine/list],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.findRuleLines(com.pcp.api.pos.domain.RuleLineInfo)
2018-03-14 17:22:07.908  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/ruleLineId/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.findRuleLineById(java.lang.String)
2018-03-14 17:22:07.908  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/ruleId/{id}],methods=[GET]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.findRuleById(java.lang.String)
2018-03-14 17:22:07.909  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/rule/list],methods=[POST]}" onto public com.pcp.common.Response com.pcp.facade.PosFacade.findRules(com.pcp.api.pos.domain.RuleInfo)
2018-03-14 17:22:07.911  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-03-14 17:22:07.912  INFO 37816 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-03-14 17:22:07.998  INFO 37816 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-14 17:22:07.998  INFO 37816 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-14 17:22:08.080  INFO 37816 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-03-14 17:22:08.691  WARN 37816 --- [main] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2018-03-14 17:22:08.691  INFO 37816 --- [main] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-03-14 17:22:08.701  WARN 37816 --- [main] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2018-03-14 17:22:08.702  INFO 37816 --- [main] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-03-14 17:22:08.983  INFO 37816 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-03-14 17:22:09.001  INFO 37816 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-03-14 17:22:09.003  INFO 37816 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-03-14 17:22:09.004  INFO 37816 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-03-14 17:22:09.007  INFO 37816 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-03-14 17:22:09.241  INFO 37816 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-03-14 17:22:09.270  INFO 37816 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=4e38d975,type=ConfigurationPropertiesRebinder]
2018-03-14 17:22:09.540  INFO 37816 --- [main] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 0
2018-03-14 17:22:09.560  INFO 37816 --- [main] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2018-03-14 17:22:10.057  INFO 37816 --- [main] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2018-03-14 17:22:10.254  INFO 37816 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using JSON encoding codec LegacyJacksonJson
2018-03-14 17:22:10.254  INFO 37816 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using JSON decoding codec LegacyJacksonJson
2018-03-14 17:22:10.532  INFO 37816 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using XML encoding codec XStreamXml
2018-03-14 17:22:10.532  INFO 37816 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using XML decoding codec XStreamXml
2018-03-14 17:22:10.902  INFO 37816 --- [main] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2018-03-14 17:22:11.070  INFO 37816 --- [main] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2018-03-14 17:22:11.071  INFO 37816 --- [main] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2018-03-14 17:22:11.071  INFO 37816 --- [main] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2018-03-14 17:22:11.072  INFO 37816 --- [main] com.netflix.discovery.DiscoveryClient    : Application is null : false
2018-03-14 17:22:11.072  INFO 37816 --- [main] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2018-03-14 17:22:11.072  INFO 37816 --- [main] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2018-03-14 17:22:11.072  INFO 37816 --- [main] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2018-03-14 17:22:11.367  INFO 37816 --- [main] com.netflix.discovery.DiscoveryClient    : The response status is 200
2018-03-14 17:22:11.370  INFO 37816 --- [main] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2018-03-14 17:22:11.374  INFO 37816 --- [main] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 12
2018-03-14 17:22:11.379  INFO 37816 --- [main] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1521019331378 with initial instances count: 3
2018-03-14 17:22:11.415  INFO 37816 --- [main] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application facade with eureka with status UP
2018-03-14 17:22:11.417  INFO 37816 --- [main] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1521019331417, current=UP, previous=STARTING]
2018-03-14 17:22:11.421  INFO 37816 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_FACADE/Jason:facade:11007: registering service...
2018-03-14 17:22:11.477  INFO 37816 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_FACADE/Jason:facade:11007 - registration status: 204
2018-03-14 17:22:11.547  INFO 37816 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 11007 (http)
2018-03-14 17:22:11.548  INFO 37816 --- [main] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 11007
2018-03-14 17:22:11.553  INFO 37816 --- [main] com.pcp.FacadeBootstrap                  : Started FacadeBootstrap in 16.204 seconds (JVM running for 17.933)
2018-03-14 17:22:38.701  INFO 37816 --- [http-nio-11007-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-03-14 17:22:38.702  INFO 37816 --- [http-nio-11007-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2018-03-14 17:22:38.745  INFO 37816 --- [http-nio-11007-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 43 ms
2018-03-14 17:22:38.879  INFO 37816 --- [http-nio-11007-exec-1] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@643a7efe: startup date [Wed Mar 14 17:22:38 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4e38d975
2018-03-14 17:22:38.959  INFO 37816 --- [http-nio-11007-exec-1] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-03-14 17:22:39.287  INFO 37816 --- [http-nio-11007-exec-1] c.netflix.config.ChainedDynamicProperty  : Flipping property: auth.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-03-14 17:22:39.321  INFO 37816 --- [http-nio-11007-exec-1] c.n.u.concurrent.ShutdownEnabledTimer    : Shutdown hook installed for: NFLoadBalancer-PingTimer-auth
2018-03-14 17:22:39.364  INFO 37816 --- [http-nio-11007-exec-1] c.netflix.loadbalancer.BaseLoadBalancer  : Client: auth instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=auth,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-03-14 17:22:39.373  INFO 37816 --- [http-nio-11007-exec-1] c.n.l.DynamicServerListLoadBalancer      : Using serverListUpdater PollingServerListUpdater
2018-03-14 17:22:39.412  INFO 37816 --- [http-nio-11007-exec-1] c.netflix.config.ChainedDynamicProperty  : Flipping property: auth.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-03-14 17:22:39.415  INFO 37816 --- [http-nio-11007-exec-1] c.n.l.DynamicServerListLoadBalancer      : DynamicServerListLoadBalancer for client auth initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=auth,current list of Servers=[Jason:11004],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:Jason:11004;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@77d44d5b
2018-03-14 17:22:40.378  INFO 37816 --- [PollingServerListUpdater-0] c.netflix.config.ChainedDynamicProperty  : Flipping property: auth.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-03-14 17:22:45.491  INFO 37816 --- [http-nio-11007-exec-2] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@71087183: startup date [Wed Mar 14 17:22:45 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4e38d975
2018-03-14 17:22:45.556  INFO 37816 --- [http-nio-11007-exec-2] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-03-14 17:22:45.582  INFO 37816 --- [http-nio-11007-exec-2] c.netflix.config.ChainedDynamicProperty  : Flipping property: crm.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-03-14 17:22:45.585  INFO 37816 --- [http-nio-11007-exec-2] c.n.u.concurrent.ShutdownEnabledTimer    : Shutdown hook installed for: NFLoadBalancer-PingTimer-crm
2018-03-14 17:22:45.586  INFO 37816 --- [http-nio-11007-exec-2] c.netflix.loadbalancer.BaseLoadBalancer  : Client: crm instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=crm,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-03-14 17:22:45.589  INFO 37816 --- [http-nio-11007-exec-2] c.n.l.DynamicServerListLoadBalancer      : Using serverListUpdater PollingServerListUpdater
2018-03-14 17:22:45.592  INFO 37816 --- [http-nio-11007-exec-2] c.netflix.config.ChainedDynamicProperty  : Flipping property: crm.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-03-14 17:22:45.593  INFO 37816 --- [http-nio-11007-exec-2] c.n.l.DynamicServerListLoadBalancer      : DynamicServerListLoadBalancer for client crm initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=crm,current list of Servers=[Jason:11009],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:Jason:11009;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@6e21dc17
2018-03-14 17:22:46.592  INFO 37816 --- [PollingServerListUpdater-0] c.netflix.config.ChainedDynamicProperty  : Flipping property: crm.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-03-14 17:22:49.128  INFO 37816 --- [http-nio-11007-exec-3] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@5b11f144: startup date [Wed Mar 14 17:22:49 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4e38d975
2018-03-14 17:22:49.193  INFO 37816 --- [http-nio-11007-exec-3] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-03-14 17:22:49.222  INFO 37816 --- [http-nio-11007-exec-3] c.netflix.config.ChainedDynamicProperty  : Flipping property: pos.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-03-14 17:22:49.226  INFO 37816 --- [http-nio-11007-exec-3] c.n.u.concurrent.ShutdownEnabledTimer    : Shutdown hook installed for: NFLoadBalancer-PingTimer-pos
2018-03-14 17:22:49.230  INFO 37816 --- [http-nio-11007-exec-3] c.netflix.loadbalancer.BaseLoadBalancer  : Client: pos instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=pos,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-03-14 17:22:49.232  INFO 37816 --- [http-nio-11007-exec-3] c.n.l.DynamicServerListLoadBalancer      : Using serverListUpdater PollingServerListUpdater
2018-03-14 17:22:49.233  INFO 37816 --- [http-nio-11007-exec-3] c.n.l.DynamicServerListLoadBalancer      : DynamicServerListLoadBalancer for client pos initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=pos,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@60a4b4d6
2018-03-14 17:22:49.358 ERROR 37816 --- [http-nio-11007-exec-3] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: pos] with root cause

com.netflix.client.ClientException: Load balancer does not have available server for client: pos
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.2.jar:2.2.2]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.2.jar:2.2.2]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.2.jar:2.2.2]
	at rx.Observable.unsafeSubscribe(Observable.java:10211) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.Observable.unsafeSubscribe(Observable.java:10211) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.Observable.subscribe(Observable.java:10307) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.Observable.subscribe(Observable.java:10274) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:445) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:342) ~[rxjava-1.1.10.jar:1.1.10]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:117) ~[ribbon-loadbalancer-2.2.2.jar:2.2.2]
	at org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-netflix-core-1.3.1.RELEASE.jar:1.3.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.0.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.0.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.0.jar:na]
	at com.sun.proxy.$Proxy88.findShops(Unknown Source) ~[na:na]
	at com.pcp.facade.PosFacade.findShops(PosFacade.java:69) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_31]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_31]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_31]
	at java.lang.reflect.Method.invoke(Method.java:483) ~[na:1.8.0_31]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) ~[tomcat-embed-websocket-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_31]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_31]

2018-03-14 17:22:51.177  INFO 37816 --- [http-nio-11007-exec-4] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@291757c4: startup date [Wed Mar 14 17:22:51 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4e38d975
2018-03-14 17:22:51.246  INFO 37816 --- [http-nio-11007-exec-4] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-03-14 17:22:51.282  INFO 37816 --- [http-nio-11007-exec-4] c.netflix.config.ChainedDynamicProperty  : Flipping property: pcpLog.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-03-14 17:22:51.285  INFO 37816 --- [http-nio-11007-exec-4] c.n.u.concurrent.ShutdownEnabledTimer    : Shutdown hook installed for: NFLoadBalancer-PingTimer-pcpLog
2018-03-14 17:22:51.286  INFO 37816 --- [http-nio-11007-exec-4] c.netflix.loadbalancer.BaseLoadBalancer  : Client: pcpLog instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=pcpLog,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-03-14 17:22:51.292  INFO 37816 --- [http-nio-11007-exec-4] c.n.l.DynamicServerListLoadBalancer      : Using serverListUpdater PollingServerListUpdater
2018-03-14 17:22:51.299  INFO 37816 --- [http-nio-11007-exec-4] c.netflix.config.ChainedDynamicProperty  : Flipping property: pcpLog.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-03-14 17:22:51.301  INFO 37816 --- [http-nio-11007-exec-4] c.n.l.DynamicServerListLoadBalancer      : DynamicServerListLoadBalancer for client pcpLog initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=pcpLog,current list of Servers=[Jason:11008],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:Jason:11008;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@6283d1a2
2018-03-14 17:22:52.295  INFO 37816 --- [PollingServerListUpdater-0] c.netflix.config.ChainedDynamicProperty  : Flipping property: pcpLog.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-03-14 17:22:55.800 ERROR 37816 --- [http-nio-11007-exec-7] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: pos] with root cause

com.netflix.client.ClientException: Load balancer does not have available server for client: pos
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.2.jar:2.2.2]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.2.jar:2.2.2]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.2.jar:2.2.2]
	at rx.Observable.unsafeSubscribe(Observable.java:10211) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.Observable.unsafeSubscribe(Observable.java:10211) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.Observable.subscribe(Observable.java:10307) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.Observable.subscribe(Observable.java:10274) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:445) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:342) ~[rxjava-1.1.10.jar:1.1.10]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:117) ~[ribbon-loadbalancer-2.2.2.jar:2.2.2]
	at org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-netflix-core-1.3.1.RELEASE.jar:1.3.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.0.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.0.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.0.jar:na]
	at com.sun.proxy.$Proxy88.findShops(Unknown Source) ~[na:na]
	at com.pcp.facade.PosFacade.findShops(PosFacade.java:69) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_31]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_31]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_31]
	at java.lang.reflect.Method.invoke(Method.java:483) ~[na:1.8.0_31]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) ~[tomcat-embed-websocket-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_31]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_31]

2018-03-14 17:22:57.672 ERROR 37816 --- [http-nio-11007-exec-9] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: pos] with root cause

com.netflix.client.ClientException: Load balancer does not have available server for client: pos
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.2.jar:2.2.2]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.2.jar:2.2.2]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.2.jar:2.2.2]
	at rx.Observable.unsafeSubscribe(Observable.java:10211) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.Observable.unsafeSubscribe(Observable.java:10211) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.Observable.subscribe(Observable.java:10307) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.Observable.subscribe(Observable.java:10274) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:445) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:342) ~[rxjava-1.1.10.jar:1.1.10]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:117) ~[ribbon-loadbalancer-2.2.2.jar:2.2.2]
	at org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-netflix-core-1.3.1.RELEASE.jar:1.3.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.0.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.0.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.0.jar:na]
	at com.sun.proxy.$Proxy88.findShops(Unknown Source) ~[na:na]
	at com.pcp.facade.PosFacade.findShops(PosFacade.java:69) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_31]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_31]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_31]
	at java.lang.reflect.Method.invoke(Method.java:483) ~[na:1.8.0_31]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) ~[tomcat-embed-websocket-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_31]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_31]

2018-03-14 17:23:03.368 ERROR 37816 --- [http-nio-11007-exec-3] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: pos] with root cause

com.netflix.client.ClientException: Load balancer does not have available server for client: pos
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.2.jar:2.2.2]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.2.jar:2.2.2]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.2.jar:2.2.2]
	at rx.Observable.unsafeSubscribe(Observable.java:10211) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.Observable.unsafeSubscribe(Observable.java:10211) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.Observable.subscribe(Observable.java:10307) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.Observable.subscribe(Observable.java:10274) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:445) ~[rxjava-1.1.10.jar:1.1.10]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:342) ~[rxjava-1.1.10.jar:1.1.10]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:117) ~[ribbon-loadbalancer-2.2.2.jar:2.2.2]
	at org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-netflix-core-1.3.1.RELEASE.jar:1.3.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.0.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.0.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.0.jar:na]
	at com.sun.proxy.$Proxy88.findShops(Unknown Source) ~[na:na]
	at com.pcp.facade.PosFacade.findShops(PosFacade.java:69) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_31]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_31]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_31]
	at java.lang.reflect.Method.invoke(Method.java:483) ~[na:1.8.0_31]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) ~[tomcat-embed-websocket-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) ~[tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_31]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_31]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.15.jar:8.5.15]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_31]

2018-03-14 17:23:20.237  INFO 37816 --- [PollingServerListUpdater-1] c.netflix.config.ChainedDynamicProperty  : Flipping property: pos.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-03-14 17:27:11.083  INFO 37816 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
